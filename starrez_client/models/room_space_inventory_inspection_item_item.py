# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class RoomSpaceInventoryInspectionItemItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'room_space_inventory_inspection_item_id': 'int',
        'room_space_inventory_inspection_id': 'int',
        'room_space_inventory_id': 'int',
        'room_space_inventory_condition_id': 'int',
        'old_room_space_inventory_condition_id': 'int',
        'transaction_id': 'int',
        'inspected': 'bool',
        'accepted': 'bool',
        'review_comments': 'str',
        'comments': 'str',
        'chargeable': 'bool',
        'charge_amount': 'str',
        'date_modified': 'str'
    }

    attribute_map = {
        'room_space_inventory_inspection_item_id': 'RoomSpaceInventoryInspectionItemID',
        'room_space_inventory_inspection_id': 'RoomSpaceInventoryInspectionID',
        'room_space_inventory_id': 'RoomSpaceInventoryID',
        'room_space_inventory_condition_id': 'RoomSpaceInventoryConditionID',
        'old_room_space_inventory_condition_id': 'Old_RoomSpaceInventoryConditionID',
        'transaction_id': 'TransactionID',
        'inspected': 'Inspected',
        'accepted': 'Accepted',
        'review_comments': 'ReviewComments',
        'comments': 'Comments',
        'chargeable': 'Chargeable',
        'charge_amount': 'ChargeAmount',
        'date_modified': 'DateModified'
    }

    def __init__(self, room_space_inventory_inspection_item_id=None, room_space_inventory_inspection_id=None, room_space_inventory_id=None, room_space_inventory_condition_id=None, old_room_space_inventory_condition_id=None, transaction_id=None, inspected=None, accepted=None, review_comments=None, comments=None, chargeable=None, charge_amount=None, date_modified=None):  # noqa: E501
        """RoomSpaceInventoryInspectionItemItem - a model defined in Swagger"""  # noqa: E501

        self._room_space_inventory_inspection_item_id = None
        self._room_space_inventory_inspection_id = None
        self._room_space_inventory_id = None
        self._room_space_inventory_condition_id = None
        self._old_room_space_inventory_condition_id = None
        self._transaction_id = None
        self._inspected = None
        self._accepted = None
        self._review_comments = None
        self._comments = None
        self._chargeable = None
        self._charge_amount = None
        self._date_modified = None
        self.discriminator = None

        if room_space_inventory_inspection_item_id is not None:
            self.room_space_inventory_inspection_item_id = room_space_inventory_inspection_item_id
        if room_space_inventory_inspection_id is not None:
            self.room_space_inventory_inspection_id = room_space_inventory_inspection_id
        if room_space_inventory_id is not None:
            self.room_space_inventory_id = room_space_inventory_id
        if room_space_inventory_condition_id is not None:
            self.room_space_inventory_condition_id = room_space_inventory_condition_id
        if old_room_space_inventory_condition_id is not None:
            self.old_room_space_inventory_condition_id = old_room_space_inventory_condition_id
        if transaction_id is not None:
            self.transaction_id = transaction_id
        if inspected is not None:
            self.inspected = inspected
        if accepted is not None:
            self.accepted = accepted
        if review_comments is not None:
            self.review_comments = review_comments
        if comments is not None:
            self.comments = comments
        if chargeable is not None:
            self.chargeable = chargeable
        if charge_amount is not None:
            self.charge_amount = charge_amount
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def room_space_inventory_inspection_item_id(self):
        """Gets the room_space_inventory_inspection_item_id of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501

        Room Space Inventory Inspection Item  # noqa: E501

        :return: The room_space_inventory_inspection_item_id of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :rtype: int
        """
        return self._room_space_inventory_inspection_item_id

    @room_space_inventory_inspection_item_id.setter
    def room_space_inventory_inspection_item_id(self, room_space_inventory_inspection_item_id):
        """Sets the room_space_inventory_inspection_item_id of this RoomSpaceInventoryInspectionItemItem.

        Room Space Inventory Inspection Item  # noqa: E501

        :param room_space_inventory_inspection_item_id: The room_space_inventory_inspection_item_id of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :type: int
        """

        self._room_space_inventory_inspection_item_id = room_space_inventory_inspection_item_id

    @property
    def room_space_inventory_inspection_id(self):
        """Gets the room_space_inventory_inspection_id of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501

        Room Space Inventory Inspection  # noqa: E501

        :return: The room_space_inventory_inspection_id of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :rtype: int
        """
        return self._room_space_inventory_inspection_id

    @room_space_inventory_inspection_id.setter
    def room_space_inventory_inspection_id(self, room_space_inventory_inspection_id):
        """Sets the room_space_inventory_inspection_id of this RoomSpaceInventoryInspectionItemItem.

        Room Space Inventory Inspection  # noqa: E501

        :param room_space_inventory_inspection_id: The room_space_inventory_inspection_id of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :type: int
        """

        self._room_space_inventory_inspection_id = room_space_inventory_inspection_id

    @property
    def room_space_inventory_id(self):
        """Gets the room_space_inventory_id of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501

        Room Space Inventory  # noqa: E501

        :return: The room_space_inventory_id of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :rtype: int
        """
        return self._room_space_inventory_id

    @room_space_inventory_id.setter
    def room_space_inventory_id(self, room_space_inventory_id):
        """Sets the room_space_inventory_id of this RoomSpaceInventoryInspectionItemItem.

        Room Space Inventory  # noqa: E501

        :param room_space_inventory_id: The room_space_inventory_id of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :type: int
        """

        self._room_space_inventory_id = room_space_inventory_id

    @property
    def room_space_inventory_condition_id(self):
        """Gets the room_space_inventory_condition_id of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501

        Room Space Inventory Condition  # noqa: E501

        :return: The room_space_inventory_condition_id of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :rtype: int
        """
        return self._room_space_inventory_condition_id

    @room_space_inventory_condition_id.setter
    def room_space_inventory_condition_id(self, room_space_inventory_condition_id):
        """Sets the room_space_inventory_condition_id of this RoomSpaceInventoryInspectionItemItem.

        Room Space Inventory Condition  # noqa: E501

        :param room_space_inventory_condition_id: The room_space_inventory_condition_id of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :type: int
        """

        self._room_space_inventory_condition_id = room_space_inventory_condition_id

    @property
    def old_room_space_inventory_condition_id(self):
        """Gets the old_room_space_inventory_condition_id of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501

        Old Room Space Inventory Condition  # noqa: E501

        :return: The old_room_space_inventory_condition_id of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :rtype: int
        """
        return self._old_room_space_inventory_condition_id

    @old_room_space_inventory_condition_id.setter
    def old_room_space_inventory_condition_id(self, old_room_space_inventory_condition_id):
        """Sets the old_room_space_inventory_condition_id of this RoomSpaceInventoryInspectionItemItem.

        Old Room Space Inventory Condition  # noqa: E501

        :param old_room_space_inventory_condition_id: The old_room_space_inventory_condition_id of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :type: int
        """

        self._old_room_space_inventory_condition_id = old_room_space_inventory_condition_id

    @property
    def transaction_id(self):
        """Gets the transaction_id of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501

        Transaction  # noqa: E501

        :return: The transaction_id of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :rtype: int
        """
        return self._transaction_id

    @transaction_id.setter
    def transaction_id(self, transaction_id):
        """Sets the transaction_id of this RoomSpaceInventoryInspectionItemItem.

        Transaction  # noqa: E501

        :param transaction_id: The transaction_id of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :type: int
        """

        self._transaction_id = transaction_id

    @property
    def inspected(self):
        """Gets the inspected of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501

        Inspected  # noqa: E501

        :return: The inspected of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :rtype: bool
        """
        return self._inspected

    @inspected.setter
    def inspected(self, inspected):
        """Sets the inspected of this RoomSpaceInventoryInspectionItemItem.

        Inspected  # noqa: E501

        :param inspected: The inspected of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :type: bool
        """

        self._inspected = inspected

    @property
    def accepted(self):
        """Gets the accepted of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501

        Accepted  # noqa: E501

        :return: The accepted of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :rtype: bool
        """
        return self._accepted

    @accepted.setter
    def accepted(self, accepted):
        """Sets the accepted of this RoomSpaceInventoryInspectionItemItem.

        Accepted  # noqa: E501

        :param accepted: The accepted of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :type: bool
        """

        self._accepted = accepted

    @property
    def review_comments(self):
        """Gets the review_comments of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501

        Review Comments  # noqa: E501

        :return: The review_comments of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :rtype: str
        """
        return self._review_comments

    @review_comments.setter
    def review_comments(self, review_comments):
        """Sets the review_comments of this RoomSpaceInventoryInspectionItemItem.

        Review Comments  # noqa: E501

        :param review_comments: The review_comments of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :type: str
        """
        if review_comments is not None and len(review_comments) > 500:
            raise ValueError("Invalid value for `review_comments`, length must be less than or equal to `500`")  # noqa: E501

        self._review_comments = review_comments

    @property
    def comments(self):
        """Gets the comments of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501

        Comments  # noqa: E501

        :return: The comments of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this RoomSpaceInventoryInspectionItemItem.

        Comments  # noqa: E501

        :param comments: The comments of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :type: str
        """
        if comments is not None and len(comments) > 500:
            raise ValueError("Invalid value for `comments`, length must be less than or equal to `500`")  # noqa: E501

        self._comments = comments

    @property
    def chargeable(self):
        """Gets the chargeable of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501

        Chargeable  # noqa: E501

        :return: The chargeable of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :rtype: bool
        """
        return self._chargeable

    @chargeable.setter
    def chargeable(self, chargeable):
        """Sets the chargeable of this RoomSpaceInventoryInspectionItemItem.

        Chargeable  # noqa: E501

        :param chargeable: The chargeable of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :type: bool
        """

        self._chargeable = chargeable

    @property
    def charge_amount(self):
        """Gets the charge_amount of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501

        Charge Amount  # noqa: E501

        :return: The charge_amount of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :rtype: str
        """
        return self._charge_amount

    @charge_amount.setter
    def charge_amount(self, charge_amount):
        """Sets the charge_amount of this RoomSpaceInventoryInspectionItemItem.

        Charge Amount  # noqa: E501

        :param charge_amount: The charge_amount of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :type: str
        """

        self._charge_amount = charge_amount

    @property
    def date_modified(self):
        """Gets the date_modified of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this RoomSpaceInventoryInspectionItemItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this RoomSpaceInventoryInspectionItemItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RoomSpaceInventoryInspectionItemItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
