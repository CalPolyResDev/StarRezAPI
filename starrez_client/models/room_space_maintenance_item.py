# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class RoomSpaceMaintenanceItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'room_space_maintenance_id': 'int',
        'room_space_id': 'int',
        'date_reported': 'datetime',
        'date_due': 'str',
        'job_status': 'str',
        'other_service_number': 'str',
        'room_space_maintenance_category_id': 'int',
        'room_space_maintenance_item_id': 'int',
        'reported_by_name': 'str',
        'reported_by_phone': 'str',
        'occupant_entry_id': 'int',
        'occupant_entry_name': 'str',
        'occupant_present': 'bool',
        'occupant_present_reason': 'str',
        'job_sent': 'bool',
        'status': 'str',
        'location': 'str',
        'description': 'str',
        'priority_id': 'int',
        'technician': 'str',
        'start_date': 'str',
        'complete_date': 'str',
        'room_space_closed_id': 'int',
        'repair_description': 'str',
        'contact_id': 'int',
        'contractor_date': 'str',
        'contractor_eta': 'str',
        'contractor_order_number': 'str',
        'contractor_cost_estimate': 'str',
        'contractor_cost': 'str',
        'cause': 'str',
        'charge_type': 'str',
        'account_code': 'str',
        'charge': 'bool',
        'contract_date': 'str',
        'charge_entry_id': 'int',
        'charge_amount': 'str',
        'charge_invoiced': 'bool',
        'charge_invoice_number': 'str',
        'view_on_web': 'bool',
        'custom_bit1': 'bool',
        'custom_bit2': 'bool',
        'custom_string1': 'str',
        'custom_string2': 'str',
        'custom_string3': 'str',
        'custom_string4': 'str',
        'custom_string5': 'str',
        'custom_string6': 'str',
        'custom_date1': 'str',
        'custom_date2': 'str',
        'date_created': 'datetime',
        'security_user_id': 'int',
        'created_by_security_user_id': 'int',
        'date_modified': 'str'
    }

    attribute_map = {
        'room_space_maintenance_id': 'RoomSpaceMaintenanceID',
        'room_space_id': 'RoomSpaceID',
        'date_reported': 'DateReported',
        'date_due': 'DateDue',
        'job_status': 'JobStatus',
        'other_service_number': 'OtherServiceNumber',
        'room_space_maintenance_category_id': 'RoomSpaceMaintenanceCategoryID',
        'room_space_maintenance_item_id': 'RoomSpaceMaintenanceItemID',
        'reported_by_name': 'ReportedByName',
        'reported_by_phone': 'ReportedByPhone',
        'occupant_entry_id': 'Occupant_EntryID',
        'occupant_entry_name': 'OccupantEntryName',
        'occupant_present': 'OccupantPresent',
        'occupant_present_reason': 'OccupantPresentReason',
        'job_sent': 'JobSent',
        'status': 'Status',
        'location': 'Location',
        'description': 'Description',
        'priority_id': 'PriorityID',
        'technician': 'Technician',
        'start_date': 'StartDate',
        'complete_date': 'CompleteDate',
        'room_space_closed_id': 'RoomSpaceClosedID',
        'repair_description': 'RepairDescription',
        'contact_id': 'ContactID',
        'contractor_date': 'ContractorDate',
        'contractor_eta': 'ContractorETA',
        'contractor_order_number': 'ContractorOrderNumber',
        'contractor_cost_estimate': 'ContractorCostEstimate',
        'contractor_cost': 'ContractorCost',
        'cause': 'Cause',
        'charge_type': 'ChargeType',
        'account_code': 'AccountCode',
        'charge': 'Charge',
        'contract_date': 'ContractDate',
        'charge_entry_id': 'Charge_EntryID',
        'charge_amount': 'ChargeAmount',
        'charge_invoiced': 'ChargeInvoiced',
        'charge_invoice_number': 'ChargeInvoiceNumber',
        'view_on_web': 'ViewOnWeb',
        'custom_bit1': 'CustomBit1',
        'custom_bit2': 'CustomBit2',
        'custom_string1': 'CustomString1',
        'custom_string2': 'CustomString2',
        'custom_string3': 'CustomString3',
        'custom_string4': 'CustomString4',
        'custom_string5': 'CustomString5',
        'custom_string6': 'CustomString6',
        'custom_date1': 'CustomDate1',
        'custom_date2': 'CustomDate2',
        'date_created': 'DateCreated',
        'security_user_id': 'SecurityUserID',
        'created_by_security_user_id': 'CreatedBy_SecurityUserID',
        'date_modified': 'DateModified'
    }

    def __init__(self, room_space_maintenance_id=None, room_space_id=None, date_reported=None, date_due=None, job_status=None, other_service_number=None, room_space_maintenance_category_id=None, room_space_maintenance_item_id=None, reported_by_name=None, reported_by_phone=None, occupant_entry_id=None, occupant_entry_name=None, occupant_present=None, occupant_present_reason=None, job_sent=None, status=None, location=None, description=None, priority_id=None, technician=None, start_date=None, complete_date=None, room_space_closed_id=None, repair_description=None, contact_id=None, contractor_date=None, contractor_eta=None, contractor_order_number=None, contractor_cost_estimate=None, contractor_cost=None, cause=None, charge_type=None, account_code=None, charge=None, contract_date=None, charge_entry_id=None, charge_amount=None, charge_invoiced=None, charge_invoice_number=None, view_on_web=None, custom_bit1=None, custom_bit2=None, custom_string1=None, custom_string2=None, custom_string3=None, custom_string4=None, custom_string5=None, custom_string6=None, custom_date1=None, custom_date2=None, date_created=None, security_user_id=None, created_by_security_user_id=None, date_modified=None):  # noqa: E501
        """RoomSpaceMaintenanceItem - a model defined in Swagger"""  # noqa: E501

        self._room_space_maintenance_id = None
        self._room_space_id = None
        self._date_reported = None
        self._date_due = None
        self._job_status = None
        self._other_service_number = None
        self._room_space_maintenance_category_id = None
        self._room_space_maintenance_item_id = None
        self._reported_by_name = None
        self._reported_by_phone = None
        self._occupant_entry_id = None
        self._occupant_entry_name = None
        self._occupant_present = None
        self._occupant_present_reason = None
        self._job_sent = None
        self._status = None
        self._location = None
        self._description = None
        self._priority_id = None
        self._technician = None
        self._start_date = None
        self._complete_date = None
        self._room_space_closed_id = None
        self._repair_description = None
        self._contact_id = None
        self._contractor_date = None
        self._contractor_eta = None
        self._contractor_order_number = None
        self._contractor_cost_estimate = None
        self._contractor_cost = None
        self._cause = None
        self._charge_type = None
        self._account_code = None
        self._charge = None
        self._contract_date = None
        self._charge_entry_id = None
        self._charge_amount = None
        self._charge_invoiced = None
        self._charge_invoice_number = None
        self._view_on_web = None
        self._custom_bit1 = None
        self._custom_bit2 = None
        self._custom_string1 = None
        self._custom_string2 = None
        self._custom_string3 = None
        self._custom_string4 = None
        self._custom_string5 = None
        self._custom_string6 = None
        self._custom_date1 = None
        self._custom_date2 = None
        self._date_created = None
        self._security_user_id = None
        self._created_by_security_user_id = None
        self._date_modified = None
        self.discriminator = None

        if room_space_maintenance_id is not None:
            self.room_space_maintenance_id = room_space_maintenance_id
        if room_space_id is not None:
            self.room_space_id = room_space_id
        if date_reported is not None:
            self.date_reported = date_reported
        if date_due is not None:
            self.date_due = date_due
        if job_status is not None:
            self.job_status = job_status
        if other_service_number is not None:
            self.other_service_number = other_service_number
        if room_space_maintenance_category_id is not None:
            self.room_space_maintenance_category_id = room_space_maintenance_category_id
        if room_space_maintenance_item_id is not None:
            self.room_space_maintenance_item_id = room_space_maintenance_item_id
        if reported_by_name is not None:
            self.reported_by_name = reported_by_name
        if reported_by_phone is not None:
            self.reported_by_phone = reported_by_phone
        if occupant_entry_id is not None:
            self.occupant_entry_id = occupant_entry_id
        if occupant_entry_name is not None:
            self.occupant_entry_name = occupant_entry_name
        if occupant_present is not None:
            self.occupant_present = occupant_present
        if occupant_present_reason is not None:
            self.occupant_present_reason = occupant_present_reason
        if job_sent is not None:
            self.job_sent = job_sent
        if status is not None:
            self.status = status
        if location is not None:
            self.location = location
        if description is not None:
            self.description = description
        if priority_id is not None:
            self.priority_id = priority_id
        if technician is not None:
            self.technician = technician
        if start_date is not None:
            self.start_date = start_date
        if complete_date is not None:
            self.complete_date = complete_date
        if room_space_closed_id is not None:
            self.room_space_closed_id = room_space_closed_id
        if repair_description is not None:
            self.repair_description = repair_description
        if contact_id is not None:
            self.contact_id = contact_id
        if contractor_date is not None:
            self.contractor_date = contractor_date
        if contractor_eta is not None:
            self.contractor_eta = contractor_eta
        if contractor_order_number is not None:
            self.contractor_order_number = contractor_order_number
        if contractor_cost_estimate is not None:
            self.contractor_cost_estimate = contractor_cost_estimate
        if contractor_cost is not None:
            self.contractor_cost = contractor_cost
        if cause is not None:
            self.cause = cause
        if charge_type is not None:
            self.charge_type = charge_type
        if account_code is not None:
            self.account_code = account_code
        if charge is not None:
            self.charge = charge
        if contract_date is not None:
            self.contract_date = contract_date
        if charge_entry_id is not None:
            self.charge_entry_id = charge_entry_id
        if charge_amount is not None:
            self.charge_amount = charge_amount
        if charge_invoiced is not None:
            self.charge_invoiced = charge_invoiced
        if charge_invoice_number is not None:
            self.charge_invoice_number = charge_invoice_number
        if view_on_web is not None:
            self.view_on_web = view_on_web
        if custom_bit1 is not None:
            self.custom_bit1 = custom_bit1
        if custom_bit2 is not None:
            self.custom_bit2 = custom_bit2
        if custom_string1 is not None:
            self.custom_string1 = custom_string1
        if custom_string2 is not None:
            self.custom_string2 = custom_string2
        if custom_string3 is not None:
            self.custom_string3 = custom_string3
        if custom_string4 is not None:
            self.custom_string4 = custom_string4
        if custom_string5 is not None:
            self.custom_string5 = custom_string5
        if custom_string6 is not None:
            self.custom_string6 = custom_string6
        if custom_date1 is not None:
            self.custom_date1 = custom_date1
        if custom_date2 is not None:
            self.custom_date2 = custom_date2
        if date_created is not None:
            self.date_created = date_created
        if security_user_id is not None:
            self.security_user_id = security_user_id
        if created_by_security_user_id is not None:
            self.created_by_security_user_id = created_by_security_user_id
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def room_space_maintenance_id(self):
        """Gets the room_space_maintenance_id of this RoomSpaceMaintenanceItem.  # noqa: E501

        Room Space Maintenance  # noqa: E501

        :return: The room_space_maintenance_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: int
        """
        return self._room_space_maintenance_id

    @room_space_maintenance_id.setter
    def room_space_maintenance_id(self, room_space_maintenance_id):
        """Sets the room_space_maintenance_id of this RoomSpaceMaintenanceItem.

        Room Space Maintenance  # noqa: E501

        :param room_space_maintenance_id: The room_space_maintenance_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: int
        """

        self._room_space_maintenance_id = room_space_maintenance_id

    @property
    def room_space_id(self):
        """Gets the room_space_id of this RoomSpaceMaintenanceItem.  # noqa: E501

        Room Space  # noqa: E501

        :return: The room_space_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: int
        """
        return self._room_space_id

    @room_space_id.setter
    def room_space_id(self, room_space_id):
        """Sets the room_space_id of this RoomSpaceMaintenanceItem.

        Room Space  # noqa: E501

        :param room_space_id: The room_space_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: int
        """

        self._room_space_id = room_space_id

    @property
    def date_reported(self):
        """Gets the date_reported of this RoomSpaceMaintenanceItem.  # noqa: E501

        Date Reported  # noqa: E501

        :return: The date_reported of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: datetime
        """
        return self._date_reported

    @date_reported.setter
    def date_reported(self, date_reported):
        """Sets the date_reported of this RoomSpaceMaintenanceItem.

        Date Reported  # noqa: E501

        :param date_reported: The date_reported of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: datetime
        """

        self._date_reported = date_reported

    @property
    def date_due(self):
        """Gets the date_due of this RoomSpaceMaintenanceItem.  # noqa: E501

        Date Due  # noqa: E501

        :return: The date_due of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._date_due

    @date_due.setter
    def date_due(self, date_due):
        """Sets the date_due of this RoomSpaceMaintenanceItem.

        Date Due  # noqa: E501

        :param date_due: The date_due of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """

        self._date_due = date_due

    @property
    def job_status(self):
        """Gets the job_status of this RoomSpaceMaintenanceItem.  # noqa: E501

        Job Status  # noqa: E501

        :return: The job_status of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._job_status

    @job_status.setter
    def job_status(self, job_status):
        """Sets the job_status of this RoomSpaceMaintenanceItem.

        Job Status  # noqa: E501

        :param job_status: The job_status of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if job_status is not None and len(job_status) > 25:
            raise ValueError("Invalid value for `job_status`, length must be less than or equal to `25`")  # noqa: E501

        self._job_status = job_status

    @property
    def other_service_number(self):
        """Gets the other_service_number of this RoomSpaceMaintenanceItem.  # noqa: E501

        Other Service Number  # noqa: E501

        :return: The other_service_number of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._other_service_number

    @other_service_number.setter
    def other_service_number(self, other_service_number):
        """Sets the other_service_number of this RoomSpaceMaintenanceItem.

        Other Service Number  # noqa: E501

        :param other_service_number: The other_service_number of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if other_service_number is not None and len(other_service_number) > 20:
            raise ValueError("Invalid value for `other_service_number`, length must be less than or equal to `20`")  # noqa: E501

        self._other_service_number = other_service_number

    @property
    def room_space_maintenance_category_id(self):
        """Gets the room_space_maintenance_category_id of this RoomSpaceMaintenanceItem.  # noqa: E501

        Room Space Maintenance Category  # noqa: E501

        :return: The room_space_maintenance_category_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: int
        """
        return self._room_space_maintenance_category_id

    @room_space_maintenance_category_id.setter
    def room_space_maintenance_category_id(self, room_space_maintenance_category_id):
        """Sets the room_space_maintenance_category_id of this RoomSpaceMaintenanceItem.

        Room Space Maintenance Category  # noqa: E501

        :param room_space_maintenance_category_id: The room_space_maintenance_category_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: int
        """

        self._room_space_maintenance_category_id = room_space_maintenance_category_id

    @property
    def room_space_maintenance_item_id(self):
        """Gets the room_space_maintenance_item_id of this RoomSpaceMaintenanceItem.  # noqa: E501

        Room Space Maintenance Item  # noqa: E501

        :return: The room_space_maintenance_item_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: int
        """
        return self._room_space_maintenance_item_id

    @room_space_maintenance_item_id.setter
    def room_space_maintenance_item_id(self, room_space_maintenance_item_id):
        """Sets the room_space_maintenance_item_id of this RoomSpaceMaintenanceItem.

        Room Space Maintenance Item  # noqa: E501

        :param room_space_maintenance_item_id: The room_space_maintenance_item_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: int
        """

        self._room_space_maintenance_item_id = room_space_maintenance_item_id

    @property
    def reported_by_name(self):
        """Gets the reported_by_name of this RoomSpaceMaintenanceItem.  # noqa: E501

        Reported By Name  # noqa: E501

        :return: The reported_by_name of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._reported_by_name

    @reported_by_name.setter
    def reported_by_name(self, reported_by_name):
        """Sets the reported_by_name of this RoomSpaceMaintenanceItem.

        Reported By Name  # noqa: E501

        :param reported_by_name: The reported_by_name of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if reported_by_name is not None and len(reported_by_name) > 40:
            raise ValueError("Invalid value for `reported_by_name`, length must be less than or equal to `40`")  # noqa: E501

        self._reported_by_name = reported_by_name

    @property
    def reported_by_phone(self):
        """Gets the reported_by_phone of this RoomSpaceMaintenanceItem.  # noqa: E501

        Reported By Phone  # noqa: E501

        :return: The reported_by_phone of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._reported_by_phone

    @reported_by_phone.setter
    def reported_by_phone(self, reported_by_phone):
        """Sets the reported_by_phone of this RoomSpaceMaintenanceItem.

        Reported By Phone  # noqa: E501

        :param reported_by_phone: The reported_by_phone of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if reported_by_phone is not None and len(reported_by_phone) > 40:
            raise ValueError("Invalid value for `reported_by_phone`, length must be less than or equal to `40`")  # noqa: E501

        self._reported_by_phone = reported_by_phone

    @property
    def occupant_entry_id(self):
        """Gets the occupant_entry_id of this RoomSpaceMaintenanceItem.  # noqa: E501

        Occupant Entry  # noqa: E501

        :return: The occupant_entry_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: int
        """
        return self._occupant_entry_id

    @occupant_entry_id.setter
    def occupant_entry_id(self, occupant_entry_id):
        """Sets the occupant_entry_id of this RoomSpaceMaintenanceItem.

        Occupant Entry  # noqa: E501

        :param occupant_entry_id: The occupant_entry_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: int
        """

        self._occupant_entry_id = occupant_entry_id

    @property
    def occupant_entry_name(self):
        """Gets the occupant_entry_name of this RoomSpaceMaintenanceItem.  # noqa: E501

        Occupant Entry Name  # noqa: E501

        :return: The occupant_entry_name of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._occupant_entry_name

    @occupant_entry_name.setter
    def occupant_entry_name(self, occupant_entry_name):
        """Sets the occupant_entry_name of this RoomSpaceMaintenanceItem.

        Occupant Entry Name  # noqa: E501

        :param occupant_entry_name: The occupant_entry_name of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if occupant_entry_name is not None and len(occupant_entry_name) > 40:
            raise ValueError("Invalid value for `occupant_entry_name`, length must be less than or equal to `40`")  # noqa: E501

        self._occupant_entry_name = occupant_entry_name

    @property
    def occupant_present(self):
        """Gets the occupant_present of this RoomSpaceMaintenanceItem.  # noqa: E501

        Occupant Present  # noqa: E501

        :return: The occupant_present of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: bool
        """
        return self._occupant_present

    @occupant_present.setter
    def occupant_present(self, occupant_present):
        """Sets the occupant_present of this RoomSpaceMaintenanceItem.

        Occupant Present  # noqa: E501

        :param occupant_present: The occupant_present of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: bool
        """

        self._occupant_present = occupant_present

    @property
    def occupant_present_reason(self):
        """Gets the occupant_present_reason of this RoomSpaceMaintenanceItem.  # noqa: E501

        Occupant Present Reason  # noqa: E501

        :return: The occupant_present_reason of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._occupant_present_reason

    @occupant_present_reason.setter
    def occupant_present_reason(self, occupant_present_reason):
        """Sets the occupant_present_reason of this RoomSpaceMaintenanceItem.

        Occupant Present Reason  # noqa: E501

        :param occupant_present_reason: The occupant_present_reason of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if occupant_present_reason is not None and len(occupant_present_reason) > 40:
            raise ValueError("Invalid value for `occupant_present_reason`, length must be less than or equal to `40`")  # noqa: E501

        self._occupant_present_reason = occupant_present_reason

    @property
    def job_sent(self):
        """Gets the job_sent of this RoomSpaceMaintenanceItem.  # noqa: E501

        Job Sent  # noqa: E501

        :return: The job_sent of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: bool
        """
        return self._job_sent

    @job_sent.setter
    def job_sent(self, job_sent):
        """Sets the job_sent of this RoomSpaceMaintenanceItem.

        Job Sent  # noqa: E501

        :param job_sent: The job_sent of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: bool
        """

        self._job_sent = job_sent

    @property
    def status(self):
        """Gets the status of this RoomSpaceMaintenanceItem.  # noqa: E501

        Status  # noqa: E501

        :return: The status of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RoomSpaceMaintenanceItem.

        Status  # noqa: E501

        :param status: The status of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if status is not None and len(status) > 40:
            raise ValueError("Invalid value for `status`, length must be less than or equal to `40`")  # noqa: E501

        self._status = status

    @property
    def location(self):
        """Gets the location of this RoomSpaceMaintenanceItem.  # noqa: E501

        Location  # noqa: E501

        :return: The location of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this RoomSpaceMaintenanceItem.

        Location  # noqa: E501

        :param location: The location of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if location is not None and len(location) > 100:
            raise ValueError("Invalid value for `location`, length must be less than or equal to `100`")  # noqa: E501

        self._location = location

    @property
    def description(self):
        """Gets the description of this RoomSpaceMaintenanceItem.  # noqa: E501

        Description  # noqa: E501

        :return: The description of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RoomSpaceMaintenanceItem.

        Description  # noqa: E501

        :param description: The description of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if description is not None and len(description) > 2000:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `2000`")  # noqa: E501

        self._description = description

    @property
    def priority_id(self):
        """Gets the priority_id of this RoomSpaceMaintenanceItem.  # noqa: E501

        Priority  # noqa: E501

        :return: The priority_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: int
        """
        return self._priority_id

    @priority_id.setter
    def priority_id(self, priority_id):
        """Sets the priority_id of this RoomSpaceMaintenanceItem.

        Priority  # noqa: E501

        :param priority_id: The priority_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: int
        """

        self._priority_id = priority_id

    @property
    def technician(self):
        """Gets the technician of this RoomSpaceMaintenanceItem.  # noqa: E501

        Technician  # noqa: E501

        :return: The technician of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._technician

    @technician.setter
    def technician(self, technician):
        """Sets the technician of this RoomSpaceMaintenanceItem.

        Technician  # noqa: E501

        :param technician: The technician of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if technician is not None and len(technician) > 40:
            raise ValueError("Invalid value for `technician`, length must be less than or equal to `40`")  # noqa: E501

        self._technician = technician

    @property
    def start_date(self):
        """Gets the start_date of this RoomSpaceMaintenanceItem.  # noqa: E501

        Start Date  # noqa: E501

        :return: The start_date of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this RoomSpaceMaintenanceItem.

        Start Date  # noqa: E501

        :param start_date: The start_date of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """

        self._start_date = start_date

    @property
    def complete_date(self):
        """Gets the complete_date of this RoomSpaceMaintenanceItem.  # noqa: E501

        Complete Date  # noqa: E501

        :return: The complete_date of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._complete_date

    @complete_date.setter
    def complete_date(self, complete_date):
        """Sets the complete_date of this RoomSpaceMaintenanceItem.

        Complete Date  # noqa: E501

        :param complete_date: The complete_date of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """

        self._complete_date = complete_date

    @property
    def room_space_closed_id(self):
        """Gets the room_space_closed_id of this RoomSpaceMaintenanceItem.  # noqa: E501

        Room Space Closed  # noqa: E501

        :return: The room_space_closed_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: int
        """
        return self._room_space_closed_id

    @room_space_closed_id.setter
    def room_space_closed_id(self, room_space_closed_id):
        """Sets the room_space_closed_id of this RoomSpaceMaintenanceItem.

        Room Space Closed  # noqa: E501

        :param room_space_closed_id: The room_space_closed_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: int
        """

        self._room_space_closed_id = room_space_closed_id

    @property
    def repair_description(self):
        """Gets the repair_description of this RoomSpaceMaintenanceItem.  # noqa: E501

        Repair Description  # noqa: E501

        :return: The repair_description of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._repair_description

    @repair_description.setter
    def repair_description(self, repair_description):
        """Sets the repair_description of this RoomSpaceMaintenanceItem.

        Repair Description  # noqa: E501

        :param repair_description: The repair_description of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if repair_description is not None and len(repair_description) > 1000:
            raise ValueError("Invalid value for `repair_description`, length must be less than or equal to `1000`")  # noqa: E501

        self._repair_description = repair_description

    @property
    def contact_id(self):
        """Gets the contact_id of this RoomSpaceMaintenanceItem.  # noqa: E501

        Contact  # noqa: E501

        :return: The contact_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: int
        """
        return self._contact_id

    @contact_id.setter
    def contact_id(self, contact_id):
        """Sets the contact_id of this RoomSpaceMaintenanceItem.

        Contact  # noqa: E501

        :param contact_id: The contact_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: int
        """

        self._contact_id = contact_id

    @property
    def contractor_date(self):
        """Gets the contractor_date of this RoomSpaceMaintenanceItem.  # noqa: E501

        Contractor Date  # noqa: E501

        :return: The contractor_date of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._contractor_date

    @contractor_date.setter
    def contractor_date(self, contractor_date):
        """Sets the contractor_date of this RoomSpaceMaintenanceItem.

        Contractor Date  # noqa: E501

        :param contractor_date: The contractor_date of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """

        self._contractor_date = contractor_date

    @property
    def contractor_eta(self):
        """Gets the contractor_eta of this RoomSpaceMaintenanceItem.  # noqa: E501

        Contractor ETA  # noqa: E501

        :return: The contractor_eta of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._contractor_eta

    @contractor_eta.setter
    def contractor_eta(self, contractor_eta):
        """Sets the contractor_eta of this RoomSpaceMaintenanceItem.

        Contractor ETA  # noqa: E501

        :param contractor_eta: The contractor_eta of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if contractor_eta is not None and len(contractor_eta) > 15:
            raise ValueError("Invalid value for `contractor_eta`, length must be less than or equal to `15`")  # noqa: E501

        self._contractor_eta = contractor_eta

    @property
    def contractor_order_number(self):
        """Gets the contractor_order_number of this RoomSpaceMaintenanceItem.  # noqa: E501

        Contractor Order Number  # noqa: E501

        :return: The contractor_order_number of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._contractor_order_number

    @contractor_order_number.setter
    def contractor_order_number(self, contractor_order_number):
        """Sets the contractor_order_number of this RoomSpaceMaintenanceItem.

        Contractor Order Number  # noqa: E501

        :param contractor_order_number: The contractor_order_number of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if contractor_order_number is not None and len(contractor_order_number) > 20:
            raise ValueError("Invalid value for `contractor_order_number`, length must be less than or equal to `20`")  # noqa: E501

        self._contractor_order_number = contractor_order_number

    @property
    def contractor_cost_estimate(self):
        """Gets the contractor_cost_estimate of this RoomSpaceMaintenanceItem.  # noqa: E501

        Contractor Cost Estimate  # noqa: E501

        :return: The contractor_cost_estimate of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._contractor_cost_estimate

    @contractor_cost_estimate.setter
    def contractor_cost_estimate(self, contractor_cost_estimate):
        """Sets the contractor_cost_estimate of this RoomSpaceMaintenanceItem.

        Contractor Cost Estimate  # noqa: E501

        :param contractor_cost_estimate: The contractor_cost_estimate of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """

        self._contractor_cost_estimate = contractor_cost_estimate

    @property
    def contractor_cost(self):
        """Gets the contractor_cost of this RoomSpaceMaintenanceItem.  # noqa: E501

        Contractor Cost  # noqa: E501

        :return: The contractor_cost of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._contractor_cost

    @contractor_cost.setter
    def contractor_cost(self, contractor_cost):
        """Sets the contractor_cost of this RoomSpaceMaintenanceItem.

        Contractor Cost  # noqa: E501

        :param contractor_cost: The contractor_cost of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """

        self._contractor_cost = contractor_cost

    @property
    def cause(self):
        """Gets the cause of this RoomSpaceMaintenanceItem.  # noqa: E501

        Cause  # noqa: E501

        :return: The cause of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._cause

    @cause.setter
    def cause(self, cause):
        """Sets the cause of this RoomSpaceMaintenanceItem.

        Cause  # noqa: E501

        :param cause: The cause of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if cause is not None and len(cause) > 100:
            raise ValueError("Invalid value for `cause`, length must be less than or equal to `100`")  # noqa: E501

        self._cause = cause

    @property
    def charge_type(self):
        """Gets the charge_type of this RoomSpaceMaintenanceItem.  # noqa: E501

        Charge Type  # noqa: E501

        :return: The charge_type of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._charge_type

    @charge_type.setter
    def charge_type(self, charge_type):
        """Sets the charge_type of this RoomSpaceMaintenanceItem.

        Charge Type  # noqa: E501

        :param charge_type: The charge_type of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if charge_type is not None and len(charge_type) > 20:
            raise ValueError("Invalid value for `charge_type`, length must be less than or equal to `20`")  # noqa: E501

        self._charge_type = charge_type

    @property
    def account_code(self):
        """Gets the account_code of this RoomSpaceMaintenanceItem.  # noqa: E501

        Account Code  # noqa: E501

        :return: The account_code of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._account_code

    @account_code.setter
    def account_code(self, account_code):
        """Sets the account_code of this RoomSpaceMaintenanceItem.

        Account Code  # noqa: E501

        :param account_code: The account_code of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if account_code is not None and len(account_code) > 20:
            raise ValueError("Invalid value for `account_code`, length must be less than or equal to `20`")  # noqa: E501

        self._account_code = account_code

    @property
    def charge(self):
        """Gets the charge of this RoomSpaceMaintenanceItem.  # noqa: E501

        Charge  # noqa: E501

        :return: The charge of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: bool
        """
        return self._charge

    @charge.setter
    def charge(self, charge):
        """Sets the charge of this RoomSpaceMaintenanceItem.

        Charge  # noqa: E501

        :param charge: The charge of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: bool
        """

        self._charge = charge

    @property
    def contract_date(self):
        """Gets the contract_date of this RoomSpaceMaintenanceItem.  # noqa: E501

        Contract Date  # noqa: E501

        :return: The contract_date of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._contract_date

    @contract_date.setter
    def contract_date(self, contract_date):
        """Sets the contract_date of this RoomSpaceMaintenanceItem.

        Contract Date  # noqa: E501

        :param contract_date: The contract_date of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """

        self._contract_date = contract_date

    @property
    def charge_entry_id(self):
        """Gets the charge_entry_id of this RoomSpaceMaintenanceItem.  # noqa: E501

        Charge Entry  # noqa: E501

        :return: The charge_entry_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: int
        """
        return self._charge_entry_id

    @charge_entry_id.setter
    def charge_entry_id(self, charge_entry_id):
        """Sets the charge_entry_id of this RoomSpaceMaintenanceItem.

        Charge Entry  # noqa: E501

        :param charge_entry_id: The charge_entry_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: int
        """

        self._charge_entry_id = charge_entry_id

    @property
    def charge_amount(self):
        """Gets the charge_amount of this RoomSpaceMaintenanceItem.  # noqa: E501

        Charge Amount  # noqa: E501

        :return: The charge_amount of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._charge_amount

    @charge_amount.setter
    def charge_amount(self, charge_amount):
        """Sets the charge_amount of this RoomSpaceMaintenanceItem.

        Charge Amount  # noqa: E501

        :param charge_amount: The charge_amount of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """

        self._charge_amount = charge_amount

    @property
    def charge_invoiced(self):
        """Gets the charge_invoiced of this RoomSpaceMaintenanceItem.  # noqa: E501

        Charge Invoiced  # noqa: E501

        :return: The charge_invoiced of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: bool
        """
        return self._charge_invoiced

    @charge_invoiced.setter
    def charge_invoiced(self, charge_invoiced):
        """Sets the charge_invoiced of this RoomSpaceMaintenanceItem.

        Charge Invoiced  # noqa: E501

        :param charge_invoiced: The charge_invoiced of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: bool
        """

        self._charge_invoiced = charge_invoiced

    @property
    def charge_invoice_number(self):
        """Gets the charge_invoice_number of this RoomSpaceMaintenanceItem.  # noqa: E501

        Charge Invoice Number  # noqa: E501

        :return: The charge_invoice_number of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._charge_invoice_number

    @charge_invoice_number.setter
    def charge_invoice_number(self, charge_invoice_number):
        """Sets the charge_invoice_number of this RoomSpaceMaintenanceItem.

        Charge Invoice Number  # noqa: E501

        :param charge_invoice_number: The charge_invoice_number of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if charge_invoice_number is not None and len(charge_invoice_number) > 15:
            raise ValueError("Invalid value for `charge_invoice_number`, length must be less than or equal to `15`")  # noqa: E501

        self._charge_invoice_number = charge_invoice_number

    @property
    def view_on_web(self):
        """Gets the view_on_web of this RoomSpaceMaintenanceItem.  # noqa: E501

        View On Web  # noqa: E501

        :return: The view_on_web of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: bool
        """
        return self._view_on_web

    @view_on_web.setter
    def view_on_web(self, view_on_web):
        """Sets the view_on_web of this RoomSpaceMaintenanceItem.

        View On Web  # noqa: E501

        :param view_on_web: The view_on_web of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: bool
        """

        self._view_on_web = view_on_web

    @property
    def custom_bit1(self):
        """Gets the custom_bit1 of this RoomSpaceMaintenanceItem.  # noqa: E501

        Custom Flag 1  # noqa: E501

        :return: The custom_bit1 of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: bool
        """
        return self._custom_bit1

    @custom_bit1.setter
    def custom_bit1(self, custom_bit1):
        """Sets the custom_bit1 of this RoomSpaceMaintenanceItem.

        Custom Flag 1  # noqa: E501

        :param custom_bit1: The custom_bit1 of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: bool
        """

        self._custom_bit1 = custom_bit1

    @property
    def custom_bit2(self):
        """Gets the custom_bit2 of this RoomSpaceMaintenanceItem.  # noqa: E501

        Custom Flag 2  # noqa: E501

        :return: The custom_bit2 of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: bool
        """
        return self._custom_bit2

    @custom_bit2.setter
    def custom_bit2(self, custom_bit2):
        """Sets the custom_bit2 of this RoomSpaceMaintenanceItem.

        Custom Flag 2  # noqa: E501

        :param custom_bit2: The custom_bit2 of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: bool
        """

        self._custom_bit2 = custom_bit2

    @property
    def custom_string1(self):
        """Gets the custom_string1 of this RoomSpaceMaintenanceItem.  # noqa: E501

        Custom String 1  # noqa: E501

        :return: The custom_string1 of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string1

    @custom_string1.setter
    def custom_string1(self, custom_string1):
        """Sets the custom_string1 of this RoomSpaceMaintenanceItem.

        Custom String 1  # noqa: E501

        :param custom_string1: The custom_string1 of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if custom_string1 is not None and len(custom_string1) > 50:
            raise ValueError("Invalid value for `custom_string1`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string1 = custom_string1

    @property
    def custom_string2(self):
        """Gets the custom_string2 of this RoomSpaceMaintenanceItem.  # noqa: E501

        Custom String 2  # noqa: E501

        :return: The custom_string2 of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string2

    @custom_string2.setter
    def custom_string2(self, custom_string2):
        """Sets the custom_string2 of this RoomSpaceMaintenanceItem.

        Custom String 2  # noqa: E501

        :param custom_string2: The custom_string2 of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if custom_string2 is not None and len(custom_string2) > 50:
            raise ValueError("Invalid value for `custom_string2`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string2 = custom_string2

    @property
    def custom_string3(self):
        """Gets the custom_string3 of this RoomSpaceMaintenanceItem.  # noqa: E501

        Custom String 3  # noqa: E501

        :return: The custom_string3 of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string3

    @custom_string3.setter
    def custom_string3(self, custom_string3):
        """Sets the custom_string3 of this RoomSpaceMaintenanceItem.

        Custom String 3  # noqa: E501

        :param custom_string3: The custom_string3 of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if custom_string3 is not None and len(custom_string3) > 50:
            raise ValueError("Invalid value for `custom_string3`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string3 = custom_string3

    @property
    def custom_string4(self):
        """Gets the custom_string4 of this RoomSpaceMaintenanceItem.  # noqa: E501

        Custom String 4  # noqa: E501

        :return: The custom_string4 of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string4

    @custom_string4.setter
    def custom_string4(self, custom_string4):
        """Sets the custom_string4 of this RoomSpaceMaintenanceItem.

        Custom String 4  # noqa: E501

        :param custom_string4: The custom_string4 of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if custom_string4 is not None and len(custom_string4) > 50:
            raise ValueError("Invalid value for `custom_string4`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string4 = custom_string4

    @property
    def custom_string5(self):
        """Gets the custom_string5 of this RoomSpaceMaintenanceItem.  # noqa: E501

        Custom String 5  # noqa: E501

        :return: The custom_string5 of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string5

    @custom_string5.setter
    def custom_string5(self, custom_string5):
        """Sets the custom_string5 of this RoomSpaceMaintenanceItem.

        Custom String 5  # noqa: E501

        :param custom_string5: The custom_string5 of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if custom_string5 is not None and len(custom_string5) > 50:
            raise ValueError("Invalid value for `custom_string5`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string5 = custom_string5

    @property
    def custom_string6(self):
        """Gets the custom_string6 of this RoomSpaceMaintenanceItem.  # noqa: E501

        Custom String 6  # noqa: E501

        :return: The custom_string6 of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string6

    @custom_string6.setter
    def custom_string6(self, custom_string6):
        """Sets the custom_string6 of this RoomSpaceMaintenanceItem.

        Custom String 6  # noqa: E501

        :param custom_string6: The custom_string6 of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """
        if custom_string6 is not None and len(custom_string6) > 50:
            raise ValueError("Invalid value for `custom_string6`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string6 = custom_string6

    @property
    def custom_date1(self):
        """Gets the custom_date1 of this RoomSpaceMaintenanceItem.  # noqa: E501

        Custom Date 1  # noqa: E501

        :return: The custom_date1 of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_date1

    @custom_date1.setter
    def custom_date1(self, custom_date1):
        """Sets the custom_date1 of this RoomSpaceMaintenanceItem.

        Custom Date 1  # noqa: E501

        :param custom_date1: The custom_date1 of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """

        self._custom_date1 = custom_date1

    @property
    def custom_date2(self):
        """Gets the custom_date2 of this RoomSpaceMaintenanceItem.  # noqa: E501

        Custom Date 2  # noqa: E501

        :return: The custom_date2 of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_date2

    @custom_date2.setter
    def custom_date2(self, custom_date2):
        """Sets the custom_date2 of this RoomSpaceMaintenanceItem.

        Custom Date 2  # noqa: E501

        :param custom_date2: The custom_date2 of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """

        self._custom_date2 = custom_date2

    @property
    def date_created(self):
        """Gets the date_created of this RoomSpaceMaintenanceItem.  # noqa: E501

        Date Created  # noqa: E501

        :return: The date_created of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this RoomSpaceMaintenanceItem.

        Date Created  # noqa: E501

        :param date_created: The date_created of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: datetime
        """

        self._date_created = date_created

    @property
    def security_user_id(self):
        """Gets the security_user_id of this RoomSpaceMaintenanceItem.  # noqa: E501

        Security User  # noqa: E501

        :return: The security_user_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: int
        """
        return self._security_user_id

    @security_user_id.setter
    def security_user_id(self, security_user_id):
        """Sets the security_user_id of this RoomSpaceMaintenanceItem.

        Security User  # noqa: E501

        :param security_user_id: The security_user_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: int
        """

        self._security_user_id = security_user_id

    @property
    def created_by_security_user_id(self):
        """Gets the created_by_security_user_id of this RoomSpaceMaintenanceItem.  # noqa: E501

        Created By Security User  # noqa: E501

        :return: The created_by_security_user_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: int
        """
        return self._created_by_security_user_id

    @created_by_security_user_id.setter
    def created_by_security_user_id(self, created_by_security_user_id):
        """Sets the created_by_security_user_id of this RoomSpaceMaintenanceItem.

        Created By Security User  # noqa: E501

        :param created_by_security_user_id: The created_by_security_user_id of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: int
        """

        self._created_by_security_user_id = created_by_security_user_id

    @property
    def date_modified(self):
        """Gets the date_modified of this RoomSpaceMaintenanceItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this RoomSpaceMaintenanceItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this RoomSpaceMaintenanceItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this RoomSpaceMaintenanceItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RoomSpaceMaintenanceItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
