# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class PortalStepItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'portal_step_id': 'int',
        'portal_process_id': 'int',
        'table_id': 'int',
        'table_name': 'str',
        'record_type_enum': 'str',
        'date_created': 'datetime',
        'security_user_id': 'int',
        'date_modified': 'str'
    }

    attribute_map = {
        'portal_step_id': 'PortalStepID',
        'portal_process_id': 'PortalProcessID',
        'table_id': 'TableID',
        'table_name': 'TableName',
        'record_type_enum': 'RecordTypeEnum',
        'date_created': 'DateCreated',
        'security_user_id': 'SecurityUserID',
        'date_modified': 'DateModified'
    }

    def __init__(self, portal_step_id=None, portal_process_id=None, table_id=None, table_name=None, record_type_enum=None, date_created=None, security_user_id=None, date_modified=None):  # noqa: E501
        """PortalStepItem - a model defined in Swagger"""  # noqa: E501

        self._portal_step_id = None
        self._portal_process_id = None
        self._table_id = None
        self._table_name = None
        self._record_type_enum = None
        self._date_created = None
        self._security_user_id = None
        self._date_modified = None
        self.discriminator = None

        if portal_step_id is not None:
            self.portal_step_id = portal_step_id
        if portal_process_id is not None:
            self.portal_process_id = portal_process_id
        if table_id is not None:
            self.table_id = table_id
        if table_name is not None:
            self.table_name = table_name
        if record_type_enum is not None:
            self.record_type_enum = record_type_enum
        if date_created is not None:
            self.date_created = date_created
        if security_user_id is not None:
            self.security_user_id = security_user_id
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def portal_step_id(self):
        """Gets the portal_step_id of this PortalStepItem.  # noqa: E501

        Portal Step  # noqa: E501

        :return: The portal_step_id of this PortalStepItem.  # noqa: E501
        :rtype: int
        """
        return self._portal_step_id

    @portal_step_id.setter
    def portal_step_id(self, portal_step_id):
        """Sets the portal_step_id of this PortalStepItem.

        Portal Step  # noqa: E501

        :param portal_step_id: The portal_step_id of this PortalStepItem.  # noqa: E501
        :type: int
        """

        self._portal_step_id = portal_step_id

    @property
    def portal_process_id(self):
        """Gets the portal_process_id of this PortalStepItem.  # noqa: E501

        Portal Process  # noqa: E501

        :return: The portal_process_id of this PortalStepItem.  # noqa: E501
        :rtype: int
        """
        return self._portal_process_id

    @portal_process_id.setter
    def portal_process_id(self, portal_process_id):
        """Sets the portal_process_id of this PortalStepItem.

        Portal Process  # noqa: E501

        :param portal_process_id: The portal_process_id of this PortalStepItem.  # noqa: E501
        :type: int
        """

        self._portal_process_id = portal_process_id

    @property
    def table_id(self):
        """Gets the table_id of this PortalStepItem.  # noqa: E501

        Table  # noqa: E501

        :return: The table_id of this PortalStepItem.  # noqa: E501
        :rtype: int
        """
        return self._table_id

    @table_id.setter
    def table_id(self, table_id):
        """Sets the table_id of this PortalStepItem.

        Table  # noqa: E501

        :param table_id: The table_id of this PortalStepItem.  # noqa: E501
        :type: int
        """

        self._table_id = table_id

    @property
    def table_name(self):
        """Gets the table_name of this PortalStepItem.  # noqa: E501

        Table Name  # noqa: E501

        :return: The table_name of this PortalStepItem.  # noqa: E501
        :rtype: str
        """
        return self._table_name

    @table_name.setter
    def table_name(self, table_name):
        """Sets the table_name of this PortalStepItem.

        Table Name  # noqa: E501

        :param table_name: The table_name of this PortalStepItem.  # noqa: E501
        :type: str
        """
        if table_name is not None and len(table_name) > 100:
            raise ValueError("Invalid value for `table_name`, length must be less than or equal to `100`")  # noqa: E501

        self._table_name = table_name

    @property
    def record_type_enum(self):
        """Gets the record_type_enum of this PortalStepItem.  # noqa: E501

        Record Type  # noqa: E501

        :return: The record_type_enum of this PortalStepItem.  # noqa: E501
        :rtype: str
        """
        return self._record_type_enum

    @record_type_enum.setter
    def record_type_enum(self, record_type_enum):
        """Sets the record_type_enum of this PortalStepItem.

        Record Type  # noqa: E501

        :param record_type_enum: The record_type_enum of this PortalStepItem.  # noqa: E501
        :type: str
        """

        self._record_type_enum = record_type_enum

    @property
    def date_created(self):
        """Gets the date_created of this PortalStepItem.  # noqa: E501

        Date Created  # noqa: E501

        :return: The date_created of this PortalStepItem.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this PortalStepItem.

        Date Created  # noqa: E501

        :param date_created: The date_created of this PortalStepItem.  # noqa: E501
        :type: datetime
        """

        self._date_created = date_created

    @property
    def security_user_id(self):
        """Gets the security_user_id of this PortalStepItem.  # noqa: E501

        Security User  # noqa: E501

        :return: The security_user_id of this PortalStepItem.  # noqa: E501
        :rtype: int
        """
        return self._security_user_id

    @security_user_id.setter
    def security_user_id(self, security_user_id):
        """Sets the security_user_id of this PortalStepItem.

        Security User  # noqa: E501

        :param security_user_id: The security_user_id of this PortalStepItem.  # noqa: E501
        :type: int
        """

        self._security_user_id = security_user_id

    @property
    def date_modified(self):
        """Gets the date_modified of this PortalStepItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this PortalStepItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this PortalStepItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this PortalStepItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PortalStepItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
