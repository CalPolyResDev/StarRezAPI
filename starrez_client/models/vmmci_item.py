# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class VMMCIItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'vmmciid': 'int',
        'site_id': 'int',
        'channel_number': 'int',
        'call_reason': 'int',
        'call_originator': 'int',
        'diverting_extension': 'int',
        'date_modified': 'str'
    }

    attribute_map = {
        'vmmciid': 'VMMCIID',
        'site_id': 'SiteID',
        'channel_number': 'ChannelNumber',
        'call_reason': 'CallReason',
        'call_originator': 'CallOriginator',
        'diverting_extension': 'DivertingExtension',
        'date_modified': 'DateModified'
    }

    def __init__(self, vmmciid=None, site_id=None, channel_number=None, call_reason=None, call_originator=None, diverting_extension=None, date_modified=None):  # noqa: E501
        """VMMCIItem - a model defined in Swagger"""  # noqa: E501

        self._vmmciid = None
        self._site_id = None
        self._channel_number = None
        self._call_reason = None
        self._call_originator = None
        self._diverting_extension = None
        self._date_modified = None
        self.discriminator = None

        if vmmciid is not None:
            self.vmmciid = vmmciid
        if site_id is not None:
            self.site_id = site_id
        if channel_number is not None:
            self.channel_number = channel_number
        if call_reason is not None:
            self.call_reason = call_reason
        if call_originator is not None:
            self.call_originator = call_originator
        if diverting_extension is not None:
            self.diverting_extension = diverting_extension
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def vmmciid(self):
        """Gets the vmmciid of this VMMCIItem.  # noqa: E501

        VMMCI  # noqa: E501

        :return: The vmmciid of this VMMCIItem.  # noqa: E501
        :rtype: int
        """
        return self._vmmciid

    @vmmciid.setter
    def vmmciid(self, vmmciid):
        """Sets the vmmciid of this VMMCIItem.

        VMMCI  # noqa: E501

        :param vmmciid: The vmmciid of this VMMCIItem.  # noqa: E501
        :type: int
        """

        self._vmmciid = vmmciid

    @property
    def site_id(self):
        """Gets the site_id of this VMMCIItem.  # noqa: E501

        Site  # noqa: E501

        :return: The site_id of this VMMCIItem.  # noqa: E501
        :rtype: int
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this VMMCIItem.

        Site  # noqa: E501

        :param site_id: The site_id of this VMMCIItem.  # noqa: E501
        :type: int
        """

        self._site_id = site_id

    @property
    def channel_number(self):
        """Gets the channel_number of this VMMCIItem.  # noqa: E501

        Channel Number  # noqa: E501

        :return: The channel_number of this VMMCIItem.  # noqa: E501
        :rtype: int
        """
        return self._channel_number

    @channel_number.setter
    def channel_number(self, channel_number):
        """Sets the channel_number of this VMMCIItem.

        Channel Number  # noqa: E501

        :param channel_number: The channel_number of this VMMCIItem.  # noqa: E501
        :type: int
        """

        self._channel_number = channel_number

    @property
    def call_reason(self):
        """Gets the call_reason of this VMMCIItem.  # noqa: E501

        Call Reason  # noqa: E501

        :return: The call_reason of this VMMCIItem.  # noqa: E501
        :rtype: int
        """
        return self._call_reason

    @call_reason.setter
    def call_reason(self, call_reason):
        """Sets the call_reason of this VMMCIItem.

        Call Reason  # noqa: E501

        :param call_reason: The call_reason of this VMMCIItem.  # noqa: E501
        :type: int
        """

        self._call_reason = call_reason

    @property
    def call_originator(self):
        """Gets the call_originator of this VMMCIItem.  # noqa: E501

        Call Originator  # noqa: E501

        :return: The call_originator of this VMMCIItem.  # noqa: E501
        :rtype: int
        """
        return self._call_originator

    @call_originator.setter
    def call_originator(self, call_originator):
        """Sets the call_originator of this VMMCIItem.

        Call Originator  # noqa: E501

        :param call_originator: The call_originator of this VMMCIItem.  # noqa: E501
        :type: int
        """

        self._call_originator = call_originator

    @property
    def diverting_extension(self):
        """Gets the diverting_extension of this VMMCIItem.  # noqa: E501

        Diverting Extension  # noqa: E501

        :return: The diverting_extension of this VMMCIItem.  # noqa: E501
        :rtype: int
        """
        return self._diverting_extension

    @diverting_extension.setter
    def diverting_extension(self, diverting_extension):
        """Sets the diverting_extension of this VMMCIItem.

        Diverting Extension  # noqa: E501

        :param diverting_extension: The diverting_extension of this VMMCIItem.  # noqa: E501
        :type: int
        """

        self._diverting_extension = diverting_extension

    @property
    def date_modified(self):
        """Gets the date_modified of this VMMCIItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this VMMCIItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this VMMCIItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this VMMCIItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VMMCIItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
