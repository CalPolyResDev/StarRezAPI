# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class MessageSubscriptionSettingsItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'message_subscription_settings_id': 'int',
        'message_subscription_id': 'int',
        'setting_name': 'str',
        'setting_value': 'str',
        'security_user_id': 'int',
        'date_created': 'datetime',
        'date_modified': 'str'
    }

    attribute_map = {
        'message_subscription_settings_id': 'MessageSubscriptionSettingsID',
        'message_subscription_id': 'MessageSubscriptionID',
        'setting_name': 'SettingName',
        'setting_value': 'SettingValue',
        'security_user_id': 'SecurityUserID',
        'date_created': 'DateCreated',
        'date_modified': 'DateModified'
    }

    def __init__(self, message_subscription_settings_id=None, message_subscription_id=None, setting_name=None, setting_value=None, security_user_id=None, date_created=None, date_modified=None):  # noqa: E501
        """MessageSubscriptionSettingsItem - a model defined in Swagger"""  # noqa: E501

        self._message_subscription_settings_id = None
        self._message_subscription_id = None
        self._setting_name = None
        self._setting_value = None
        self._security_user_id = None
        self._date_created = None
        self._date_modified = None
        self.discriminator = None

        if message_subscription_settings_id is not None:
            self.message_subscription_settings_id = message_subscription_settings_id
        if message_subscription_id is not None:
            self.message_subscription_id = message_subscription_id
        if setting_name is not None:
            self.setting_name = setting_name
        if setting_value is not None:
            self.setting_value = setting_value
        if security_user_id is not None:
            self.security_user_id = security_user_id
        if date_created is not None:
            self.date_created = date_created
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def message_subscription_settings_id(self):
        """Gets the message_subscription_settings_id of this MessageSubscriptionSettingsItem.  # noqa: E501

        Message Subscription Settings  # noqa: E501

        :return: The message_subscription_settings_id of this MessageSubscriptionSettingsItem.  # noqa: E501
        :rtype: int
        """
        return self._message_subscription_settings_id

    @message_subscription_settings_id.setter
    def message_subscription_settings_id(self, message_subscription_settings_id):
        """Sets the message_subscription_settings_id of this MessageSubscriptionSettingsItem.

        Message Subscription Settings  # noqa: E501

        :param message_subscription_settings_id: The message_subscription_settings_id of this MessageSubscriptionSettingsItem.  # noqa: E501
        :type: int
        """

        self._message_subscription_settings_id = message_subscription_settings_id

    @property
    def message_subscription_id(self):
        """Gets the message_subscription_id of this MessageSubscriptionSettingsItem.  # noqa: E501

        Message Subscription  # noqa: E501

        :return: The message_subscription_id of this MessageSubscriptionSettingsItem.  # noqa: E501
        :rtype: int
        """
        return self._message_subscription_id

    @message_subscription_id.setter
    def message_subscription_id(self, message_subscription_id):
        """Sets the message_subscription_id of this MessageSubscriptionSettingsItem.

        Message Subscription  # noqa: E501

        :param message_subscription_id: The message_subscription_id of this MessageSubscriptionSettingsItem.  # noqa: E501
        :type: int
        """

        self._message_subscription_id = message_subscription_id

    @property
    def setting_name(self):
        """Gets the setting_name of this MessageSubscriptionSettingsItem.  # noqa: E501

        Setting Name  # noqa: E501

        :return: The setting_name of this MessageSubscriptionSettingsItem.  # noqa: E501
        :rtype: str
        """
        return self._setting_name

    @setting_name.setter
    def setting_name(self, setting_name):
        """Sets the setting_name of this MessageSubscriptionSettingsItem.

        Setting Name  # noqa: E501

        :param setting_name: The setting_name of this MessageSubscriptionSettingsItem.  # noqa: E501
        :type: str
        """
        if setting_name is not None and len(setting_name) > 50:
            raise ValueError("Invalid value for `setting_name`, length must be less than or equal to `50`")  # noqa: E501

        self._setting_name = setting_name

    @property
    def setting_value(self):
        """Gets the setting_value of this MessageSubscriptionSettingsItem.  # noqa: E501

        Setting Value  # noqa: E501

        :return: The setting_value of this MessageSubscriptionSettingsItem.  # noqa: E501
        :rtype: str
        """
        return self._setting_value

    @setting_value.setter
    def setting_value(self, setting_value):
        """Sets the setting_value of this MessageSubscriptionSettingsItem.

        Setting Value  # noqa: E501

        :param setting_value: The setting_value of this MessageSubscriptionSettingsItem.  # noqa: E501
        :type: str
        """

        self._setting_value = setting_value

    @property
    def security_user_id(self):
        """Gets the security_user_id of this MessageSubscriptionSettingsItem.  # noqa: E501

        Security User  # noqa: E501

        :return: The security_user_id of this MessageSubscriptionSettingsItem.  # noqa: E501
        :rtype: int
        """
        return self._security_user_id

    @security_user_id.setter
    def security_user_id(self, security_user_id):
        """Sets the security_user_id of this MessageSubscriptionSettingsItem.

        Security User  # noqa: E501

        :param security_user_id: The security_user_id of this MessageSubscriptionSettingsItem.  # noqa: E501
        :type: int
        """

        self._security_user_id = security_user_id

    @property
    def date_created(self):
        """Gets the date_created of this MessageSubscriptionSettingsItem.  # noqa: E501

        Date Created  # noqa: E501

        :return: The date_created of this MessageSubscriptionSettingsItem.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this MessageSubscriptionSettingsItem.

        Date Created  # noqa: E501

        :param date_created: The date_created of this MessageSubscriptionSettingsItem.  # noqa: E501
        :type: datetime
        """

        self._date_created = date_created

    @property
    def date_modified(self):
        """Gets the date_modified of this MessageSubscriptionSettingsItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this MessageSubscriptionSettingsItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this MessageSubscriptionSettingsItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this MessageSubscriptionSettingsItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MessageSubscriptionSettingsItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
