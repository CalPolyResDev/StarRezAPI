# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class TermSessionItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'term_session_id': 'int',
        'record_type_enum': 'str',
        'term_id': 'int',
        'description': 'str',
        'web_description': 'str',
        'term_session_code': 'str',
        'room_type_id': 'int',
        'room_location_id': 'int',
        'room_location_fixed': 'bool',
        'use_active_booking_as_template': 'bool',
        'start_booking_reason_id': 'int',
        'end_booking_reason_id': 'int',
        'booking_type_id': 'int',
        'room_rate_id': 'int',
        'room_rate_amount': 'str',
        'entry_status_enum': 'str',
        'check_in_date': 'str',
        'check_out_date': 'str',
        'contract_date_start': 'str',
        'contract_date_end': 'str',
        'eta': 'str',
        'etd': 'str',
        'housekeeping_id': 'int',
        'contract_date_check_in_increase_boolean_ask_enum': 'str',
        'contract_date_check_in_decrease_boolean_ask_enum': 'str',
        'contract_date_check_out_increase_boolean_ask_enum': 'str',
        'contract_date_check_out_decrease_boolean_ask_enum': 'str',
        'check_in_date_actual_increase_boolean_ask_enum': 'str',
        'check_in_date_actual_decrease_boolean_ask_enum': 'str',
        'check_out_date_actual_increase_boolean_ask_enum': 'str',
        'check_out_date_actual_decrease_boolean_ask_enum': 'str',
        'check_in_update_start_booking_reason_boolean_ask_enum': 'str',
        'check_out_update_end_booking_reason_boolean_ask_enum': 'str',
        'cancel_booking_update_end_booking_reason_boolean_ask_enum': 'str',
        'check_in_default_start_booking_reason_id': 'int',
        'check_out_default_end_booking_reason_id': 'int',
        'cancel_booking_default_end_booking_reason_id': 'int',
        'custom_bit1': 'bool',
        'custom_bit2': 'bool',
        'custom_string1': 'str',
        'custom_string2': 'str',
        'custom_string3': 'str',
        'custom_string4': 'str',
        'custom_string5': 'str',
        'custom_string6': 'str',
        'custom_date1': 'str',
        'custom_date2': 'str',
        'date_modified': 'str'
    }

    attribute_map = {
        'term_session_id': 'TermSessionID',
        'record_type_enum': 'RecordTypeEnum',
        'term_id': 'TermID',
        'description': 'Description',
        'web_description': 'WebDescription',
        'term_session_code': 'TermSessionCode',
        'room_type_id': 'RoomTypeID',
        'room_location_id': 'RoomLocationID',
        'room_location_fixed': 'RoomLocationFixed',
        'use_active_booking_as_template': 'UseActiveBookingAsTemplate',
        'start_booking_reason_id': 'Start_BookingReasonID',
        'end_booking_reason_id': 'End_BookingReasonID',
        'booking_type_id': 'BookingTypeID',
        'room_rate_id': 'RoomRateID',
        'room_rate_amount': 'RoomRateAmount',
        'entry_status_enum': 'EntryStatusEnum',
        'check_in_date': 'CheckInDate',
        'check_out_date': 'CheckOutDate',
        'contract_date_start': 'ContractDateStart',
        'contract_date_end': 'ContractDateEnd',
        'eta': 'ETA',
        'etd': 'ETD',
        'housekeeping_id': 'HousekeepingID',
        'contract_date_check_in_increase_boolean_ask_enum': 'ContractDateCheckInIncrease_BooleanAskEnum',
        'contract_date_check_in_decrease_boolean_ask_enum': 'ContractDateCheckInDecrease_BooleanAskEnum',
        'contract_date_check_out_increase_boolean_ask_enum': 'ContractDateCheckOutIncrease_BooleanAskEnum',
        'contract_date_check_out_decrease_boolean_ask_enum': 'ContractDateCheckOutDecrease_BooleanAskEnum',
        'check_in_date_actual_increase_boolean_ask_enum': 'CheckInDateActualIncrease_BooleanAskEnum',
        'check_in_date_actual_decrease_boolean_ask_enum': 'CheckInDateActualDecrease_BooleanAskEnum',
        'check_out_date_actual_increase_boolean_ask_enum': 'CheckOutDateActualIncrease_BooleanAskEnum',
        'check_out_date_actual_decrease_boolean_ask_enum': 'CheckOutDateActualDecrease_BooleanAskEnum',
        'check_in_update_start_booking_reason_boolean_ask_enum': 'CheckInUpdateStartBookingReason_BooleanAskEnum',
        'check_out_update_end_booking_reason_boolean_ask_enum': 'CheckOutUpdateEndBookingReason_BooleanAskEnum',
        'cancel_booking_update_end_booking_reason_boolean_ask_enum': 'CancelBookingUpdateEndBookingReason_BooleanAskEnum',
        'check_in_default_start_booking_reason_id': 'CheckInDefaultStart_BookingReasonID',
        'check_out_default_end_booking_reason_id': 'CheckOutDefaultEnd_BookingReasonID',
        'cancel_booking_default_end_booking_reason_id': 'CancelBookingDefaultEnd_BookingReasonID',
        'custom_bit1': 'CustomBit1',
        'custom_bit2': 'CustomBit2',
        'custom_string1': 'CustomString1',
        'custom_string2': 'CustomString2',
        'custom_string3': 'CustomString3',
        'custom_string4': 'CustomString4',
        'custom_string5': 'CustomString5',
        'custom_string6': 'CustomString6',
        'custom_date1': 'CustomDate1',
        'custom_date2': 'CustomDate2',
        'date_modified': 'DateModified'
    }

    def __init__(self, term_session_id=None, record_type_enum=None, term_id=None, description=None, web_description=None, term_session_code=None, room_type_id=None, room_location_id=None, room_location_fixed=None, use_active_booking_as_template=None, start_booking_reason_id=None, end_booking_reason_id=None, booking_type_id=None, room_rate_id=None, room_rate_amount=None, entry_status_enum=None, check_in_date=None, check_out_date=None, contract_date_start=None, contract_date_end=None, eta=None, etd=None, housekeeping_id=None, contract_date_check_in_increase_boolean_ask_enum=None, contract_date_check_in_decrease_boolean_ask_enum=None, contract_date_check_out_increase_boolean_ask_enum=None, contract_date_check_out_decrease_boolean_ask_enum=None, check_in_date_actual_increase_boolean_ask_enum=None, check_in_date_actual_decrease_boolean_ask_enum=None, check_out_date_actual_increase_boolean_ask_enum=None, check_out_date_actual_decrease_boolean_ask_enum=None, check_in_update_start_booking_reason_boolean_ask_enum=None, check_out_update_end_booking_reason_boolean_ask_enum=None, cancel_booking_update_end_booking_reason_boolean_ask_enum=None, check_in_default_start_booking_reason_id=None, check_out_default_end_booking_reason_id=None, cancel_booking_default_end_booking_reason_id=None, custom_bit1=None, custom_bit2=None, custom_string1=None, custom_string2=None, custom_string3=None, custom_string4=None, custom_string5=None, custom_string6=None, custom_date1=None, custom_date2=None, date_modified=None):  # noqa: E501
        """TermSessionItem - a model defined in Swagger"""  # noqa: E501

        self._term_session_id = None
        self._record_type_enum = None
        self._term_id = None
        self._description = None
        self._web_description = None
        self._term_session_code = None
        self._room_type_id = None
        self._room_location_id = None
        self._room_location_fixed = None
        self._use_active_booking_as_template = None
        self._start_booking_reason_id = None
        self._end_booking_reason_id = None
        self._booking_type_id = None
        self._room_rate_id = None
        self._room_rate_amount = None
        self._entry_status_enum = None
        self._check_in_date = None
        self._check_out_date = None
        self._contract_date_start = None
        self._contract_date_end = None
        self._eta = None
        self._etd = None
        self._housekeeping_id = None
        self._contract_date_check_in_increase_boolean_ask_enum = None
        self._contract_date_check_in_decrease_boolean_ask_enum = None
        self._contract_date_check_out_increase_boolean_ask_enum = None
        self._contract_date_check_out_decrease_boolean_ask_enum = None
        self._check_in_date_actual_increase_boolean_ask_enum = None
        self._check_in_date_actual_decrease_boolean_ask_enum = None
        self._check_out_date_actual_increase_boolean_ask_enum = None
        self._check_out_date_actual_decrease_boolean_ask_enum = None
        self._check_in_update_start_booking_reason_boolean_ask_enum = None
        self._check_out_update_end_booking_reason_boolean_ask_enum = None
        self._cancel_booking_update_end_booking_reason_boolean_ask_enum = None
        self._check_in_default_start_booking_reason_id = None
        self._check_out_default_end_booking_reason_id = None
        self._cancel_booking_default_end_booking_reason_id = None
        self._custom_bit1 = None
        self._custom_bit2 = None
        self._custom_string1 = None
        self._custom_string2 = None
        self._custom_string3 = None
        self._custom_string4 = None
        self._custom_string5 = None
        self._custom_string6 = None
        self._custom_date1 = None
        self._custom_date2 = None
        self._date_modified = None
        self.discriminator = None

        if term_session_id is not None:
            self.term_session_id = term_session_id
        if record_type_enum is not None:
            self.record_type_enum = record_type_enum
        if term_id is not None:
            self.term_id = term_id
        if description is not None:
            self.description = description
        if web_description is not None:
            self.web_description = web_description
        if term_session_code is not None:
            self.term_session_code = term_session_code
        if room_type_id is not None:
            self.room_type_id = room_type_id
        if room_location_id is not None:
            self.room_location_id = room_location_id
        if room_location_fixed is not None:
            self.room_location_fixed = room_location_fixed
        if use_active_booking_as_template is not None:
            self.use_active_booking_as_template = use_active_booking_as_template
        if start_booking_reason_id is not None:
            self.start_booking_reason_id = start_booking_reason_id
        if end_booking_reason_id is not None:
            self.end_booking_reason_id = end_booking_reason_id
        if booking_type_id is not None:
            self.booking_type_id = booking_type_id
        if room_rate_id is not None:
            self.room_rate_id = room_rate_id
        if room_rate_amount is not None:
            self.room_rate_amount = room_rate_amount
        if entry_status_enum is not None:
            self.entry_status_enum = entry_status_enum
        if check_in_date is not None:
            self.check_in_date = check_in_date
        if check_out_date is not None:
            self.check_out_date = check_out_date
        if contract_date_start is not None:
            self.contract_date_start = contract_date_start
        if contract_date_end is not None:
            self.contract_date_end = contract_date_end
        if eta is not None:
            self.eta = eta
        if etd is not None:
            self.etd = etd
        if housekeeping_id is not None:
            self.housekeeping_id = housekeeping_id
        if contract_date_check_in_increase_boolean_ask_enum is not None:
            self.contract_date_check_in_increase_boolean_ask_enum = contract_date_check_in_increase_boolean_ask_enum
        if contract_date_check_in_decrease_boolean_ask_enum is not None:
            self.contract_date_check_in_decrease_boolean_ask_enum = contract_date_check_in_decrease_boolean_ask_enum
        if contract_date_check_out_increase_boolean_ask_enum is not None:
            self.contract_date_check_out_increase_boolean_ask_enum = contract_date_check_out_increase_boolean_ask_enum
        if contract_date_check_out_decrease_boolean_ask_enum is not None:
            self.contract_date_check_out_decrease_boolean_ask_enum = contract_date_check_out_decrease_boolean_ask_enum
        if check_in_date_actual_increase_boolean_ask_enum is not None:
            self.check_in_date_actual_increase_boolean_ask_enum = check_in_date_actual_increase_boolean_ask_enum
        if check_in_date_actual_decrease_boolean_ask_enum is not None:
            self.check_in_date_actual_decrease_boolean_ask_enum = check_in_date_actual_decrease_boolean_ask_enum
        if check_out_date_actual_increase_boolean_ask_enum is not None:
            self.check_out_date_actual_increase_boolean_ask_enum = check_out_date_actual_increase_boolean_ask_enum
        if check_out_date_actual_decrease_boolean_ask_enum is not None:
            self.check_out_date_actual_decrease_boolean_ask_enum = check_out_date_actual_decrease_boolean_ask_enum
        if check_in_update_start_booking_reason_boolean_ask_enum is not None:
            self.check_in_update_start_booking_reason_boolean_ask_enum = check_in_update_start_booking_reason_boolean_ask_enum
        if check_out_update_end_booking_reason_boolean_ask_enum is not None:
            self.check_out_update_end_booking_reason_boolean_ask_enum = check_out_update_end_booking_reason_boolean_ask_enum
        if cancel_booking_update_end_booking_reason_boolean_ask_enum is not None:
            self.cancel_booking_update_end_booking_reason_boolean_ask_enum = cancel_booking_update_end_booking_reason_boolean_ask_enum
        if check_in_default_start_booking_reason_id is not None:
            self.check_in_default_start_booking_reason_id = check_in_default_start_booking_reason_id
        if check_out_default_end_booking_reason_id is not None:
            self.check_out_default_end_booking_reason_id = check_out_default_end_booking_reason_id
        if cancel_booking_default_end_booking_reason_id is not None:
            self.cancel_booking_default_end_booking_reason_id = cancel_booking_default_end_booking_reason_id
        if custom_bit1 is not None:
            self.custom_bit1 = custom_bit1
        if custom_bit2 is not None:
            self.custom_bit2 = custom_bit2
        if custom_string1 is not None:
            self.custom_string1 = custom_string1
        if custom_string2 is not None:
            self.custom_string2 = custom_string2
        if custom_string3 is not None:
            self.custom_string3 = custom_string3
        if custom_string4 is not None:
            self.custom_string4 = custom_string4
        if custom_string5 is not None:
            self.custom_string5 = custom_string5
        if custom_string6 is not None:
            self.custom_string6 = custom_string6
        if custom_date1 is not None:
            self.custom_date1 = custom_date1
        if custom_date2 is not None:
            self.custom_date2 = custom_date2
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def term_session_id(self):
        """Gets the term_session_id of this TermSessionItem.  # noqa: E501

        Term Session  # noqa: E501

        :return: The term_session_id of this TermSessionItem.  # noqa: E501
        :rtype: int
        """
        return self._term_session_id

    @term_session_id.setter
    def term_session_id(self, term_session_id):
        """Sets the term_session_id of this TermSessionItem.

        Term Session  # noqa: E501

        :param term_session_id: The term_session_id of this TermSessionItem.  # noqa: E501
        :type: int
        """

        self._term_session_id = term_session_id

    @property
    def record_type_enum(self):
        """Gets the record_type_enum of this TermSessionItem.  # noqa: E501

        Record Type  # noqa: E501

        :return: The record_type_enum of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._record_type_enum

    @record_type_enum.setter
    def record_type_enum(self, record_type_enum):
        """Sets the record_type_enum of this TermSessionItem.

        Record Type  # noqa: E501

        :param record_type_enum: The record_type_enum of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._record_type_enum = record_type_enum

    @property
    def term_id(self):
        """Gets the term_id of this TermSessionItem.  # noqa: E501

        Term  # noqa: E501

        :return: The term_id of this TermSessionItem.  # noqa: E501
        :rtype: int
        """
        return self._term_id

    @term_id.setter
    def term_id(self, term_id):
        """Sets the term_id of this TermSessionItem.

        Term  # noqa: E501

        :param term_id: The term_id of this TermSessionItem.  # noqa: E501
        :type: int
        """

        self._term_id = term_id

    @property
    def description(self):
        """Gets the description of this TermSessionItem.  # noqa: E501

        Description  # noqa: E501

        :return: The description of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this TermSessionItem.

        Description  # noqa: E501

        :param description: The description of this TermSessionItem.  # noqa: E501
        :type: str
        """
        if description is not None and len(description) > 50:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `50`")  # noqa: E501

        self._description = description

    @property
    def web_description(self):
        """Gets the web_description of this TermSessionItem.  # noqa: E501

        Web Description  # noqa: E501

        :return: The web_description of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._web_description

    @web_description.setter
    def web_description(self, web_description):
        """Sets the web_description of this TermSessionItem.

        Web Description  # noqa: E501

        :param web_description: The web_description of this TermSessionItem.  # noqa: E501
        :type: str
        """
        if web_description is not None and len(web_description) > 50:
            raise ValueError("Invalid value for `web_description`, length must be less than or equal to `50`")  # noqa: E501

        self._web_description = web_description

    @property
    def term_session_code(self):
        """Gets the term_session_code of this TermSessionItem.  # noqa: E501

        Term Session Code  # noqa: E501

        :return: The term_session_code of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._term_session_code

    @term_session_code.setter
    def term_session_code(self, term_session_code):
        """Sets the term_session_code of this TermSessionItem.

        Term Session Code  # noqa: E501

        :param term_session_code: The term_session_code of this TermSessionItem.  # noqa: E501
        :type: str
        """
        if term_session_code is not None and len(term_session_code) > 10:
            raise ValueError("Invalid value for `term_session_code`, length must be less than or equal to `10`")  # noqa: E501

        self._term_session_code = term_session_code

    @property
    def room_type_id(self):
        """Gets the room_type_id of this TermSessionItem.  # noqa: E501

        Room Type  # noqa: E501

        :return: The room_type_id of this TermSessionItem.  # noqa: E501
        :rtype: int
        """
        return self._room_type_id

    @room_type_id.setter
    def room_type_id(self, room_type_id):
        """Sets the room_type_id of this TermSessionItem.

        Room Type  # noqa: E501

        :param room_type_id: The room_type_id of this TermSessionItem.  # noqa: E501
        :type: int
        """

        self._room_type_id = room_type_id

    @property
    def room_location_id(self):
        """Gets the room_location_id of this TermSessionItem.  # noqa: E501

        Room Location  # noqa: E501

        :return: The room_location_id of this TermSessionItem.  # noqa: E501
        :rtype: int
        """
        return self._room_location_id

    @room_location_id.setter
    def room_location_id(self, room_location_id):
        """Sets the room_location_id of this TermSessionItem.

        Room Location  # noqa: E501

        :param room_location_id: The room_location_id of this TermSessionItem.  # noqa: E501
        :type: int
        """

        self._room_location_id = room_location_id

    @property
    def room_location_fixed(self):
        """Gets the room_location_fixed of this TermSessionItem.  # noqa: E501

        Room Location Fixed  # noqa: E501

        :return: The room_location_fixed of this TermSessionItem.  # noqa: E501
        :rtype: bool
        """
        return self._room_location_fixed

    @room_location_fixed.setter
    def room_location_fixed(self, room_location_fixed):
        """Sets the room_location_fixed of this TermSessionItem.

        Room Location Fixed  # noqa: E501

        :param room_location_fixed: The room_location_fixed of this TermSessionItem.  # noqa: E501
        :type: bool
        """

        self._room_location_fixed = room_location_fixed

    @property
    def use_active_booking_as_template(self):
        """Gets the use_active_booking_as_template of this TermSessionItem.  # noqa: E501

        Use Active Booking As Template  # noqa: E501

        :return: The use_active_booking_as_template of this TermSessionItem.  # noqa: E501
        :rtype: bool
        """
        return self._use_active_booking_as_template

    @use_active_booking_as_template.setter
    def use_active_booking_as_template(self, use_active_booking_as_template):
        """Sets the use_active_booking_as_template of this TermSessionItem.

        Use Active Booking As Template  # noqa: E501

        :param use_active_booking_as_template: The use_active_booking_as_template of this TermSessionItem.  # noqa: E501
        :type: bool
        """

        self._use_active_booking_as_template = use_active_booking_as_template

    @property
    def start_booking_reason_id(self):
        """Gets the start_booking_reason_id of this TermSessionItem.  # noqa: E501

        Start Booking Reason  # noqa: E501

        :return: The start_booking_reason_id of this TermSessionItem.  # noqa: E501
        :rtype: int
        """
        return self._start_booking_reason_id

    @start_booking_reason_id.setter
    def start_booking_reason_id(self, start_booking_reason_id):
        """Sets the start_booking_reason_id of this TermSessionItem.

        Start Booking Reason  # noqa: E501

        :param start_booking_reason_id: The start_booking_reason_id of this TermSessionItem.  # noqa: E501
        :type: int
        """

        self._start_booking_reason_id = start_booking_reason_id

    @property
    def end_booking_reason_id(self):
        """Gets the end_booking_reason_id of this TermSessionItem.  # noqa: E501

        End Booking Reason  # noqa: E501

        :return: The end_booking_reason_id of this TermSessionItem.  # noqa: E501
        :rtype: int
        """
        return self._end_booking_reason_id

    @end_booking_reason_id.setter
    def end_booking_reason_id(self, end_booking_reason_id):
        """Sets the end_booking_reason_id of this TermSessionItem.

        End Booking Reason  # noqa: E501

        :param end_booking_reason_id: The end_booking_reason_id of this TermSessionItem.  # noqa: E501
        :type: int
        """

        self._end_booking_reason_id = end_booking_reason_id

    @property
    def booking_type_id(self):
        """Gets the booking_type_id of this TermSessionItem.  # noqa: E501

        Booking Type  # noqa: E501

        :return: The booking_type_id of this TermSessionItem.  # noqa: E501
        :rtype: int
        """
        return self._booking_type_id

    @booking_type_id.setter
    def booking_type_id(self, booking_type_id):
        """Sets the booking_type_id of this TermSessionItem.

        Booking Type  # noqa: E501

        :param booking_type_id: The booking_type_id of this TermSessionItem.  # noqa: E501
        :type: int
        """

        self._booking_type_id = booking_type_id

    @property
    def room_rate_id(self):
        """Gets the room_rate_id of this TermSessionItem.  # noqa: E501

        Room Rate  # noqa: E501

        :return: The room_rate_id of this TermSessionItem.  # noqa: E501
        :rtype: int
        """
        return self._room_rate_id

    @room_rate_id.setter
    def room_rate_id(self, room_rate_id):
        """Sets the room_rate_id of this TermSessionItem.

        Room Rate  # noqa: E501

        :param room_rate_id: The room_rate_id of this TermSessionItem.  # noqa: E501
        :type: int
        """

        self._room_rate_id = room_rate_id

    @property
    def room_rate_amount(self):
        """Gets the room_rate_amount of this TermSessionItem.  # noqa: E501

        Room Rate Amount  # noqa: E501

        :return: The room_rate_amount of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._room_rate_amount

    @room_rate_amount.setter
    def room_rate_amount(self, room_rate_amount):
        """Sets the room_rate_amount of this TermSessionItem.

        Room Rate Amount  # noqa: E501

        :param room_rate_amount: The room_rate_amount of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._room_rate_amount = room_rate_amount

    @property
    def entry_status_enum(self):
        """Gets the entry_status_enum of this TermSessionItem.  # noqa: E501

        Entry Status  # noqa: E501

        :return: The entry_status_enum of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._entry_status_enum

    @entry_status_enum.setter
    def entry_status_enum(self, entry_status_enum):
        """Sets the entry_status_enum of this TermSessionItem.

        Entry Status  # noqa: E501

        :param entry_status_enum: The entry_status_enum of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._entry_status_enum = entry_status_enum

    @property
    def check_in_date(self):
        """Gets the check_in_date of this TermSessionItem.  # noqa: E501

        Check In Date  # noqa: E501

        :return: The check_in_date of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._check_in_date

    @check_in_date.setter
    def check_in_date(self, check_in_date):
        """Sets the check_in_date of this TermSessionItem.

        Check In Date  # noqa: E501

        :param check_in_date: The check_in_date of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._check_in_date = check_in_date

    @property
    def check_out_date(self):
        """Gets the check_out_date of this TermSessionItem.  # noqa: E501

        Check Out Date  # noqa: E501

        :return: The check_out_date of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._check_out_date

    @check_out_date.setter
    def check_out_date(self, check_out_date):
        """Sets the check_out_date of this TermSessionItem.

        Check Out Date  # noqa: E501

        :param check_out_date: The check_out_date of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._check_out_date = check_out_date

    @property
    def contract_date_start(self):
        """Gets the contract_date_start of this TermSessionItem.  # noqa: E501

        Contract Date Start  # noqa: E501

        :return: The contract_date_start of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._contract_date_start

    @contract_date_start.setter
    def contract_date_start(self, contract_date_start):
        """Sets the contract_date_start of this TermSessionItem.

        Contract Date Start  # noqa: E501

        :param contract_date_start: The contract_date_start of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._contract_date_start = contract_date_start

    @property
    def contract_date_end(self):
        """Gets the contract_date_end of this TermSessionItem.  # noqa: E501

        Contract Date End  # noqa: E501

        :return: The contract_date_end of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._contract_date_end

    @contract_date_end.setter
    def contract_date_end(self, contract_date_end):
        """Sets the contract_date_end of this TermSessionItem.

        Contract Date End  # noqa: E501

        :param contract_date_end: The contract_date_end of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._contract_date_end = contract_date_end

    @property
    def eta(self):
        """Gets the eta of this TermSessionItem.  # noqa: E501

        ETA  # noqa: E501

        :return: The eta of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._eta

    @eta.setter
    def eta(self, eta):
        """Sets the eta of this TermSessionItem.

        ETA  # noqa: E501

        :param eta: The eta of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._eta = eta

    @property
    def etd(self):
        """Gets the etd of this TermSessionItem.  # noqa: E501

        ETD  # noqa: E501

        :return: The etd of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._etd

    @etd.setter
    def etd(self, etd):
        """Sets the etd of this TermSessionItem.

        ETD  # noqa: E501

        :param etd: The etd of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._etd = etd

    @property
    def housekeeping_id(self):
        """Gets the housekeeping_id of this TermSessionItem.  # noqa: E501

        Housekeeping  # noqa: E501

        :return: The housekeeping_id of this TermSessionItem.  # noqa: E501
        :rtype: int
        """
        return self._housekeeping_id

    @housekeeping_id.setter
    def housekeeping_id(self, housekeeping_id):
        """Sets the housekeeping_id of this TermSessionItem.

        Housekeeping  # noqa: E501

        :param housekeeping_id: The housekeeping_id of this TermSessionItem.  # noqa: E501
        :type: int
        """

        self._housekeeping_id = housekeeping_id

    @property
    def contract_date_check_in_increase_boolean_ask_enum(self):
        """Gets the contract_date_check_in_increase_boolean_ask_enum of this TermSessionItem.  # noqa: E501

        Contract Date Check In Increase Boolean Ask  # noqa: E501

        :return: The contract_date_check_in_increase_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._contract_date_check_in_increase_boolean_ask_enum

    @contract_date_check_in_increase_boolean_ask_enum.setter
    def contract_date_check_in_increase_boolean_ask_enum(self, contract_date_check_in_increase_boolean_ask_enum):
        """Sets the contract_date_check_in_increase_boolean_ask_enum of this TermSessionItem.

        Contract Date Check In Increase Boolean Ask  # noqa: E501

        :param contract_date_check_in_increase_boolean_ask_enum: The contract_date_check_in_increase_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._contract_date_check_in_increase_boolean_ask_enum = contract_date_check_in_increase_boolean_ask_enum

    @property
    def contract_date_check_in_decrease_boolean_ask_enum(self):
        """Gets the contract_date_check_in_decrease_boolean_ask_enum of this TermSessionItem.  # noqa: E501

        Contract Date Check In Decrease Boolean Ask  # noqa: E501

        :return: The contract_date_check_in_decrease_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._contract_date_check_in_decrease_boolean_ask_enum

    @contract_date_check_in_decrease_boolean_ask_enum.setter
    def contract_date_check_in_decrease_boolean_ask_enum(self, contract_date_check_in_decrease_boolean_ask_enum):
        """Sets the contract_date_check_in_decrease_boolean_ask_enum of this TermSessionItem.

        Contract Date Check In Decrease Boolean Ask  # noqa: E501

        :param contract_date_check_in_decrease_boolean_ask_enum: The contract_date_check_in_decrease_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._contract_date_check_in_decrease_boolean_ask_enum = contract_date_check_in_decrease_boolean_ask_enum

    @property
    def contract_date_check_out_increase_boolean_ask_enum(self):
        """Gets the contract_date_check_out_increase_boolean_ask_enum of this TermSessionItem.  # noqa: E501

        Contract Date Check Out Increase Boolean Ask  # noqa: E501

        :return: The contract_date_check_out_increase_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._contract_date_check_out_increase_boolean_ask_enum

    @contract_date_check_out_increase_boolean_ask_enum.setter
    def contract_date_check_out_increase_boolean_ask_enum(self, contract_date_check_out_increase_boolean_ask_enum):
        """Sets the contract_date_check_out_increase_boolean_ask_enum of this TermSessionItem.

        Contract Date Check Out Increase Boolean Ask  # noqa: E501

        :param contract_date_check_out_increase_boolean_ask_enum: The contract_date_check_out_increase_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._contract_date_check_out_increase_boolean_ask_enum = contract_date_check_out_increase_boolean_ask_enum

    @property
    def contract_date_check_out_decrease_boolean_ask_enum(self):
        """Gets the contract_date_check_out_decrease_boolean_ask_enum of this TermSessionItem.  # noqa: E501

        Contract Date Check Out Decrease Boolean Ask  # noqa: E501

        :return: The contract_date_check_out_decrease_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._contract_date_check_out_decrease_boolean_ask_enum

    @contract_date_check_out_decrease_boolean_ask_enum.setter
    def contract_date_check_out_decrease_boolean_ask_enum(self, contract_date_check_out_decrease_boolean_ask_enum):
        """Sets the contract_date_check_out_decrease_boolean_ask_enum of this TermSessionItem.

        Contract Date Check Out Decrease Boolean Ask  # noqa: E501

        :param contract_date_check_out_decrease_boolean_ask_enum: The contract_date_check_out_decrease_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._contract_date_check_out_decrease_boolean_ask_enum = contract_date_check_out_decrease_boolean_ask_enum

    @property
    def check_in_date_actual_increase_boolean_ask_enum(self):
        """Gets the check_in_date_actual_increase_boolean_ask_enum of this TermSessionItem.  # noqa: E501

        Check In Date Actual Increase Boolean Ask  # noqa: E501

        :return: The check_in_date_actual_increase_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._check_in_date_actual_increase_boolean_ask_enum

    @check_in_date_actual_increase_boolean_ask_enum.setter
    def check_in_date_actual_increase_boolean_ask_enum(self, check_in_date_actual_increase_boolean_ask_enum):
        """Sets the check_in_date_actual_increase_boolean_ask_enum of this TermSessionItem.

        Check In Date Actual Increase Boolean Ask  # noqa: E501

        :param check_in_date_actual_increase_boolean_ask_enum: The check_in_date_actual_increase_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._check_in_date_actual_increase_boolean_ask_enum = check_in_date_actual_increase_boolean_ask_enum

    @property
    def check_in_date_actual_decrease_boolean_ask_enum(self):
        """Gets the check_in_date_actual_decrease_boolean_ask_enum of this TermSessionItem.  # noqa: E501

        Check In Date Actual Decrease Boolean Ask  # noqa: E501

        :return: The check_in_date_actual_decrease_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._check_in_date_actual_decrease_boolean_ask_enum

    @check_in_date_actual_decrease_boolean_ask_enum.setter
    def check_in_date_actual_decrease_boolean_ask_enum(self, check_in_date_actual_decrease_boolean_ask_enum):
        """Sets the check_in_date_actual_decrease_boolean_ask_enum of this TermSessionItem.

        Check In Date Actual Decrease Boolean Ask  # noqa: E501

        :param check_in_date_actual_decrease_boolean_ask_enum: The check_in_date_actual_decrease_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._check_in_date_actual_decrease_boolean_ask_enum = check_in_date_actual_decrease_boolean_ask_enum

    @property
    def check_out_date_actual_increase_boolean_ask_enum(self):
        """Gets the check_out_date_actual_increase_boolean_ask_enum of this TermSessionItem.  # noqa: E501

        Check Out Date Actual Increase Boolean Ask  # noqa: E501

        :return: The check_out_date_actual_increase_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._check_out_date_actual_increase_boolean_ask_enum

    @check_out_date_actual_increase_boolean_ask_enum.setter
    def check_out_date_actual_increase_boolean_ask_enum(self, check_out_date_actual_increase_boolean_ask_enum):
        """Sets the check_out_date_actual_increase_boolean_ask_enum of this TermSessionItem.

        Check Out Date Actual Increase Boolean Ask  # noqa: E501

        :param check_out_date_actual_increase_boolean_ask_enum: The check_out_date_actual_increase_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._check_out_date_actual_increase_boolean_ask_enum = check_out_date_actual_increase_boolean_ask_enum

    @property
    def check_out_date_actual_decrease_boolean_ask_enum(self):
        """Gets the check_out_date_actual_decrease_boolean_ask_enum of this TermSessionItem.  # noqa: E501

        Check Out Date Actual Decrease Boolean Ask  # noqa: E501

        :return: The check_out_date_actual_decrease_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._check_out_date_actual_decrease_boolean_ask_enum

    @check_out_date_actual_decrease_boolean_ask_enum.setter
    def check_out_date_actual_decrease_boolean_ask_enum(self, check_out_date_actual_decrease_boolean_ask_enum):
        """Sets the check_out_date_actual_decrease_boolean_ask_enum of this TermSessionItem.

        Check Out Date Actual Decrease Boolean Ask  # noqa: E501

        :param check_out_date_actual_decrease_boolean_ask_enum: The check_out_date_actual_decrease_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._check_out_date_actual_decrease_boolean_ask_enum = check_out_date_actual_decrease_boolean_ask_enum

    @property
    def check_in_update_start_booking_reason_boolean_ask_enum(self):
        """Gets the check_in_update_start_booking_reason_boolean_ask_enum of this TermSessionItem.  # noqa: E501

        Check In Update Start Booking Reason Boolean Ask  # noqa: E501

        :return: The check_in_update_start_booking_reason_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._check_in_update_start_booking_reason_boolean_ask_enum

    @check_in_update_start_booking_reason_boolean_ask_enum.setter
    def check_in_update_start_booking_reason_boolean_ask_enum(self, check_in_update_start_booking_reason_boolean_ask_enum):
        """Sets the check_in_update_start_booking_reason_boolean_ask_enum of this TermSessionItem.

        Check In Update Start Booking Reason Boolean Ask  # noqa: E501

        :param check_in_update_start_booking_reason_boolean_ask_enum: The check_in_update_start_booking_reason_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._check_in_update_start_booking_reason_boolean_ask_enum = check_in_update_start_booking_reason_boolean_ask_enum

    @property
    def check_out_update_end_booking_reason_boolean_ask_enum(self):
        """Gets the check_out_update_end_booking_reason_boolean_ask_enum of this TermSessionItem.  # noqa: E501

        Check Out Update End Booking Reason Boolean Ask  # noqa: E501

        :return: The check_out_update_end_booking_reason_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._check_out_update_end_booking_reason_boolean_ask_enum

    @check_out_update_end_booking_reason_boolean_ask_enum.setter
    def check_out_update_end_booking_reason_boolean_ask_enum(self, check_out_update_end_booking_reason_boolean_ask_enum):
        """Sets the check_out_update_end_booking_reason_boolean_ask_enum of this TermSessionItem.

        Check Out Update End Booking Reason Boolean Ask  # noqa: E501

        :param check_out_update_end_booking_reason_boolean_ask_enum: The check_out_update_end_booking_reason_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._check_out_update_end_booking_reason_boolean_ask_enum = check_out_update_end_booking_reason_boolean_ask_enum

    @property
    def cancel_booking_update_end_booking_reason_boolean_ask_enum(self):
        """Gets the cancel_booking_update_end_booking_reason_boolean_ask_enum of this TermSessionItem.  # noqa: E501

        Cancel Booking Update End Booking Reason Boolean Ask  # noqa: E501

        :return: The cancel_booking_update_end_booking_reason_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._cancel_booking_update_end_booking_reason_boolean_ask_enum

    @cancel_booking_update_end_booking_reason_boolean_ask_enum.setter
    def cancel_booking_update_end_booking_reason_boolean_ask_enum(self, cancel_booking_update_end_booking_reason_boolean_ask_enum):
        """Sets the cancel_booking_update_end_booking_reason_boolean_ask_enum of this TermSessionItem.

        Cancel Booking Update End Booking Reason Boolean Ask  # noqa: E501

        :param cancel_booking_update_end_booking_reason_boolean_ask_enum: The cancel_booking_update_end_booking_reason_boolean_ask_enum of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._cancel_booking_update_end_booking_reason_boolean_ask_enum = cancel_booking_update_end_booking_reason_boolean_ask_enum

    @property
    def check_in_default_start_booking_reason_id(self):
        """Gets the check_in_default_start_booking_reason_id of this TermSessionItem.  # noqa: E501

        Check In Default Start Booking Reason  # noqa: E501

        :return: The check_in_default_start_booking_reason_id of this TermSessionItem.  # noqa: E501
        :rtype: int
        """
        return self._check_in_default_start_booking_reason_id

    @check_in_default_start_booking_reason_id.setter
    def check_in_default_start_booking_reason_id(self, check_in_default_start_booking_reason_id):
        """Sets the check_in_default_start_booking_reason_id of this TermSessionItem.

        Check In Default Start Booking Reason  # noqa: E501

        :param check_in_default_start_booking_reason_id: The check_in_default_start_booking_reason_id of this TermSessionItem.  # noqa: E501
        :type: int
        """

        self._check_in_default_start_booking_reason_id = check_in_default_start_booking_reason_id

    @property
    def check_out_default_end_booking_reason_id(self):
        """Gets the check_out_default_end_booking_reason_id of this TermSessionItem.  # noqa: E501

        Check Out Default End Booking Reason  # noqa: E501

        :return: The check_out_default_end_booking_reason_id of this TermSessionItem.  # noqa: E501
        :rtype: int
        """
        return self._check_out_default_end_booking_reason_id

    @check_out_default_end_booking_reason_id.setter
    def check_out_default_end_booking_reason_id(self, check_out_default_end_booking_reason_id):
        """Sets the check_out_default_end_booking_reason_id of this TermSessionItem.

        Check Out Default End Booking Reason  # noqa: E501

        :param check_out_default_end_booking_reason_id: The check_out_default_end_booking_reason_id of this TermSessionItem.  # noqa: E501
        :type: int
        """

        self._check_out_default_end_booking_reason_id = check_out_default_end_booking_reason_id

    @property
    def cancel_booking_default_end_booking_reason_id(self):
        """Gets the cancel_booking_default_end_booking_reason_id of this TermSessionItem.  # noqa: E501

        Cancel Booking Default End Booking Reason  # noqa: E501

        :return: The cancel_booking_default_end_booking_reason_id of this TermSessionItem.  # noqa: E501
        :rtype: int
        """
        return self._cancel_booking_default_end_booking_reason_id

    @cancel_booking_default_end_booking_reason_id.setter
    def cancel_booking_default_end_booking_reason_id(self, cancel_booking_default_end_booking_reason_id):
        """Sets the cancel_booking_default_end_booking_reason_id of this TermSessionItem.

        Cancel Booking Default End Booking Reason  # noqa: E501

        :param cancel_booking_default_end_booking_reason_id: The cancel_booking_default_end_booking_reason_id of this TermSessionItem.  # noqa: E501
        :type: int
        """

        self._cancel_booking_default_end_booking_reason_id = cancel_booking_default_end_booking_reason_id

    @property
    def custom_bit1(self):
        """Gets the custom_bit1 of this TermSessionItem.  # noqa: E501

        Custom Flag 1  # noqa: E501

        :return: The custom_bit1 of this TermSessionItem.  # noqa: E501
        :rtype: bool
        """
        return self._custom_bit1

    @custom_bit1.setter
    def custom_bit1(self, custom_bit1):
        """Sets the custom_bit1 of this TermSessionItem.

        Custom Flag 1  # noqa: E501

        :param custom_bit1: The custom_bit1 of this TermSessionItem.  # noqa: E501
        :type: bool
        """

        self._custom_bit1 = custom_bit1

    @property
    def custom_bit2(self):
        """Gets the custom_bit2 of this TermSessionItem.  # noqa: E501

        Custom Flag 2  # noqa: E501

        :return: The custom_bit2 of this TermSessionItem.  # noqa: E501
        :rtype: bool
        """
        return self._custom_bit2

    @custom_bit2.setter
    def custom_bit2(self, custom_bit2):
        """Sets the custom_bit2 of this TermSessionItem.

        Custom Flag 2  # noqa: E501

        :param custom_bit2: The custom_bit2 of this TermSessionItem.  # noqa: E501
        :type: bool
        """

        self._custom_bit2 = custom_bit2

    @property
    def custom_string1(self):
        """Gets the custom_string1 of this TermSessionItem.  # noqa: E501

        Custom String 1  # noqa: E501

        :return: The custom_string1 of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string1

    @custom_string1.setter
    def custom_string1(self, custom_string1):
        """Sets the custom_string1 of this TermSessionItem.

        Custom String 1  # noqa: E501

        :param custom_string1: The custom_string1 of this TermSessionItem.  # noqa: E501
        :type: str
        """
        if custom_string1 is not None and len(custom_string1) > 50:
            raise ValueError("Invalid value for `custom_string1`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string1 = custom_string1

    @property
    def custom_string2(self):
        """Gets the custom_string2 of this TermSessionItem.  # noqa: E501

        Custom String 2  # noqa: E501

        :return: The custom_string2 of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string2

    @custom_string2.setter
    def custom_string2(self, custom_string2):
        """Sets the custom_string2 of this TermSessionItem.

        Custom String 2  # noqa: E501

        :param custom_string2: The custom_string2 of this TermSessionItem.  # noqa: E501
        :type: str
        """
        if custom_string2 is not None and len(custom_string2) > 50:
            raise ValueError("Invalid value for `custom_string2`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string2 = custom_string2

    @property
    def custom_string3(self):
        """Gets the custom_string3 of this TermSessionItem.  # noqa: E501

        Custom String 3  # noqa: E501

        :return: The custom_string3 of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string3

    @custom_string3.setter
    def custom_string3(self, custom_string3):
        """Sets the custom_string3 of this TermSessionItem.

        Custom String 3  # noqa: E501

        :param custom_string3: The custom_string3 of this TermSessionItem.  # noqa: E501
        :type: str
        """
        if custom_string3 is not None and len(custom_string3) > 50:
            raise ValueError("Invalid value for `custom_string3`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string3 = custom_string3

    @property
    def custom_string4(self):
        """Gets the custom_string4 of this TermSessionItem.  # noqa: E501

        Custom String 4  # noqa: E501

        :return: The custom_string4 of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string4

    @custom_string4.setter
    def custom_string4(self, custom_string4):
        """Sets the custom_string4 of this TermSessionItem.

        Custom String 4  # noqa: E501

        :param custom_string4: The custom_string4 of this TermSessionItem.  # noqa: E501
        :type: str
        """
        if custom_string4 is not None and len(custom_string4) > 50:
            raise ValueError("Invalid value for `custom_string4`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string4 = custom_string4

    @property
    def custom_string5(self):
        """Gets the custom_string5 of this TermSessionItem.  # noqa: E501

        Custom String 5  # noqa: E501

        :return: The custom_string5 of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string5

    @custom_string5.setter
    def custom_string5(self, custom_string5):
        """Sets the custom_string5 of this TermSessionItem.

        Custom String 5  # noqa: E501

        :param custom_string5: The custom_string5 of this TermSessionItem.  # noqa: E501
        :type: str
        """
        if custom_string5 is not None and len(custom_string5) > 50:
            raise ValueError("Invalid value for `custom_string5`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string5 = custom_string5

    @property
    def custom_string6(self):
        """Gets the custom_string6 of this TermSessionItem.  # noqa: E501

        Custom String 6  # noqa: E501

        :return: The custom_string6 of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string6

    @custom_string6.setter
    def custom_string6(self, custom_string6):
        """Sets the custom_string6 of this TermSessionItem.

        Custom String 6  # noqa: E501

        :param custom_string6: The custom_string6 of this TermSessionItem.  # noqa: E501
        :type: str
        """
        if custom_string6 is not None and len(custom_string6) > 50:
            raise ValueError("Invalid value for `custom_string6`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string6 = custom_string6

    @property
    def custom_date1(self):
        """Gets the custom_date1 of this TermSessionItem.  # noqa: E501

        Custom Date 1  # noqa: E501

        :return: The custom_date1 of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_date1

    @custom_date1.setter
    def custom_date1(self, custom_date1):
        """Sets the custom_date1 of this TermSessionItem.

        Custom Date 1  # noqa: E501

        :param custom_date1: The custom_date1 of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._custom_date1 = custom_date1

    @property
    def custom_date2(self):
        """Gets the custom_date2 of this TermSessionItem.  # noqa: E501

        Custom Date 2  # noqa: E501

        :return: The custom_date2 of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_date2

    @custom_date2.setter
    def custom_date2(self, custom_date2):
        """Sets the custom_date2 of this TermSessionItem.

        Custom Date 2  # noqa: E501

        :param custom_date2: The custom_date2 of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._custom_date2 = custom_date2

    @property
    def date_modified(self):
        """Gets the date_modified of this TermSessionItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this TermSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this TermSessionItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this TermSessionItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TermSessionItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
