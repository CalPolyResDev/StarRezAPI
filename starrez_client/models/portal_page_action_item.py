# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class PortalPageActionItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'portal_page_action_id': 'int',
        'portal_page_id': 'int',
        'portal_action_id': 'int',
        'event_name': 'str',
        'check_order': 'int',
        'date_modified': 'str'
    }

    attribute_map = {
        'portal_page_action_id': 'PortalPageActionID',
        'portal_page_id': 'PortalPageID',
        'portal_action_id': 'PortalActionID',
        'event_name': 'EventName',
        'check_order': 'CheckOrder',
        'date_modified': 'DateModified'
    }

    def __init__(self, portal_page_action_id=None, portal_page_id=None, portal_action_id=None, event_name=None, check_order=None, date_modified=None):  # noqa: E501
        """PortalPageActionItem - a model defined in Swagger"""  # noqa: E501

        self._portal_page_action_id = None
        self._portal_page_id = None
        self._portal_action_id = None
        self._event_name = None
        self._check_order = None
        self._date_modified = None
        self.discriminator = None

        if portal_page_action_id is not None:
            self.portal_page_action_id = portal_page_action_id
        if portal_page_id is not None:
            self.portal_page_id = portal_page_id
        if portal_action_id is not None:
            self.portal_action_id = portal_action_id
        if event_name is not None:
            self.event_name = event_name
        if check_order is not None:
            self.check_order = check_order
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def portal_page_action_id(self):
        """Gets the portal_page_action_id of this PortalPageActionItem.  # noqa: E501

        Portal Page Action  # noqa: E501

        :return: The portal_page_action_id of this PortalPageActionItem.  # noqa: E501
        :rtype: int
        """
        return self._portal_page_action_id

    @portal_page_action_id.setter
    def portal_page_action_id(self, portal_page_action_id):
        """Sets the portal_page_action_id of this PortalPageActionItem.

        Portal Page Action  # noqa: E501

        :param portal_page_action_id: The portal_page_action_id of this PortalPageActionItem.  # noqa: E501
        :type: int
        """

        self._portal_page_action_id = portal_page_action_id

    @property
    def portal_page_id(self):
        """Gets the portal_page_id of this PortalPageActionItem.  # noqa: E501

        Portal Page  # noqa: E501

        :return: The portal_page_id of this PortalPageActionItem.  # noqa: E501
        :rtype: int
        """
        return self._portal_page_id

    @portal_page_id.setter
    def portal_page_id(self, portal_page_id):
        """Sets the portal_page_id of this PortalPageActionItem.

        Portal Page  # noqa: E501

        :param portal_page_id: The portal_page_id of this PortalPageActionItem.  # noqa: E501
        :type: int
        """

        self._portal_page_id = portal_page_id

    @property
    def portal_action_id(self):
        """Gets the portal_action_id of this PortalPageActionItem.  # noqa: E501

        Portal Action  # noqa: E501

        :return: The portal_action_id of this PortalPageActionItem.  # noqa: E501
        :rtype: int
        """
        return self._portal_action_id

    @portal_action_id.setter
    def portal_action_id(self, portal_action_id):
        """Sets the portal_action_id of this PortalPageActionItem.

        Portal Action  # noqa: E501

        :param portal_action_id: The portal_action_id of this PortalPageActionItem.  # noqa: E501
        :type: int
        """

        self._portal_action_id = portal_action_id

    @property
    def event_name(self):
        """Gets the event_name of this PortalPageActionItem.  # noqa: E501

        Event Name  # noqa: E501

        :return: The event_name of this PortalPageActionItem.  # noqa: E501
        :rtype: str
        """
        return self._event_name

    @event_name.setter
    def event_name(self, event_name):
        """Sets the event_name of this PortalPageActionItem.

        Event Name  # noqa: E501

        :param event_name: The event_name of this PortalPageActionItem.  # noqa: E501
        :type: str
        """
        if event_name is not None and len(event_name) > 200:
            raise ValueError("Invalid value for `event_name`, length must be less than or equal to `200`")  # noqa: E501

        self._event_name = event_name

    @property
    def check_order(self):
        """Gets the check_order of this PortalPageActionItem.  # noqa: E501

        Check Order  # noqa: E501

        :return: The check_order of this PortalPageActionItem.  # noqa: E501
        :rtype: int
        """
        return self._check_order

    @check_order.setter
    def check_order(self, check_order):
        """Sets the check_order of this PortalPageActionItem.

        Check Order  # noqa: E501

        :param check_order: The check_order of this PortalPageActionItem.  # noqa: E501
        :type: int
        """

        self._check_order = check_order

    @property
    def date_modified(self):
        """Gets the date_modified of this PortalPageActionItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this PortalPageActionItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this PortalPageActionItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this PortalPageActionItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PortalPageActionItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
