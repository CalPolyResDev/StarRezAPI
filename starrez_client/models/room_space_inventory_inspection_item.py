# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class RoomSpaceInventoryInspectionItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'room_space_inventory_inspection_id': 'int',
        'room_space_inventory_inspection_run_id': 'int',
        'room_space_id': 'int',
        'entry_id': 'int',
        'inspection_status_enum': 'str',
        'description': 'str',
        'date_inspected': 'str',
        'date_reviewed': 'str',
        'comments': 'str',
        'signature': 'str',
        'signature_staff': 'str',
        'date_created': 'datetime',
        'date_modified': 'str'
    }

    attribute_map = {
        'room_space_inventory_inspection_id': 'RoomSpaceInventoryInspectionID',
        'room_space_inventory_inspection_run_id': 'RoomSpaceInventoryInspectionRunID',
        'room_space_id': 'RoomSpaceID',
        'entry_id': 'EntryID',
        'inspection_status_enum': 'InspectionStatusEnum',
        'description': 'Description',
        'date_inspected': 'DateInspected',
        'date_reviewed': 'DateReviewed',
        'comments': 'Comments',
        'signature': 'Signature',
        'signature_staff': 'SignatureStaff',
        'date_created': 'DateCreated',
        'date_modified': 'DateModified'
    }

    def __init__(self, room_space_inventory_inspection_id=None, room_space_inventory_inspection_run_id=None, room_space_id=None, entry_id=None, inspection_status_enum=None, description=None, date_inspected=None, date_reviewed=None, comments=None, signature=None, signature_staff=None, date_created=None, date_modified=None):  # noqa: E501
        """RoomSpaceInventoryInspectionItem - a model defined in Swagger"""  # noqa: E501

        self._room_space_inventory_inspection_id = None
        self._room_space_inventory_inspection_run_id = None
        self._room_space_id = None
        self._entry_id = None
        self._inspection_status_enum = None
        self._description = None
        self._date_inspected = None
        self._date_reviewed = None
        self._comments = None
        self._signature = None
        self._signature_staff = None
        self._date_created = None
        self._date_modified = None
        self.discriminator = None

        if room_space_inventory_inspection_id is not None:
            self.room_space_inventory_inspection_id = room_space_inventory_inspection_id
        if room_space_inventory_inspection_run_id is not None:
            self.room_space_inventory_inspection_run_id = room_space_inventory_inspection_run_id
        if room_space_id is not None:
            self.room_space_id = room_space_id
        if entry_id is not None:
            self.entry_id = entry_id
        if inspection_status_enum is not None:
            self.inspection_status_enum = inspection_status_enum
        if description is not None:
            self.description = description
        if date_inspected is not None:
            self.date_inspected = date_inspected
        if date_reviewed is not None:
            self.date_reviewed = date_reviewed
        if comments is not None:
            self.comments = comments
        if signature is not None:
            self.signature = signature
        if signature_staff is not None:
            self.signature_staff = signature_staff
        if date_created is not None:
            self.date_created = date_created
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def room_space_inventory_inspection_id(self):
        """Gets the room_space_inventory_inspection_id of this RoomSpaceInventoryInspectionItem.  # noqa: E501

        Room Space Inventory Inspection  # noqa: E501

        :return: The room_space_inventory_inspection_id of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :rtype: int
        """
        return self._room_space_inventory_inspection_id

    @room_space_inventory_inspection_id.setter
    def room_space_inventory_inspection_id(self, room_space_inventory_inspection_id):
        """Sets the room_space_inventory_inspection_id of this RoomSpaceInventoryInspectionItem.

        Room Space Inventory Inspection  # noqa: E501

        :param room_space_inventory_inspection_id: The room_space_inventory_inspection_id of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :type: int
        """

        self._room_space_inventory_inspection_id = room_space_inventory_inspection_id

    @property
    def room_space_inventory_inspection_run_id(self):
        """Gets the room_space_inventory_inspection_run_id of this RoomSpaceInventoryInspectionItem.  # noqa: E501

        Room Space Inventory Inspection Run  # noqa: E501

        :return: The room_space_inventory_inspection_run_id of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :rtype: int
        """
        return self._room_space_inventory_inspection_run_id

    @room_space_inventory_inspection_run_id.setter
    def room_space_inventory_inspection_run_id(self, room_space_inventory_inspection_run_id):
        """Sets the room_space_inventory_inspection_run_id of this RoomSpaceInventoryInspectionItem.

        Room Space Inventory Inspection Run  # noqa: E501

        :param room_space_inventory_inspection_run_id: The room_space_inventory_inspection_run_id of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :type: int
        """

        self._room_space_inventory_inspection_run_id = room_space_inventory_inspection_run_id

    @property
    def room_space_id(self):
        """Gets the room_space_id of this RoomSpaceInventoryInspectionItem.  # noqa: E501

        Room Space  # noqa: E501

        :return: The room_space_id of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :rtype: int
        """
        return self._room_space_id

    @room_space_id.setter
    def room_space_id(self, room_space_id):
        """Sets the room_space_id of this RoomSpaceInventoryInspectionItem.

        Room Space  # noqa: E501

        :param room_space_id: The room_space_id of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :type: int
        """

        self._room_space_id = room_space_id

    @property
    def entry_id(self):
        """Gets the entry_id of this RoomSpaceInventoryInspectionItem.  # noqa: E501

        Entry  # noqa: E501

        :return: The entry_id of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :rtype: int
        """
        return self._entry_id

    @entry_id.setter
    def entry_id(self, entry_id):
        """Sets the entry_id of this RoomSpaceInventoryInspectionItem.

        Entry  # noqa: E501

        :param entry_id: The entry_id of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :type: int
        """

        self._entry_id = entry_id

    @property
    def inspection_status_enum(self):
        """Gets the inspection_status_enum of this RoomSpaceInventoryInspectionItem.  # noqa: E501

        Inspection Status  # noqa: E501

        :return: The inspection_status_enum of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :rtype: str
        """
        return self._inspection_status_enum

    @inspection_status_enum.setter
    def inspection_status_enum(self, inspection_status_enum):
        """Sets the inspection_status_enum of this RoomSpaceInventoryInspectionItem.

        Inspection Status  # noqa: E501

        :param inspection_status_enum: The inspection_status_enum of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :type: str
        """

        self._inspection_status_enum = inspection_status_enum

    @property
    def description(self):
        """Gets the description of this RoomSpaceInventoryInspectionItem.  # noqa: E501

        Description  # noqa: E501

        :return: The description of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RoomSpaceInventoryInspectionItem.

        Description  # noqa: E501

        :param description: The description of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :type: str
        """
        if description is not None and len(description) > 100:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `100`")  # noqa: E501

        self._description = description

    @property
    def date_inspected(self):
        """Gets the date_inspected of this RoomSpaceInventoryInspectionItem.  # noqa: E501

        Date Inspected  # noqa: E501

        :return: The date_inspected of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :rtype: str
        """
        return self._date_inspected

    @date_inspected.setter
    def date_inspected(self, date_inspected):
        """Sets the date_inspected of this RoomSpaceInventoryInspectionItem.

        Date Inspected  # noqa: E501

        :param date_inspected: The date_inspected of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :type: str
        """

        self._date_inspected = date_inspected

    @property
    def date_reviewed(self):
        """Gets the date_reviewed of this RoomSpaceInventoryInspectionItem.  # noqa: E501

        Date Reviewed  # noqa: E501

        :return: The date_reviewed of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :rtype: str
        """
        return self._date_reviewed

    @date_reviewed.setter
    def date_reviewed(self, date_reviewed):
        """Sets the date_reviewed of this RoomSpaceInventoryInspectionItem.

        Date Reviewed  # noqa: E501

        :param date_reviewed: The date_reviewed of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :type: str
        """

        self._date_reviewed = date_reviewed

    @property
    def comments(self):
        """Gets the comments of this RoomSpaceInventoryInspectionItem.  # noqa: E501

        Comments  # noqa: E501

        :return: The comments of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this RoomSpaceInventoryInspectionItem.

        Comments  # noqa: E501

        :param comments: The comments of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :type: str
        """
        if comments is not None and len(comments) > 500:
            raise ValueError("Invalid value for `comments`, length must be less than or equal to `500`")  # noqa: E501

        self._comments = comments

    @property
    def signature(self):
        """Gets the signature of this RoomSpaceInventoryInspectionItem.  # noqa: E501

        Signature  # noqa: E501

        :return: The signature of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :rtype: str
        """
        return self._signature

    @signature.setter
    def signature(self, signature):
        """Sets the signature of this RoomSpaceInventoryInspectionItem.

        Signature  # noqa: E501

        :param signature: The signature of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :type: str
        """

        self._signature = signature

    @property
    def signature_staff(self):
        """Gets the signature_staff of this RoomSpaceInventoryInspectionItem.  # noqa: E501

        Signature Staff  # noqa: E501

        :return: The signature_staff of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :rtype: str
        """
        return self._signature_staff

    @signature_staff.setter
    def signature_staff(self, signature_staff):
        """Sets the signature_staff of this RoomSpaceInventoryInspectionItem.

        Signature Staff  # noqa: E501

        :param signature_staff: The signature_staff of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :type: str
        """

        self._signature_staff = signature_staff

    @property
    def date_created(self):
        """Gets the date_created of this RoomSpaceInventoryInspectionItem.  # noqa: E501

        Date Created  # noqa: E501

        :return: The date_created of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this RoomSpaceInventoryInspectionItem.

        Date Created  # noqa: E501

        :param date_created: The date_created of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :type: datetime
        """

        self._date_created = date_created

    @property
    def date_modified(self):
        """Gets the date_modified of this RoomSpaceInventoryInspectionItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this RoomSpaceInventoryInspectionItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this RoomSpaceInventoryInspectionItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RoomSpaceInventoryInspectionItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
