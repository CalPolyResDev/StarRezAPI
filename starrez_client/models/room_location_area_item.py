# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class RoomLocationAreaItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'room_location_area_id': 'int',
        'record_type_enum': 'str',
        'non_residential': 'bool',
        'description': 'str',
        'comments': 'str',
        'gender_type_enum': 'str',
        'custom_bit1': 'bool',
        'custom_bit2': 'bool',
        'custom_string1': 'str',
        'custom_string2': 'str',
        'custom_string3': 'str',
        'custom_string4': 'str',
        'custom_string5': 'str',
        'custom_string6': 'str',
        'custom_date1': 'str',
        'custom_date2': 'str',
        'view_on_web': 'bool',
        'web_image_location': 'str',
        'web_description': 'str',
        'web_comments': 'str',
        'date_modified': 'str'
    }

    attribute_map = {
        'room_location_area_id': 'RoomLocationAreaID',
        'record_type_enum': 'RecordTypeEnum',
        'non_residential': 'NonResidential',
        'description': 'Description',
        'comments': 'Comments',
        'gender_type_enum': 'GenderTypeEnum',
        'custom_bit1': 'CustomBit1',
        'custom_bit2': 'CustomBit2',
        'custom_string1': 'CustomString1',
        'custom_string2': 'CustomString2',
        'custom_string3': 'CustomString3',
        'custom_string4': 'CustomString4',
        'custom_string5': 'CustomString5',
        'custom_string6': 'CustomString6',
        'custom_date1': 'CustomDate1',
        'custom_date2': 'CustomDate2',
        'view_on_web': 'ViewOnWeb',
        'web_image_location': 'WebImageLocation',
        'web_description': 'WebDescription',
        'web_comments': 'WebComments',
        'date_modified': 'DateModified'
    }

    def __init__(self, room_location_area_id=None, record_type_enum=None, non_residential=None, description=None, comments=None, gender_type_enum=None, custom_bit1=None, custom_bit2=None, custom_string1=None, custom_string2=None, custom_string3=None, custom_string4=None, custom_string5=None, custom_string6=None, custom_date1=None, custom_date2=None, view_on_web=None, web_image_location=None, web_description=None, web_comments=None, date_modified=None):  # noqa: E501
        """RoomLocationAreaItem - a model defined in Swagger"""  # noqa: E501

        self._room_location_area_id = None
        self._record_type_enum = None
        self._non_residential = None
        self._description = None
        self._comments = None
        self._gender_type_enum = None
        self._custom_bit1 = None
        self._custom_bit2 = None
        self._custom_string1 = None
        self._custom_string2 = None
        self._custom_string3 = None
        self._custom_string4 = None
        self._custom_string5 = None
        self._custom_string6 = None
        self._custom_date1 = None
        self._custom_date2 = None
        self._view_on_web = None
        self._web_image_location = None
        self._web_description = None
        self._web_comments = None
        self._date_modified = None
        self.discriminator = None

        if room_location_area_id is not None:
            self.room_location_area_id = room_location_area_id
        if record_type_enum is not None:
            self.record_type_enum = record_type_enum
        if non_residential is not None:
            self.non_residential = non_residential
        if description is not None:
            self.description = description
        if comments is not None:
            self.comments = comments
        if gender_type_enum is not None:
            self.gender_type_enum = gender_type_enum
        if custom_bit1 is not None:
            self.custom_bit1 = custom_bit1
        if custom_bit2 is not None:
            self.custom_bit2 = custom_bit2
        if custom_string1 is not None:
            self.custom_string1 = custom_string1
        if custom_string2 is not None:
            self.custom_string2 = custom_string2
        if custom_string3 is not None:
            self.custom_string3 = custom_string3
        if custom_string4 is not None:
            self.custom_string4 = custom_string4
        if custom_string5 is not None:
            self.custom_string5 = custom_string5
        if custom_string6 is not None:
            self.custom_string6 = custom_string6
        if custom_date1 is not None:
            self.custom_date1 = custom_date1
        if custom_date2 is not None:
            self.custom_date2 = custom_date2
        if view_on_web is not None:
            self.view_on_web = view_on_web
        if web_image_location is not None:
            self.web_image_location = web_image_location
        if web_description is not None:
            self.web_description = web_description
        if web_comments is not None:
            self.web_comments = web_comments
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def room_location_area_id(self):
        """Gets the room_location_area_id of this RoomLocationAreaItem.  # noqa: E501

        Room Location Area  # noqa: E501

        :return: The room_location_area_id of this RoomLocationAreaItem.  # noqa: E501
        :rtype: int
        """
        return self._room_location_area_id

    @room_location_area_id.setter
    def room_location_area_id(self, room_location_area_id):
        """Sets the room_location_area_id of this RoomLocationAreaItem.

        Room Location Area  # noqa: E501

        :param room_location_area_id: The room_location_area_id of this RoomLocationAreaItem.  # noqa: E501
        :type: int
        """

        self._room_location_area_id = room_location_area_id

    @property
    def record_type_enum(self):
        """Gets the record_type_enum of this RoomLocationAreaItem.  # noqa: E501

        Record Type  # noqa: E501

        :return: The record_type_enum of this RoomLocationAreaItem.  # noqa: E501
        :rtype: str
        """
        return self._record_type_enum

    @record_type_enum.setter
    def record_type_enum(self, record_type_enum):
        """Sets the record_type_enum of this RoomLocationAreaItem.

        Record Type  # noqa: E501

        :param record_type_enum: The record_type_enum of this RoomLocationAreaItem.  # noqa: E501
        :type: str
        """

        self._record_type_enum = record_type_enum

    @property
    def non_residential(self):
        """Gets the non_residential of this RoomLocationAreaItem.  # noqa: E501

        Non Residential  # noqa: E501

        :return: The non_residential of this RoomLocationAreaItem.  # noqa: E501
        :rtype: bool
        """
        return self._non_residential

    @non_residential.setter
    def non_residential(self, non_residential):
        """Sets the non_residential of this RoomLocationAreaItem.

        Non Residential  # noqa: E501

        :param non_residential: The non_residential of this RoomLocationAreaItem.  # noqa: E501
        :type: bool
        """

        self._non_residential = non_residential

    @property
    def description(self):
        """Gets the description of this RoomLocationAreaItem.  # noqa: E501

        Description  # noqa: E501

        :return: The description of this RoomLocationAreaItem.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RoomLocationAreaItem.

        Description  # noqa: E501

        :param description: The description of this RoomLocationAreaItem.  # noqa: E501
        :type: str
        """
        if description is not None and len(description) > 35:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `35`")  # noqa: E501

        self._description = description

    @property
    def comments(self):
        """Gets the comments of this RoomLocationAreaItem.  # noqa: E501

        Comments  # noqa: E501

        :return: The comments of this RoomLocationAreaItem.  # noqa: E501
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this RoomLocationAreaItem.

        Comments  # noqa: E501

        :param comments: The comments of this RoomLocationAreaItem.  # noqa: E501
        :type: str
        """
        if comments is not None and len(comments) > 200:
            raise ValueError("Invalid value for `comments`, length must be less than or equal to `200`")  # noqa: E501

        self._comments = comments

    @property
    def gender_type_enum(self):
        """Gets the gender_type_enum of this RoomLocationAreaItem.  # noqa: E501

        Gender Type  # noqa: E501

        :return: The gender_type_enum of this RoomLocationAreaItem.  # noqa: E501
        :rtype: str
        """
        return self._gender_type_enum

    @gender_type_enum.setter
    def gender_type_enum(self, gender_type_enum):
        """Sets the gender_type_enum of this RoomLocationAreaItem.

        Gender Type  # noqa: E501

        :param gender_type_enum: The gender_type_enum of this RoomLocationAreaItem.  # noqa: E501
        :type: str
        """

        self._gender_type_enum = gender_type_enum

    @property
    def custom_bit1(self):
        """Gets the custom_bit1 of this RoomLocationAreaItem.  # noqa: E501

        Custom Flag 1  # noqa: E501

        :return: The custom_bit1 of this RoomLocationAreaItem.  # noqa: E501
        :rtype: bool
        """
        return self._custom_bit1

    @custom_bit1.setter
    def custom_bit1(self, custom_bit1):
        """Sets the custom_bit1 of this RoomLocationAreaItem.

        Custom Flag 1  # noqa: E501

        :param custom_bit1: The custom_bit1 of this RoomLocationAreaItem.  # noqa: E501
        :type: bool
        """

        self._custom_bit1 = custom_bit1

    @property
    def custom_bit2(self):
        """Gets the custom_bit2 of this RoomLocationAreaItem.  # noqa: E501

        Custom Flag 2  # noqa: E501

        :return: The custom_bit2 of this RoomLocationAreaItem.  # noqa: E501
        :rtype: bool
        """
        return self._custom_bit2

    @custom_bit2.setter
    def custom_bit2(self, custom_bit2):
        """Sets the custom_bit2 of this RoomLocationAreaItem.

        Custom Flag 2  # noqa: E501

        :param custom_bit2: The custom_bit2 of this RoomLocationAreaItem.  # noqa: E501
        :type: bool
        """

        self._custom_bit2 = custom_bit2

    @property
    def custom_string1(self):
        """Gets the custom_string1 of this RoomLocationAreaItem.  # noqa: E501

        Address 1  # noqa: E501

        :return: The custom_string1 of this RoomLocationAreaItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string1

    @custom_string1.setter
    def custom_string1(self, custom_string1):
        """Sets the custom_string1 of this RoomLocationAreaItem.

        Address 1  # noqa: E501

        :param custom_string1: The custom_string1 of this RoomLocationAreaItem.  # noqa: E501
        :type: str
        """
        if custom_string1 is not None and len(custom_string1) > 50:
            raise ValueError("Invalid value for `custom_string1`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string1 = custom_string1

    @property
    def custom_string2(self):
        """Gets the custom_string2 of this RoomLocationAreaItem.  # noqa: E501

        Custom String 2  # noqa: E501

        :return: The custom_string2 of this RoomLocationAreaItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string2

    @custom_string2.setter
    def custom_string2(self, custom_string2):
        """Sets the custom_string2 of this RoomLocationAreaItem.

        Custom String 2  # noqa: E501

        :param custom_string2: The custom_string2 of this RoomLocationAreaItem.  # noqa: E501
        :type: str
        """
        if custom_string2 is not None and len(custom_string2) > 50:
            raise ValueError("Invalid value for `custom_string2`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string2 = custom_string2

    @property
    def custom_string3(self):
        """Gets the custom_string3 of this RoomLocationAreaItem.  # noqa: E501

        Custom String 3  # noqa: E501

        :return: The custom_string3 of this RoomLocationAreaItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string3

    @custom_string3.setter
    def custom_string3(self, custom_string3):
        """Sets the custom_string3 of this RoomLocationAreaItem.

        Custom String 3  # noqa: E501

        :param custom_string3: The custom_string3 of this RoomLocationAreaItem.  # noqa: E501
        :type: str
        """
        if custom_string3 is not None and len(custom_string3) > 50:
            raise ValueError("Invalid value for `custom_string3`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string3 = custom_string3

    @property
    def custom_string4(self):
        """Gets the custom_string4 of this RoomLocationAreaItem.  # noqa: E501

        Custom String 4  # noqa: E501

        :return: The custom_string4 of this RoomLocationAreaItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string4

    @custom_string4.setter
    def custom_string4(self, custom_string4):
        """Sets the custom_string4 of this RoomLocationAreaItem.

        Custom String 4  # noqa: E501

        :param custom_string4: The custom_string4 of this RoomLocationAreaItem.  # noqa: E501
        :type: str
        """
        if custom_string4 is not None and len(custom_string4) > 50:
            raise ValueError("Invalid value for `custom_string4`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string4 = custom_string4

    @property
    def custom_string5(self):
        """Gets the custom_string5 of this RoomLocationAreaItem.  # noqa: E501

        Custom String 5  # noqa: E501

        :return: The custom_string5 of this RoomLocationAreaItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string5

    @custom_string5.setter
    def custom_string5(self, custom_string5):
        """Sets the custom_string5 of this RoomLocationAreaItem.

        Custom String 5  # noqa: E501

        :param custom_string5: The custom_string5 of this RoomLocationAreaItem.  # noqa: E501
        :type: str
        """
        if custom_string5 is not None and len(custom_string5) > 50:
            raise ValueError("Invalid value for `custom_string5`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string5 = custom_string5

    @property
    def custom_string6(self):
        """Gets the custom_string6 of this RoomLocationAreaItem.  # noqa: E501

        Custom String 6  # noqa: E501

        :return: The custom_string6 of this RoomLocationAreaItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string6

    @custom_string6.setter
    def custom_string6(self, custom_string6):
        """Sets the custom_string6 of this RoomLocationAreaItem.

        Custom String 6  # noqa: E501

        :param custom_string6: The custom_string6 of this RoomLocationAreaItem.  # noqa: E501
        :type: str
        """
        if custom_string6 is not None and len(custom_string6) > 50:
            raise ValueError("Invalid value for `custom_string6`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string6 = custom_string6

    @property
    def custom_date1(self):
        """Gets the custom_date1 of this RoomLocationAreaItem.  # noqa: E501

        Custom Date 1  # noqa: E501

        :return: The custom_date1 of this RoomLocationAreaItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_date1

    @custom_date1.setter
    def custom_date1(self, custom_date1):
        """Sets the custom_date1 of this RoomLocationAreaItem.

        Custom Date 1  # noqa: E501

        :param custom_date1: The custom_date1 of this RoomLocationAreaItem.  # noqa: E501
        :type: str
        """

        self._custom_date1 = custom_date1

    @property
    def custom_date2(self):
        """Gets the custom_date2 of this RoomLocationAreaItem.  # noqa: E501

        Custom Date 2  # noqa: E501

        :return: The custom_date2 of this RoomLocationAreaItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_date2

    @custom_date2.setter
    def custom_date2(self, custom_date2):
        """Sets the custom_date2 of this RoomLocationAreaItem.

        Custom Date 2  # noqa: E501

        :param custom_date2: The custom_date2 of this RoomLocationAreaItem.  # noqa: E501
        :type: str
        """

        self._custom_date2 = custom_date2

    @property
    def view_on_web(self):
        """Gets the view_on_web of this RoomLocationAreaItem.  # noqa: E501

        View On Web  # noqa: E501

        :return: The view_on_web of this RoomLocationAreaItem.  # noqa: E501
        :rtype: bool
        """
        return self._view_on_web

    @view_on_web.setter
    def view_on_web(self, view_on_web):
        """Sets the view_on_web of this RoomLocationAreaItem.

        View On Web  # noqa: E501

        :param view_on_web: The view_on_web of this RoomLocationAreaItem.  # noqa: E501
        :type: bool
        """

        self._view_on_web = view_on_web

    @property
    def web_image_location(self):
        """Gets the web_image_location of this RoomLocationAreaItem.  # noqa: E501

        Web Image Location  # noqa: E501

        :return: The web_image_location of this RoomLocationAreaItem.  # noqa: E501
        :rtype: str
        """
        return self._web_image_location

    @web_image_location.setter
    def web_image_location(self, web_image_location):
        """Sets the web_image_location of this RoomLocationAreaItem.

        Web Image Location  # noqa: E501

        :param web_image_location: The web_image_location of this RoomLocationAreaItem.  # noqa: E501
        :type: str
        """
        if web_image_location is not None and len(web_image_location) > 200:
            raise ValueError("Invalid value for `web_image_location`, length must be less than or equal to `200`")  # noqa: E501

        self._web_image_location = web_image_location

    @property
    def web_description(self):
        """Gets the web_description of this RoomLocationAreaItem.  # noqa: E501

        Web Description  # noqa: E501

        :return: The web_description of this RoomLocationAreaItem.  # noqa: E501
        :rtype: str
        """
        return self._web_description

    @web_description.setter
    def web_description(self, web_description):
        """Sets the web_description of this RoomLocationAreaItem.

        Web Description  # noqa: E501

        :param web_description: The web_description of this RoomLocationAreaItem.  # noqa: E501
        :type: str
        """
        if web_description is not None and len(web_description) > 1000:
            raise ValueError("Invalid value for `web_description`, length must be less than or equal to `1000`")  # noqa: E501

        self._web_description = web_description

    @property
    def web_comments(self):
        """Gets the web_comments of this RoomLocationAreaItem.  # noqa: E501

        Web Comments  # noqa: E501

        :return: The web_comments of this RoomLocationAreaItem.  # noqa: E501
        :rtype: str
        """
        return self._web_comments

    @web_comments.setter
    def web_comments(self, web_comments):
        """Sets the web_comments of this RoomLocationAreaItem.

        Web Comments  # noqa: E501

        :param web_comments: The web_comments of this RoomLocationAreaItem.  # noqa: E501
        :type: str
        """

        self._web_comments = web_comments

    @property
    def date_modified(self):
        """Gets the date_modified of this RoomLocationAreaItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this RoomLocationAreaItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this RoomLocationAreaItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this RoomLocationAreaItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RoomLocationAreaItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
