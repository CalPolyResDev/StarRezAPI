# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class ProfileItemItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'profile_item_id': 'int',
        'profile_type_id': 'int',
        'record_type_enum': 'str',
        'description': 'str',
        'profile_item_type_enum': 'str',
        'profile_weight_low_description': 'str',
        'profile_weight_medium_low_description': 'str',
        'profile_weight_medium_description': 'str',
        'profile_weight_medium_high_description': 'str',
        'profile_weight_high_description': 'str',
        'profile_weight_description': 'str',
        'comments': 'str',
        'web_icon_class': 'str',
        'view_on_web': 'bool',
        'web_description': 'str',
        'web_order': 'int',
        'web_comments': 'str',
        'date_modified': 'str'
    }

    attribute_map = {
        'profile_item_id': 'ProfileItemID',
        'profile_type_id': 'ProfileTypeID',
        'record_type_enum': 'RecordTypeEnum',
        'description': 'Description',
        'profile_item_type_enum': 'ProfileItemTypeEnum',
        'profile_weight_low_description': 'ProfileWeightLowDescription',
        'profile_weight_medium_low_description': 'ProfileWeightMediumLowDescription',
        'profile_weight_medium_description': 'ProfileWeightMediumDescription',
        'profile_weight_medium_high_description': 'ProfileWeightMediumHighDescription',
        'profile_weight_high_description': 'ProfileWeightHighDescription',
        'profile_weight_description': 'ProfileWeightDescription',
        'comments': 'Comments',
        'web_icon_class': 'WebIconClass',
        'view_on_web': 'ViewOnWeb',
        'web_description': 'WebDescription',
        'web_order': 'WebOrder',
        'web_comments': 'WebComments',
        'date_modified': 'DateModified'
    }

    def __init__(self, profile_item_id=None, profile_type_id=None, record_type_enum=None, description=None, profile_item_type_enum=None, profile_weight_low_description=None, profile_weight_medium_low_description=None, profile_weight_medium_description=None, profile_weight_medium_high_description=None, profile_weight_high_description=None, profile_weight_description=None, comments=None, web_icon_class=None, view_on_web=None, web_description=None, web_order=None, web_comments=None, date_modified=None):  # noqa: E501
        """ProfileItemItem - a model defined in Swagger"""  # noqa: E501

        self._profile_item_id = None
        self._profile_type_id = None
        self._record_type_enum = None
        self._description = None
        self._profile_item_type_enum = None
        self._profile_weight_low_description = None
        self._profile_weight_medium_low_description = None
        self._profile_weight_medium_description = None
        self._profile_weight_medium_high_description = None
        self._profile_weight_high_description = None
        self._profile_weight_description = None
        self._comments = None
        self._web_icon_class = None
        self._view_on_web = None
        self._web_description = None
        self._web_order = None
        self._web_comments = None
        self._date_modified = None
        self.discriminator = None

        if profile_item_id is not None:
            self.profile_item_id = profile_item_id
        if profile_type_id is not None:
            self.profile_type_id = profile_type_id
        if record_type_enum is not None:
            self.record_type_enum = record_type_enum
        if description is not None:
            self.description = description
        if profile_item_type_enum is not None:
            self.profile_item_type_enum = profile_item_type_enum
        if profile_weight_low_description is not None:
            self.profile_weight_low_description = profile_weight_low_description
        if profile_weight_medium_low_description is not None:
            self.profile_weight_medium_low_description = profile_weight_medium_low_description
        if profile_weight_medium_description is not None:
            self.profile_weight_medium_description = profile_weight_medium_description
        if profile_weight_medium_high_description is not None:
            self.profile_weight_medium_high_description = profile_weight_medium_high_description
        if profile_weight_high_description is not None:
            self.profile_weight_high_description = profile_weight_high_description
        if profile_weight_description is not None:
            self.profile_weight_description = profile_weight_description
        if comments is not None:
            self.comments = comments
        if web_icon_class is not None:
            self.web_icon_class = web_icon_class
        if view_on_web is not None:
            self.view_on_web = view_on_web
        if web_description is not None:
            self.web_description = web_description
        if web_order is not None:
            self.web_order = web_order
        if web_comments is not None:
            self.web_comments = web_comments
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def profile_item_id(self):
        """Gets the profile_item_id of this ProfileItemItem.  # noqa: E501

        Profile Item  # noqa: E501

        :return: The profile_item_id of this ProfileItemItem.  # noqa: E501
        :rtype: int
        """
        return self._profile_item_id

    @profile_item_id.setter
    def profile_item_id(self, profile_item_id):
        """Sets the profile_item_id of this ProfileItemItem.

        Profile Item  # noqa: E501

        :param profile_item_id: The profile_item_id of this ProfileItemItem.  # noqa: E501
        :type: int
        """

        self._profile_item_id = profile_item_id

    @property
    def profile_type_id(self):
        """Gets the profile_type_id of this ProfileItemItem.  # noqa: E501

        Profile Type  # noqa: E501

        :return: The profile_type_id of this ProfileItemItem.  # noqa: E501
        :rtype: int
        """
        return self._profile_type_id

    @profile_type_id.setter
    def profile_type_id(self, profile_type_id):
        """Sets the profile_type_id of this ProfileItemItem.

        Profile Type  # noqa: E501

        :param profile_type_id: The profile_type_id of this ProfileItemItem.  # noqa: E501
        :type: int
        """

        self._profile_type_id = profile_type_id

    @property
    def record_type_enum(self):
        """Gets the record_type_enum of this ProfileItemItem.  # noqa: E501

        Record Type  # noqa: E501

        :return: The record_type_enum of this ProfileItemItem.  # noqa: E501
        :rtype: str
        """
        return self._record_type_enum

    @record_type_enum.setter
    def record_type_enum(self, record_type_enum):
        """Sets the record_type_enum of this ProfileItemItem.

        Record Type  # noqa: E501

        :param record_type_enum: The record_type_enum of this ProfileItemItem.  # noqa: E501
        :type: str
        """

        self._record_type_enum = record_type_enum

    @property
    def description(self):
        """Gets the description of this ProfileItemItem.  # noqa: E501

        Description  # noqa: E501

        :return: The description of this ProfileItemItem.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ProfileItemItem.

        Description  # noqa: E501

        :param description: The description of this ProfileItemItem.  # noqa: E501
        :type: str
        """
        if description is not None and len(description) > 30:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `30`")  # noqa: E501

        self._description = description

    @property
    def profile_item_type_enum(self):
        """Gets the profile_item_type_enum of this ProfileItemItem.  # noqa: E501

        Profile Item Type  # noqa: E501

        :return: The profile_item_type_enum of this ProfileItemItem.  # noqa: E501
        :rtype: str
        """
        return self._profile_item_type_enum

    @profile_item_type_enum.setter
    def profile_item_type_enum(self, profile_item_type_enum):
        """Sets the profile_item_type_enum of this ProfileItemItem.

        Profile Item Type  # noqa: E501

        :param profile_item_type_enum: The profile_item_type_enum of this ProfileItemItem.  # noqa: E501
        :type: str
        """

        self._profile_item_type_enum = profile_item_type_enum

    @property
    def profile_weight_low_description(self):
        """Gets the profile_weight_low_description of this ProfileItemItem.  # noqa: E501

        Profile Weight Low Description  # noqa: E501

        :return: The profile_weight_low_description of this ProfileItemItem.  # noqa: E501
        :rtype: str
        """
        return self._profile_weight_low_description

    @profile_weight_low_description.setter
    def profile_weight_low_description(self, profile_weight_low_description):
        """Sets the profile_weight_low_description of this ProfileItemItem.

        Profile Weight Low Description  # noqa: E501

        :param profile_weight_low_description: The profile_weight_low_description of this ProfileItemItem.  # noqa: E501
        :type: str
        """
        if profile_weight_low_description is not None and len(profile_weight_low_description) > 100:
            raise ValueError("Invalid value for `profile_weight_low_description`, length must be less than or equal to `100`")  # noqa: E501

        self._profile_weight_low_description = profile_weight_low_description

    @property
    def profile_weight_medium_low_description(self):
        """Gets the profile_weight_medium_low_description of this ProfileItemItem.  # noqa: E501

        Profile Weight Medium Low Description  # noqa: E501

        :return: The profile_weight_medium_low_description of this ProfileItemItem.  # noqa: E501
        :rtype: str
        """
        return self._profile_weight_medium_low_description

    @profile_weight_medium_low_description.setter
    def profile_weight_medium_low_description(self, profile_weight_medium_low_description):
        """Sets the profile_weight_medium_low_description of this ProfileItemItem.

        Profile Weight Medium Low Description  # noqa: E501

        :param profile_weight_medium_low_description: The profile_weight_medium_low_description of this ProfileItemItem.  # noqa: E501
        :type: str
        """
        if profile_weight_medium_low_description is not None and len(profile_weight_medium_low_description) > 100:
            raise ValueError("Invalid value for `profile_weight_medium_low_description`, length must be less than or equal to `100`")  # noqa: E501

        self._profile_weight_medium_low_description = profile_weight_medium_low_description

    @property
    def profile_weight_medium_description(self):
        """Gets the profile_weight_medium_description of this ProfileItemItem.  # noqa: E501

        Profile Weight Medium Description  # noqa: E501

        :return: The profile_weight_medium_description of this ProfileItemItem.  # noqa: E501
        :rtype: str
        """
        return self._profile_weight_medium_description

    @profile_weight_medium_description.setter
    def profile_weight_medium_description(self, profile_weight_medium_description):
        """Sets the profile_weight_medium_description of this ProfileItemItem.

        Profile Weight Medium Description  # noqa: E501

        :param profile_weight_medium_description: The profile_weight_medium_description of this ProfileItemItem.  # noqa: E501
        :type: str
        """
        if profile_weight_medium_description is not None and len(profile_weight_medium_description) > 100:
            raise ValueError("Invalid value for `profile_weight_medium_description`, length must be less than or equal to `100`")  # noqa: E501

        self._profile_weight_medium_description = profile_weight_medium_description

    @property
    def profile_weight_medium_high_description(self):
        """Gets the profile_weight_medium_high_description of this ProfileItemItem.  # noqa: E501

        Profile Weight Medium High Description  # noqa: E501

        :return: The profile_weight_medium_high_description of this ProfileItemItem.  # noqa: E501
        :rtype: str
        """
        return self._profile_weight_medium_high_description

    @profile_weight_medium_high_description.setter
    def profile_weight_medium_high_description(self, profile_weight_medium_high_description):
        """Sets the profile_weight_medium_high_description of this ProfileItemItem.

        Profile Weight Medium High Description  # noqa: E501

        :param profile_weight_medium_high_description: The profile_weight_medium_high_description of this ProfileItemItem.  # noqa: E501
        :type: str
        """
        if profile_weight_medium_high_description is not None and len(profile_weight_medium_high_description) > 100:
            raise ValueError("Invalid value for `profile_weight_medium_high_description`, length must be less than or equal to `100`")  # noqa: E501

        self._profile_weight_medium_high_description = profile_weight_medium_high_description

    @property
    def profile_weight_high_description(self):
        """Gets the profile_weight_high_description of this ProfileItemItem.  # noqa: E501

        Profile Weight High Description  # noqa: E501

        :return: The profile_weight_high_description of this ProfileItemItem.  # noqa: E501
        :rtype: str
        """
        return self._profile_weight_high_description

    @profile_weight_high_description.setter
    def profile_weight_high_description(self, profile_weight_high_description):
        """Sets the profile_weight_high_description of this ProfileItemItem.

        Profile Weight High Description  # noqa: E501

        :param profile_weight_high_description: The profile_weight_high_description of this ProfileItemItem.  # noqa: E501
        :type: str
        """
        if profile_weight_high_description is not None and len(profile_weight_high_description) > 100:
            raise ValueError("Invalid value for `profile_weight_high_description`, length must be less than or equal to `100`")  # noqa: E501

        self._profile_weight_high_description = profile_weight_high_description

    @property
    def profile_weight_description(self):
        """Gets the profile_weight_description of this ProfileItemItem.  # noqa: E501

        Profile Weight Description  # noqa: E501

        :return: The profile_weight_description of this ProfileItemItem.  # noqa: E501
        :rtype: str
        """
        return self._profile_weight_description

    @profile_weight_description.setter
    def profile_weight_description(self, profile_weight_description):
        """Sets the profile_weight_description of this ProfileItemItem.

        Profile Weight Description  # noqa: E501

        :param profile_weight_description: The profile_weight_description of this ProfileItemItem.  # noqa: E501
        :type: str
        """
        if profile_weight_description is not None and len(profile_weight_description) > 200:
            raise ValueError("Invalid value for `profile_weight_description`, length must be less than or equal to `200`")  # noqa: E501

        self._profile_weight_description = profile_weight_description

    @property
    def comments(self):
        """Gets the comments of this ProfileItemItem.  # noqa: E501

        Comments  # noqa: E501

        :return: The comments of this ProfileItemItem.  # noqa: E501
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this ProfileItemItem.

        Comments  # noqa: E501

        :param comments: The comments of this ProfileItemItem.  # noqa: E501
        :type: str
        """
        if comments is not None and len(comments) > 100:
            raise ValueError("Invalid value for `comments`, length must be less than or equal to `100`")  # noqa: E501

        self._comments = comments

    @property
    def web_icon_class(self):
        """Gets the web_icon_class of this ProfileItemItem.  # noqa: E501

        Web Icon Class  # noqa: E501

        :return: The web_icon_class of this ProfileItemItem.  # noqa: E501
        :rtype: str
        """
        return self._web_icon_class

    @web_icon_class.setter
    def web_icon_class(self, web_icon_class):
        """Sets the web_icon_class of this ProfileItemItem.

        Web Icon Class  # noqa: E501

        :param web_icon_class: The web_icon_class of this ProfileItemItem.  # noqa: E501
        :type: str
        """
        if web_icon_class is not None and len(web_icon_class) > 30:
            raise ValueError("Invalid value for `web_icon_class`, length must be less than or equal to `30`")  # noqa: E501

        self._web_icon_class = web_icon_class

    @property
    def view_on_web(self):
        """Gets the view_on_web of this ProfileItemItem.  # noqa: E501

        View On Web  # noqa: E501

        :return: The view_on_web of this ProfileItemItem.  # noqa: E501
        :rtype: bool
        """
        return self._view_on_web

    @view_on_web.setter
    def view_on_web(self, view_on_web):
        """Sets the view_on_web of this ProfileItemItem.

        View On Web  # noqa: E501

        :param view_on_web: The view_on_web of this ProfileItemItem.  # noqa: E501
        :type: bool
        """

        self._view_on_web = view_on_web

    @property
    def web_description(self):
        """Gets the web_description of this ProfileItemItem.  # noqa: E501

        Web Description  # noqa: E501

        :return: The web_description of this ProfileItemItem.  # noqa: E501
        :rtype: str
        """
        return self._web_description

    @web_description.setter
    def web_description(self, web_description):
        """Sets the web_description of this ProfileItemItem.

        Web Description  # noqa: E501

        :param web_description: The web_description of this ProfileItemItem.  # noqa: E501
        :type: str
        """
        if web_description is not None and len(web_description) > 1000:
            raise ValueError("Invalid value for `web_description`, length must be less than or equal to `1000`")  # noqa: E501

        self._web_description = web_description

    @property
    def web_order(self):
        """Gets the web_order of this ProfileItemItem.  # noqa: E501

        Web Order  # noqa: E501

        :return: The web_order of this ProfileItemItem.  # noqa: E501
        :rtype: int
        """
        return self._web_order

    @web_order.setter
    def web_order(self, web_order):
        """Sets the web_order of this ProfileItemItem.

        Web Order  # noqa: E501

        :param web_order: The web_order of this ProfileItemItem.  # noqa: E501
        :type: int
        """

        self._web_order = web_order

    @property
    def web_comments(self):
        """Gets the web_comments of this ProfileItemItem.  # noqa: E501

        Web Comments  # noqa: E501

        :return: The web_comments of this ProfileItemItem.  # noqa: E501
        :rtype: str
        """
        return self._web_comments

    @web_comments.setter
    def web_comments(self, web_comments):
        """Sets the web_comments of this ProfileItemItem.

        Web Comments  # noqa: E501

        :param web_comments: The web_comments of this ProfileItemItem.  # noqa: E501
        :type: str
        """

        self._web_comments = web_comments

    @property
    def date_modified(self):
        """Gets the date_modified of this ProfileItemItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this ProfileItemItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this ProfileItemItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this ProfileItemItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ProfileItemItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
