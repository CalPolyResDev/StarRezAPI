# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class VMMailBoxItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'vm_mail_box_id': 'int',
        'vm_mail_box_type_id': 'int',
        'entry_id': 'int',
        'extension_id': 'int',
        'enabled': 'bool',
        'pin_number': 'int',
        'auto_play': 'bool',
        'alternate_greeting': 'bool',
        'alternate_greeting_start_minute': 'str',
        'alternate_greeting_end_minute': 'str',
        'alternate_greeting_days': 'str',
        'alternate_divert_number': 'str',
        'alternate_divert_type': 'str',
        'mail_box_action': 'str',
        'divert_number': 'str',
        'divert_type': 'str',
        'message_time_stamp': 'bool',
        'message_auto_delete': 'bool',
        'vm_mail_box_name': 'str',
        'message_delivery': 'str',
        'emailaddress': 'str',
        'seconds_before_answer': 'str',
        'cli_number_override': 'str',
        'fixed_shared_greeting': 'bool',
        'date_modified': 'str'
    }

    attribute_map = {
        'vm_mail_box_id': 'VMMailBoxID',
        'vm_mail_box_type_id': 'VMMailBoxTypeID',
        'entry_id': 'EntryID',
        'extension_id': 'ExtensionID',
        'enabled': 'Enabled',
        'pin_number': 'PinNumber',
        'auto_play': 'AutoPlay',
        'alternate_greeting': 'AlternateGreeting',
        'alternate_greeting_start_minute': 'AlternateGreetingStartMinute',
        'alternate_greeting_end_minute': 'AlternateGreetingEndMinute',
        'alternate_greeting_days': 'AlternateGreetingDays',
        'alternate_divert_number': 'AlternateDivertNumber',
        'alternate_divert_type': 'AlternateDivertType',
        'mail_box_action': 'MailBoxAction',
        'divert_number': 'DivertNumber',
        'divert_type': 'DivertType',
        'message_time_stamp': 'MessageTimeStamp',
        'message_auto_delete': 'MessageAutoDelete',
        'vm_mail_box_name': 'VMMailBoxName',
        'message_delivery': 'MessageDelivery',
        'emailaddress': 'Emailaddress',
        'seconds_before_answer': 'SecondsBeforeAnswer',
        'cli_number_override': 'CLINumberOverride',
        'fixed_shared_greeting': 'FixedSharedGreeting',
        'date_modified': 'DateModified'
    }

    def __init__(self, vm_mail_box_id=None, vm_mail_box_type_id=None, entry_id=None, extension_id=None, enabled=None, pin_number=None, auto_play=None, alternate_greeting=None, alternate_greeting_start_minute=None, alternate_greeting_end_minute=None, alternate_greeting_days=None, alternate_divert_number=None, alternate_divert_type=None, mail_box_action=None, divert_number=None, divert_type=None, message_time_stamp=None, message_auto_delete=None, vm_mail_box_name=None, message_delivery=None, emailaddress=None, seconds_before_answer=None, cli_number_override=None, fixed_shared_greeting=None, date_modified=None):  # noqa: E501
        """VMMailBoxItem - a model defined in Swagger"""  # noqa: E501

        self._vm_mail_box_id = None
        self._vm_mail_box_type_id = None
        self._entry_id = None
        self._extension_id = None
        self._enabled = None
        self._pin_number = None
        self._auto_play = None
        self._alternate_greeting = None
        self._alternate_greeting_start_minute = None
        self._alternate_greeting_end_minute = None
        self._alternate_greeting_days = None
        self._alternate_divert_number = None
        self._alternate_divert_type = None
        self._mail_box_action = None
        self._divert_number = None
        self._divert_type = None
        self._message_time_stamp = None
        self._message_auto_delete = None
        self._vm_mail_box_name = None
        self._message_delivery = None
        self._emailaddress = None
        self._seconds_before_answer = None
        self._cli_number_override = None
        self._fixed_shared_greeting = None
        self._date_modified = None
        self.discriminator = None

        if vm_mail_box_id is not None:
            self.vm_mail_box_id = vm_mail_box_id
        if vm_mail_box_type_id is not None:
            self.vm_mail_box_type_id = vm_mail_box_type_id
        if entry_id is not None:
            self.entry_id = entry_id
        if extension_id is not None:
            self.extension_id = extension_id
        if enabled is not None:
            self.enabled = enabled
        if pin_number is not None:
            self.pin_number = pin_number
        if auto_play is not None:
            self.auto_play = auto_play
        if alternate_greeting is not None:
            self.alternate_greeting = alternate_greeting
        if alternate_greeting_start_minute is not None:
            self.alternate_greeting_start_minute = alternate_greeting_start_minute
        if alternate_greeting_end_minute is not None:
            self.alternate_greeting_end_minute = alternate_greeting_end_minute
        if alternate_greeting_days is not None:
            self.alternate_greeting_days = alternate_greeting_days
        if alternate_divert_number is not None:
            self.alternate_divert_number = alternate_divert_number
        if alternate_divert_type is not None:
            self.alternate_divert_type = alternate_divert_type
        if mail_box_action is not None:
            self.mail_box_action = mail_box_action
        if divert_number is not None:
            self.divert_number = divert_number
        if divert_type is not None:
            self.divert_type = divert_type
        if message_time_stamp is not None:
            self.message_time_stamp = message_time_stamp
        if message_auto_delete is not None:
            self.message_auto_delete = message_auto_delete
        if vm_mail_box_name is not None:
            self.vm_mail_box_name = vm_mail_box_name
        if message_delivery is not None:
            self.message_delivery = message_delivery
        if emailaddress is not None:
            self.emailaddress = emailaddress
        if seconds_before_answer is not None:
            self.seconds_before_answer = seconds_before_answer
        if cli_number_override is not None:
            self.cli_number_override = cli_number_override
        if fixed_shared_greeting is not None:
            self.fixed_shared_greeting = fixed_shared_greeting
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def vm_mail_box_id(self):
        """Gets the vm_mail_box_id of this VMMailBoxItem.  # noqa: E501

        VM Mail Box  # noqa: E501

        :return: The vm_mail_box_id of this VMMailBoxItem.  # noqa: E501
        :rtype: int
        """
        return self._vm_mail_box_id

    @vm_mail_box_id.setter
    def vm_mail_box_id(self, vm_mail_box_id):
        """Sets the vm_mail_box_id of this VMMailBoxItem.

        VM Mail Box  # noqa: E501

        :param vm_mail_box_id: The vm_mail_box_id of this VMMailBoxItem.  # noqa: E501
        :type: int
        """

        self._vm_mail_box_id = vm_mail_box_id

    @property
    def vm_mail_box_type_id(self):
        """Gets the vm_mail_box_type_id of this VMMailBoxItem.  # noqa: E501

        VM Mail Box Type  # noqa: E501

        :return: The vm_mail_box_type_id of this VMMailBoxItem.  # noqa: E501
        :rtype: int
        """
        return self._vm_mail_box_type_id

    @vm_mail_box_type_id.setter
    def vm_mail_box_type_id(self, vm_mail_box_type_id):
        """Sets the vm_mail_box_type_id of this VMMailBoxItem.

        VM Mail Box Type  # noqa: E501

        :param vm_mail_box_type_id: The vm_mail_box_type_id of this VMMailBoxItem.  # noqa: E501
        :type: int
        """

        self._vm_mail_box_type_id = vm_mail_box_type_id

    @property
    def entry_id(self):
        """Gets the entry_id of this VMMailBoxItem.  # noqa: E501

        Entry  # noqa: E501

        :return: The entry_id of this VMMailBoxItem.  # noqa: E501
        :rtype: int
        """
        return self._entry_id

    @entry_id.setter
    def entry_id(self, entry_id):
        """Sets the entry_id of this VMMailBoxItem.

        Entry  # noqa: E501

        :param entry_id: The entry_id of this VMMailBoxItem.  # noqa: E501
        :type: int
        """

        self._entry_id = entry_id

    @property
    def extension_id(self):
        """Gets the extension_id of this VMMailBoxItem.  # noqa: E501

        Extension  # noqa: E501

        :return: The extension_id of this VMMailBoxItem.  # noqa: E501
        :rtype: int
        """
        return self._extension_id

    @extension_id.setter
    def extension_id(self, extension_id):
        """Sets the extension_id of this VMMailBoxItem.

        Extension  # noqa: E501

        :param extension_id: The extension_id of this VMMailBoxItem.  # noqa: E501
        :type: int
        """

        self._extension_id = extension_id

    @property
    def enabled(self):
        """Gets the enabled of this VMMailBoxItem.  # noqa: E501

        Enabled  # noqa: E501

        :return: The enabled of this VMMailBoxItem.  # noqa: E501
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this VMMailBoxItem.

        Enabled  # noqa: E501

        :param enabled: The enabled of this VMMailBoxItem.  # noqa: E501
        :type: bool
        """

        self._enabled = enabled

    @property
    def pin_number(self):
        """Gets the pin_number of this VMMailBoxItem.  # noqa: E501

        Pin Number  # noqa: E501

        :return: The pin_number of this VMMailBoxItem.  # noqa: E501
        :rtype: int
        """
        return self._pin_number

    @pin_number.setter
    def pin_number(self, pin_number):
        """Sets the pin_number of this VMMailBoxItem.

        Pin Number  # noqa: E501

        :param pin_number: The pin_number of this VMMailBoxItem.  # noqa: E501
        :type: int
        """

        self._pin_number = pin_number

    @property
    def auto_play(self):
        """Gets the auto_play of this VMMailBoxItem.  # noqa: E501

        Auto Play  # noqa: E501

        :return: The auto_play of this VMMailBoxItem.  # noqa: E501
        :rtype: bool
        """
        return self._auto_play

    @auto_play.setter
    def auto_play(self, auto_play):
        """Sets the auto_play of this VMMailBoxItem.

        Auto Play  # noqa: E501

        :param auto_play: The auto_play of this VMMailBoxItem.  # noqa: E501
        :type: bool
        """

        self._auto_play = auto_play

    @property
    def alternate_greeting(self):
        """Gets the alternate_greeting of this VMMailBoxItem.  # noqa: E501

        Alternate Greeting  # noqa: E501

        :return: The alternate_greeting of this VMMailBoxItem.  # noqa: E501
        :rtype: bool
        """
        return self._alternate_greeting

    @alternate_greeting.setter
    def alternate_greeting(self, alternate_greeting):
        """Sets the alternate_greeting of this VMMailBoxItem.

        Alternate Greeting  # noqa: E501

        :param alternate_greeting: The alternate_greeting of this VMMailBoxItem.  # noqa: E501
        :type: bool
        """

        self._alternate_greeting = alternate_greeting

    @property
    def alternate_greeting_start_minute(self):
        """Gets the alternate_greeting_start_minute of this VMMailBoxItem.  # noqa: E501

        Alternate Greeting Start Minute  # noqa: E501

        :return: The alternate_greeting_start_minute of this VMMailBoxItem.  # noqa: E501
        :rtype: str
        """
        return self._alternate_greeting_start_minute

    @alternate_greeting_start_minute.setter
    def alternate_greeting_start_minute(self, alternate_greeting_start_minute):
        """Sets the alternate_greeting_start_minute of this VMMailBoxItem.

        Alternate Greeting Start Minute  # noqa: E501

        :param alternate_greeting_start_minute: The alternate_greeting_start_minute of this VMMailBoxItem.  # noqa: E501
        :type: str
        """

        self._alternate_greeting_start_minute = alternate_greeting_start_minute

    @property
    def alternate_greeting_end_minute(self):
        """Gets the alternate_greeting_end_minute of this VMMailBoxItem.  # noqa: E501

        Alternate Greeting End Minute  # noqa: E501

        :return: The alternate_greeting_end_minute of this VMMailBoxItem.  # noqa: E501
        :rtype: str
        """
        return self._alternate_greeting_end_minute

    @alternate_greeting_end_minute.setter
    def alternate_greeting_end_minute(self, alternate_greeting_end_minute):
        """Sets the alternate_greeting_end_minute of this VMMailBoxItem.

        Alternate Greeting End Minute  # noqa: E501

        :param alternate_greeting_end_minute: The alternate_greeting_end_minute of this VMMailBoxItem.  # noqa: E501
        :type: str
        """

        self._alternate_greeting_end_minute = alternate_greeting_end_minute

    @property
    def alternate_greeting_days(self):
        """Gets the alternate_greeting_days of this VMMailBoxItem.  # noqa: E501

        Alternate Greeting Days  # noqa: E501

        :return: The alternate_greeting_days of this VMMailBoxItem.  # noqa: E501
        :rtype: str
        """
        return self._alternate_greeting_days

    @alternate_greeting_days.setter
    def alternate_greeting_days(self, alternate_greeting_days):
        """Sets the alternate_greeting_days of this VMMailBoxItem.

        Alternate Greeting Days  # noqa: E501

        :param alternate_greeting_days: The alternate_greeting_days of this VMMailBoxItem.  # noqa: E501
        :type: str
        """
        if alternate_greeting_days is not None and len(alternate_greeting_days) > 15:
            raise ValueError("Invalid value for `alternate_greeting_days`, length must be less than or equal to `15`")  # noqa: E501

        self._alternate_greeting_days = alternate_greeting_days

    @property
    def alternate_divert_number(self):
        """Gets the alternate_divert_number of this VMMailBoxItem.  # noqa: E501

        Alternate Divert Number  # noqa: E501

        :return: The alternate_divert_number of this VMMailBoxItem.  # noqa: E501
        :rtype: str
        """
        return self._alternate_divert_number

    @alternate_divert_number.setter
    def alternate_divert_number(self, alternate_divert_number):
        """Sets the alternate_divert_number of this VMMailBoxItem.

        Alternate Divert Number  # noqa: E501

        :param alternate_divert_number: The alternate_divert_number of this VMMailBoxItem.  # noqa: E501
        :type: str
        """
        if alternate_divert_number is not None and len(alternate_divert_number) > 30:
            raise ValueError("Invalid value for `alternate_divert_number`, length must be less than or equal to `30`")  # noqa: E501

        self._alternate_divert_number = alternate_divert_number

    @property
    def alternate_divert_type(self):
        """Gets the alternate_divert_type of this VMMailBoxItem.  # noqa: E501

        Alternate Divert Type  # noqa: E501

        :return: The alternate_divert_type of this VMMailBoxItem.  # noqa: E501
        :rtype: str
        """
        return self._alternate_divert_type

    @alternate_divert_type.setter
    def alternate_divert_type(self, alternate_divert_type):
        """Sets the alternate_divert_type of this VMMailBoxItem.

        Alternate Divert Type  # noqa: E501

        :param alternate_divert_type: The alternate_divert_type of this VMMailBoxItem.  # noqa: E501
        :type: str
        """

        self._alternate_divert_type = alternate_divert_type

    @property
    def mail_box_action(self):
        """Gets the mail_box_action of this VMMailBoxItem.  # noqa: E501

        Mail Box Action  # noqa: E501

        :return: The mail_box_action of this VMMailBoxItem.  # noqa: E501
        :rtype: str
        """
        return self._mail_box_action

    @mail_box_action.setter
    def mail_box_action(self, mail_box_action):
        """Sets the mail_box_action of this VMMailBoxItem.

        Mail Box Action  # noqa: E501

        :param mail_box_action: The mail_box_action of this VMMailBoxItem.  # noqa: E501
        :type: str
        """

        self._mail_box_action = mail_box_action

    @property
    def divert_number(self):
        """Gets the divert_number of this VMMailBoxItem.  # noqa: E501

        Divert Number  # noqa: E501

        :return: The divert_number of this VMMailBoxItem.  # noqa: E501
        :rtype: str
        """
        return self._divert_number

    @divert_number.setter
    def divert_number(self, divert_number):
        """Sets the divert_number of this VMMailBoxItem.

        Divert Number  # noqa: E501

        :param divert_number: The divert_number of this VMMailBoxItem.  # noqa: E501
        :type: str
        """
        if divert_number is not None and len(divert_number) > 30:
            raise ValueError("Invalid value for `divert_number`, length must be less than or equal to `30`")  # noqa: E501

        self._divert_number = divert_number

    @property
    def divert_type(self):
        """Gets the divert_type of this VMMailBoxItem.  # noqa: E501

        Divert Type  # noqa: E501

        :return: The divert_type of this VMMailBoxItem.  # noqa: E501
        :rtype: str
        """
        return self._divert_type

    @divert_type.setter
    def divert_type(self, divert_type):
        """Sets the divert_type of this VMMailBoxItem.

        Divert Type  # noqa: E501

        :param divert_type: The divert_type of this VMMailBoxItem.  # noqa: E501
        :type: str
        """

        self._divert_type = divert_type

    @property
    def message_time_stamp(self):
        """Gets the message_time_stamp of this VMMailBoxItem.  # noqa: E501

        Message Time Stamp  # noqa: E501

        :return: The message_time_stamp of this VMMailBoxItem.  # noqa: E501
        :rtype: bool
        """
        return self._message_time_stamp

    @message_time_stamp.setter
    def message_time_stamp(self, message_time_stamp):
        """Sets the message_time_stamp of this VMMailBoxItem.

        Message Time Stamp  # noqa: E501

        :param message_time_stamp: The message_time_stamp of this VMMailBoxItem.  # noqa: E501
        :type: bool
        """

        self._message_time_stamp = message_time_stamp

    @property
    def message_auto_delete(self):
        """Gets the message_auto_delete of this VMMailBoxItem.  # noqa: E501

        Message Auto Delete  # noqa: E501

        :return: The message_auto_delete of this VMMailBoxItem.  # noqa: E501
        :rtype: bool
        """
        return self._message_auto_delete

    @message_auto_delete.setter
    def message_auto_delete(self, message_auto_delete):
        """Sets the message_auto_delete of this VMMailBoxItem.

        Message Auto Delete  # noqa: E501

        :param message_auto_delete: The message_auto_delete of this VMMailBoxItem.  # noqa: E501
        :type: bool
        """

        self._message_auto_delete = message_auto_delete

    @property
    def vm_mail_box_name(self):
        """Gets the vm_mail_box_name of this VMMailBoxItem.  # noqa: E501

        VM Mail Box Name  # noqa: E501

        :return: The vm_mail_box_name of this VMMailBoxItem.  # noqa: E501
        :rtype: str
        """
        return self._vm_mail_box_name

    @vm_mail_box_name.setter
    def vm_mail_box_name(self, vm_mail_box_name):
        """Sets the vm_mail_box_name of this VMMailBoxItem.

        VM Mail Box Name  # noqa: E501

        :param vm_mail_box_name: The vm_mail_box_name of this VMMailBoxItem.  # noqa: E501
        :type: str
        """
        if vm_mail_box_name is not None and len(vm_mail_box_name) > 50:
            raise ValueError("Invalid value for `vm_mail_box_name`, length must be less than or equal to `50`")  # noqa: E501

        self._vm_mail_box_name = vm_mail_box_name

    @property
    def message_delivery(self):
        """Gets the message_delivery of this VMMailBoxItem.  # noqa: E501

        Message Delivery  # noqa: E501

        :return: The message_delivery of this VMMailBoxItem.  # noqa: E501
        :rtype: str
        """
        return self._message_delivery

    @message_delivery.setter
    def message_delivery(self, message_delivery):
        """Sets the message_delivery of this VMMailBoxItem.

        Message Delivery  # noqa: E501

        :param message_delivery: The message_delivery of this VMMailBoxItem.  # noqa: E501
        :type: str
        """

        self._message_delivery = message_delivery

    @property
    def emailaddress(self):
        """Gets the emailaddress of this VMMailBoxItem.  # noqa: E501

        Emailaddress  # noqa: E501

        :return: The emailaddress of this VMMailBoxItem.  # noqa: E501
        :rtype: str
        """
        return self._emailaddress

    @emailaddress.setter
    def emailaddress(self, emailaddress):
        """Sets the emailaddress of this VMMailBoxItem.

        Emailaddress  # noqa: E501

        :param emailaddress: The emailaddress of this VMMailBoxItem.  # noqa: E501
        :type: str
        """
        if emailaddress is not None and len(emailaddress) > 100:
            raise ValueError("Invalid value for `emailaddress`, length must be less than or equal to `100`")  # noqa: E501

        self._emailaddress = emailaddress

    @property
    def seconds_before_answer(self):
        """Gets the seconds_before_answer of this VMMailBoxItem.  # noqa: E501

        Seconds Before Answer  # noqa: E501

        :return: The seconds_before_answer of this VMMailBoxItem.  # noqa: E501
        :rtype: str
        """
        return self._seconds_before_answer

    @seconds_before_answer.setter
    def seconds_before_answer(self, seconds_before_answer):
        """Sets the seconds_before_answer of this VMMailBoxItem.

        Seconds Before Answer  # noqa: E501

        :param seconds_before_answer: The seconds_before_answer of this VMMailBoxItem.  # noqa: E501
        :type: str
        """

        self._seconds_before_answer = seconds_before_answer

    @property
    def cli_number_override(self):
        """Gets the cli_number_override of this VMMailBoxItem.  # noqa: E501

        CLI Number Override  # noqa: E501

        :return: The cli_number_override of this VMMailBoxItem.  # noqa: E501
        :rtype: str
        """
        return self._cli_number_override

    @cli_number_override.setter
    def cli_number_override(self, cli_number_override):
        """Sets the cli_number_override of this VMMailBoxItem.

        CLI Number Override  # noqa: E501

        :param cli_number_override: The cli_number_override of this VMMailBoxItem.  # noqa: E501
        :type: str
        """
        if cli_number_override is not None and len(cli_number_override) > 20:
            raise ValueError("Invalid value for `cli_number_override`, length must be less than or equal to `20`")  # noqa: E501

        self._cli_number_override = cli_number_override

    @property
    def fixed_shared_greeting(self):
        """Gets the fixed_shared_greeting of this VMMailBoxItem.  # noqa: E501

        Fixed Shared Greeting  # noqa: E501

        :return: The fixed_shared_greeting of this VMMailBoxItem.  # noqa: E501
        :rtype: bool
        """
        return self._fixed_shared_greeting

    @fixed_shared_greeting.setter
    def fixed_shared_greeting(self, fixed_shared_greeting):
        """Sets the fixed_shared_greeting of this VMMailBoxItem.

        Fixed Shared Greeting  # noqa: E501

        :param fixed_shared_greeting: The fixed_shared_greeting of this VMMailBoxItem.  # noqa: E501
        :type: bool
        """

        self._fixed_shared_greeting = fixed_shared_greeting

    @property
    def date_modified(self):
        """Gets the date_modified of this VMMailBoxItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this VMMailBoxItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this VMMailBoxItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this VMMailBoxItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VMMailBoxItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
