# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class TimeSlotItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'time_slot_id': 'int',
        'record_type_enum': 'str',
        'process_id': 'int',
        'entry_id': 'int',
        'time_slot_date': 'datetime',
        'duration': 'str',
        'room_location_id': 'int',
        'room_location_floor_suite_id': 'int',
        'room_base_id': 'int',
        'location_comments': 'str',
        'assigned_to_security_user_id': 'int',
        'view_on_web': 'bool',
        'booked_room_base_id': 'int',
        'security_user_id': 'int',
        'created_by_security_user_id': 'int',
        'date_created': 'datetime',
        'date_modified': 'str'
    }

    attribute_map = {
        'time_slot_id': 'TimeSlotID',
        'record_type_enum': 'RecordTypeEnum',
        'process_id': 'ProcessID',
        'entry_id': 'EntryID',
        'time_slot_date': 'TimeSlotDate',
        'duration': 'Duration',
        'room_location_id': 'RoomLocationID',
        'room_location_floor_suite_id': 'RoomLocationFloorSuiteID',
        'room_base_id': 'RoomBaseID',
        'location_comments': 'LocationComments',
        'assigned_to_security_user_id': 'AssignedTo_SecurityUserID',
        'view_on_web': 'ViewOnWeb',
        'booked_room_base_id': 'Booked_RoomBaseID',
        'security_user_id': 'SecurityUserID',
        'created_by_security_user_id': 'CreatedBy_SecurityUserID',
        'date_created': 'DateCreated',
        'date_modified': 'DateModified'
    }

    def __init__(self, time_slot_id=None, record_type_enum=None, process_id=None, entry_id=None, time_slot_date=None, duration=None, room_location_id=None, room_location_floor_suite_id=None, room_base_id=None, location_comments=None, assigned_to_security_user_id=None, view_on_web=None, booked_room_base_id=None, security_user_id=None, created_by_security_user_id=None, date_created=None, date_modified=None):  # noqa: E501
        """TimeSlotItem - a model defined in Swagger"""  # noqa: E501

        self._time_slot_id = None
        self._record_type_enum = None
        self._process_id = None
        self._entry_id = None
        self._time_slot_date = None
        self._duration = None
        self._room_location_id = None
        self._room_location_floor_suite_id = None
        self._room_base_id = None
        self._location_comments = None
        self._assigned_to_security_user_id = None
        self._view_on_web = None
        self._booked_room_base_id = None
        self._security_user_id = None
        self._created_by_security_user_id = None
        self._date_created = None
        self._date_modified = None
        self.discriminator = None

        if time_slot_id is not None:
            self.time_slot_id = time_slot_id
        if record_type_enum is not None:
            self.record_type_enum = record_type_enum
        if process_id is not None:
            self.process_id = process_id
        if entry_id is not None:
            self.entry_id = entry_id
        if time_slot_date is not None:
            self.time_slot_date = time_slot_date
        if duration is not None:
            self.duration = duration
        if room_location_id is not None:
            self.room_location_id = room_location_id
        if room_location_floor_suite_id is not None:
            self.room_location_floor_suite_id = room_location_floor_suite_id
        if room_base_id is not None:
            self.room_base_id = room_base_id
        if location_comments is not None:
            self.location_comments = location_comments
        if assigned_to_security_user_id is not None:
            self.assigned_to_security_user_id = assigned_to_security_user_id
        if view_on_web is not None:
            self.view_on_web = view_on_web
        if booked_room_base_id is not None:
            self.booked_room_base_id = booked_room_base_id
        if security_user_id is not None:
            self.security_user_id = security_user_id
        if created_by_security_user_id is not None:
            self.created_by_security_user_id = created_by_security_user_id
        if date_created is not None:
            self.date_created = date_created
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def time_slot_id(self):
        """Gets the time_slot_id of this TimeSlotItem.  # noqa: E501

        Time Slot  # noqa: E501

        :return: The time_slot_id of this TimeSlotItem.  # noqa: E501
        :rtype: int
        """
        return self._time_slot_id

    @time_slot_id.setter
    def time_slot_id(self, time_slot_id):
        """Sets the time_slot_id of this TimeSlotItem.

        Time Slot  # noqa: E501

        :param time_slot_id: The time_slot_id of this TimeSlotItem.  # noqa: E501
        :type: int
        """

        self._time_slot_id = time_slot_id

    @property
    def record_type_enum(self):
        """Gets the record_type_enum of this TimeSlotItem.  # noqa: E501

        Record Type  # noqa: E501

        :return: The record_type_enum of this TimeSlotItem.  # noqa: E501
        :rtype: str
        """
        return self._record_type_enum

    @record_type_enum.setter
    def record_type_enum(self, record_type_enum):
        """Sets the record_type_enum of this TimeSlotItem.

        Record Type  # noqa: E501

        :param record_type_enum: The record_type_enum of this TimeSlotItem.  # noqa: E501
        :type: str
        """

        self._record_type_enum = record_type_enum

    @property
    def process_id(self):
        """Gets the process_id of this TimeSlotItem.  # noqa: E501

        Process  # noqa: E501

        :return: The process_id of this TimeSlotItem.  # noqa: E501
        :rtype: int
        """
        return self._process_id

    @process_id.setter
    def process_id(self, process_id):
        """Sets the process_id of this TimeSlotItem.

        Process  # noqa: E501

        :param process_id: The process_id of this TimeSlotItem.  # noqa: E501
        :type: int
        """

        self._process_id = process_id

    @property
    def entry_id(self):
        """Gets the entry_id of this TimeSlotItem.  # noqa: E501

        Entry  # noqa: E501

        :return: The entry_id of this TimeSlotItem.  # noqa: E501
        :rtype: int
        """
        return self._entry_id

    @entry_id.setter
    def entry_id(self, entry_id):
        """Sets the entry_id of this TimeSlotItem.

        Entry  # noqa: E501

        :param entry_id: The entry_id of this TimeSlotItem.  # noqa: E501
        :type: int
        """

        self._entry_id = entry_id

    @property
    def time_slot_date(self):
        """Gets the time_slot_date of this TimeSlotItem.  # noqa: E501

        Time Slot Date  # noqa: E501

        :return: The time_slot_date of this TimeSlotItem.  # noqa: E501
        :rtype: datetime
        """
        return self._time_slot_date

    @time_slot_date.setter
    def time_slot_date(self, time_slot_date):
        """Sets the time_slot_date of this TimeSlotItem.

        Time Slot Date  # noqa: E501

        :param time_slot_date: The time_slot_date of this TimeSlotItem.  # noqa: E501
        :type: datetime
        """

        self._time_slot_date = time_slot_date

    @property
    def duration(self):
        """Gets the duration of this TimeSlotItem.  # noqa: E501

        Duration  # noqa: E501

        :return: The duration of this TimeSlotItem.  # noqa: E501
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this TimeSlotItem.

        Duration  # noqa: E501

        :param duration: The duration of this TimeSlotItem.  # noqa: E501
        :type: str
        """

        self._duration = duration

    @property
    def room_location_id(self):
        """Gets the room_location_id of this TimeSlotItem.  # noqa: E501

        Room Location  # noqa: E501

        :return: The room_location_id of this TimeSlotItem.  # noqa: E501
        :rtype: int
        """
        return self._room_location_id

    @room_location_id.setter
    def room_location_id(self, room_location_id):
        """Sets the room_location_id of this TimeSlotItem.

        Room Location  # noqa: E501

        :param room_location_id: The room_location_id of this TimeSlotItem.  # noqa: E501
        :type: int
        """

        self._room_location_id = room_location_id

    @property
    def room_location_floor_suite_id(self):
        """Gets the room_location_floor_suite_id of this TimeSlotItem.  # noqa: E501

        Room Location Floor Suite  # noqa: E501

        :return: The room_location_floor_suite_id of this TimeSlotItem.  # noqa: E501
        :rtype: int
        """
        return self._room_location_floor_suite_id

    @room_location_floor_suite_id.setter
    def room_location_floor_suite_id(self, room_location_floor_suite_id):
        """Sets the room_location_floor_suite_id of this TimeSlotItem.

        Room Location Floor Suite  # noqa: E501

        :param room_location_floor_suite_id: The room_location_floor_suite_id of this TimeSlotItem.  # noqa: E501
        :type: int
        """

        self._room_location_floor_suite_id = room_location_floor_suite_id

    @property
    def room_base_id(self):
        """Gets the room_base_id of this TimeSlotItem.  # noqa: E501

        Room Base  # noqa: E501

        :return: The room_base_id of this TimeSlotItem.  # noqa: E501
        :rtype: int
        """
        return self._room_base_id

    @room_base_id.setter
    def room_base_id(self, room_base_id):
        """Sets the room_base_id of this TimeSlotItem.

        Room Base  # noqa: E501

        :param room_base_id: The room_base_id of this TimeSlotItem.  # noqa: E501
        :type: int
        """

        self._room_base_id = room_base_id

    @property
    def location_comments(self):
        """Gets the location_comments of this TimeSlotItem.  # noqa: E501

        Location Comments  # noqa: E501

        :return: The location_comments of this TimeSlotItem.  # noqa: E501
        :rtype: str
        """
        return self._location_comments

    @location_comments.setter
    def location_comments(self, location_comments):
        """Sets the location_comments of this TimeSlotItem.

        Location Comments  # noqa: E501

        :param location_comments: The location_comments of this TimeSlotItem.  # noqa: E501
        :type: str
        """
        if location_comments is not None and len(location_comments) > 100:
            raise ValueError("Invalid value for `location_comments`, length must be less than or equal to `100`")  # noqa: E501

        self._location_comments = location_comments

    @property
    def assigned_to_security_user_id(self):
        """Gets the assigned_to_security_user_id of this TimeSlotItem.  # noqa: E501

        Assigned To Security User  # noqa: E501

        :return: The assigned_to_security_user_id of this TimeSlotItem.  # noqa: E501
        :rtype: int
        """
        return self._assigned_to_security_user_id

    @assigned_to_security_user_id.setter
    def assigned_to_security_user_id(self, assigned_to_security_user_id):
        """Sets the assigned_to_security_user_id of this TimeSlotItem.

        Assigned To Security User  # noqa: E501

        :param assigned_to_security_user_id: The assigned_to_security_user_id of this TimeSlotItem.  # noqa: E501
        :type: int
        """

        self._assigned_to_security_user_id = assigned_to_security_user_id

    @property
    def view_on_web(self):
        """Gets the view_on_web of this TimeSlotItem.  # noqa: E501

        View On Web  # noqa: E501

        :return: The view_on_web of this TimeSlotItem.  # noqa: E501
        :rtype: bool
        """
        return self._view_on_web

    @view_on_web.setter
    def view_on_web(self, view_on_web):
        """Sets the view_on_web of this TimeSlotItem.

        View On Web  # noqa: E501

        :param view_on_web: The view_on_web of this TimeSlotItem.  # noqa: E501
        :type: bool
        """

        self._view_on_web = view_on_web

    @property
    def booked_room_base_id(self):
        """Gets the booked_room_base_id of this TimeSlotItem.  # noqa: E501

        Booked Room Base  # noqa: E501

        :return: The booked_room_base_id of this TimeSlotItem.  # noqa: E501
        :rtype: int
        """
        return self._booked_room_base_id

    @booked_room_base_id.setter
    def booked_room_base_id(self, booked_room_base_id):
        """Sets the booked_room_base_id of this TimeSlotItem.

        Booked Room Base  # noqa: E501

        :param booked_room_base_id: The booked_room_base_id of this TimeSlotItem.  # noqa: E501
        :type: int
        """

        self._booked_room_base_id = booked_room_base_id

    @property
    def security_user_id(self):
        """Gets the security_user_id of this TimeSlotItem.  # noqa: E501

        Security User  # noqa: E501

        :return: The security_user_id of this TimeSlotItem.  # noqa: E501
        :rtype: int
        """
        return self._security_user_id

    @security_user_id.setter
    def security_user_id(self, security_user_id):
        """Sets the security_user_id of this TimeSlotItem.

        Security User  # noqa: E501

        :param security_user_id: The security_user_id of this TimeSlotItem.  # noqa: E501
        :type: int
        """

        self._security_user_id = security_user_id

    @property
    def created_by_security_user_id(self):
        """Gets the created_by_security_user_id of this TimeSlotItem.  # noqa: E501

        Created By Security User  # noqa: E501

        :return: The created_by_security_user_id of this TimeSlotItem.  # noqa: E501
        :rtype: int
        """
        return self._created_by_security_user_id

    @created_by_security_user_id.setter
    def created_by_security_user_id(self, created_by_security_user_id):
        """Sets the created_by_security_user_id of this TimeSlotItem.

        Created By Security User  # noqa: E501

        :param created_by_security_user_id: The created_by_security_user_id of this TimeSlotItem.  # noqa: E501
        :type: int
        """

        self._created_by_security_user_id = created_by_security_user_id

    @property
    def date_created(self):
        """Gets the date_created of this TimeSlotItem.  # noqa: E501

        Date Created  # noqa: E501

        :return: The date_created of this TimeSlotItem.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this TimeSlotItem.

        Date Created  # noqa: E501

        :param date_created: The date_created of this TimeSlotItem.  # noqa: E501
        :type: datetime
        """

        self._date_created = date_created

    @property
    def date_modified(self):
        """Gets the date_modified of this TimeSlotItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this TimeSlotItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this TimeSlotItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this TimeSlotItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TimeSlotItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
