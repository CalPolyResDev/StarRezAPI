# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class MealPlanDetailItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'meal_plan_detail_id': 'int',
        'meal_plan_id': 'int',
        'day_in_week_enum': 'str',
        'meal_plan_date': 'datetime',
        'breakfast': 'str',
        'lunch': 'str',
        'dinner': 'str',
        'other': 'str',
        'breakfast_meal_plan_dining_hall_id': 'int',
        'lunch_meal_plan_dining_hall_id': 'int',
        'dinner_meal_plan_dining_hall_id': 'int',
        'date_modified': 'str'
    }

    attribute_map = {
        'meal_plan_detail_id': 'MealPlanDetailID',
        'meal_plan_id': 'MealPlanID',
        'day_in_week_enum': 'DayInWeekEnum',
        'meal_plan_date': 'MealPlanDate',
        'breakfast': 'Breakfast',
        'lunch': 'Lunch',
        'dinner': 'Dinner',
        'other': 'Other',
        'breakfast_meal_plan_dining_hall_id': 'Breakfast_MealPlanDiningHallID',
        'lunch_meal_plan_dining_hall_id': 'Lunch_MealPlanDiningHallID',
        'dinner_meal_plan_dining_hall_id': 'Dinner_MealPlanDiningHallID',
        'date_modified': 'DateModified'
    }

    def __init__(self, meal_plan_detail_id=None, meal_plan_id=None, day_in_week_enum=None, meal_plan_date=None, breakfast=None, lunch=None, dinner=None, other=None, breakfast_meal_plan_dining_hall_id=None, lunch_meal_plan_dining_hall_id=None, dinner_meal_plan_dining_hall_id=None, date_modified=None):  # noqa: E501
        """MealPlanDetailItem - a model defined in Swagger"""  # noqa: E501

        self._meal_plan_detail_id = None
        self._meal_plan_id = None
        self._day_in_week_enum = None
        self._meal_plan_date = None
        self._breakfast = None
        self._lunch = None
        self._dinner = None
        self._other = None
        self._breakfast_meal_plan_dining_hall_id = None
        self._lunch_meal_plan_dining_hall_id = None
        self._dinner_meal_plan_dining_hall_id = None
        self._date_modified = None
        self.discriminator = None

        if meal_plan_detail_id is not None:
            self.meal_plan_detail_id = meal_plan_detail_id
        if meal_plan_id is not None:
            self.meal_plan_id = meal_plan_id
        if day_in_week_enum is not None:
            self.day_in_week_enum = day_in_week_enum
        if meal_plan_date is not None:
            self.meal_plan_date = meal_plan_date
        if breakfast is not None:
            self.breakfast = breakfast
        if lunch is not None:
            self.lunch = lunch
        if dinner is not None:
            self.dinner = dinner
        if other is not None:
            self.other = other
        if breakfast_meal_plan_dining_hall_id is not None:
            self.breakfast_meal_plan_dining_hall_id = breakfast_meal_plan_dining_hall_id
        if lunch_meal_plan_dining_hall_id is not None:
            self.lunch_meal_plan_dining_hall_id = lunch_meal_plan_dining_hall_id
        if dinner_meal_plan_dining_hall_id is not None:
            self.dinner_meal_plan_dining_hall_id = dinner_meal_plan_dining_hall_id
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def meal_plan_detail_id(self):
        """Gets the meal_plan_detail_id of this MealPlanDetailItem.  # noqa: E501

        Meal Plan Detail  # noqa: E501

        :return: The meal_plan_detail_id of this MealPlanDetailItem.  # noqa: E501
        :rtype: int
        """
        return self._meal_plan_detail_id

    @meal_plan_detail_id.setter
    def meal_plan_detail_id(self, meal_plan_detail_id):
        """Sets the meal_plan_detail_id of this MealPlanDetailItem.

        Meal Plan Detail  # noqa: E501

        :param meal_plan_detail_id: The meal_plan_detail_id of this MealPlanDetailItem.  # noqa: E501
        :type: int
        """

        self._meal_plan_detail_id = meal_plan_detail_id

    @property
    def meal_plan_id(self):
        """Gets the meal_plan_id of this MealPlanDetailItem.  # noqa: E501

        Meal Plan  # noqa: E501

        :return: The meal_plan_id of this MealPlanDetailItem.  # noqa: E501
        :rtype: int
        """
        return self._meal_plan_id

    @meal_plan_id.setter
    def meal_plan_id(self, meal_plan_id):
        """Sets the meal_plan_id of this MealPlanDetailItem.

        Meal Plan  # noqa: E501

        :param meal_plan_id: The meal_plan_id of this MealPlanDetailItem.  # noqa: E501
        :type: int
        """

        self._meal_plan_id = meal_plan_id

    @property
    def day_in_week_enum(self):
        """Gets the day_in_week_enum of this MealPlanDetailItem.  # noqa: E501

        Day In Week  # noqa: E501

        :return: The day_in_week_enum of this MealPlanDetailItem.  # noqa: E501
        :rtype: str
        """
        return self._day_in_week_enum

    @day_in_week_enum.setter
    def day_in_week_enum(self, day_in_week_enum):
        """Sets the day_in_week_enum of this MealPlanDetailItem.

        Day In Week  # noqa: E501

        :param day_in_week_enum: The day_in_week_enum of this MealPlanDetailItem.  # noqa: E501
        :type: str
        """

        self._day_in_week_enum = day_in_week_enum

    @property
    def meal_plan_date(self):
        """Gets the meal_plan_date of this MealPlanDetailItem.  # noqa: E501

        Meal Plan Date  # noqa: E501

        :return: The meal_plan_date of this MealPlanDetailItem.  # noqa: E501
        :rtype: datetime
        """
        return self._meal_plan_date

    @meal_plan_date.setter
    def meal_plan_date(self, meal_plan_date):
        """Sets the meal_plan_date of this MealPlanDetailItem.

        Meal Plan Date  # noqa: E501

        :param meal_plan_date: The meal_plan_date of this MealPlanDetailItem.  # noqa: E501
        :type: datetime
        """

        self._meal_plan_date = meal_plan_date

    @property
    def breakfast(self):
        """Gets the breakfast of this MealPlanDetailItem.  # noqa: E501

        Breakfast  # noqa: E501

        :return: The breakfast of this MealPlanDetailItem.  # noqa: E501
        :rtype: str
        """
        return self._breakfast

    @breakfast.setter
    def breakfast(self, breakfast):
        """Sets the breakfast of this MealPlanDetailItem.

        Breakfast  # noqa: E501

        :param breakfast: The breakfast of this MealPlanDetailItem.  # noqa: E501
        :type: str
        """

        self._breakfast = breakfast

    @property
    def lunch(self):
        """Gets the lunch of this MealPlanDetailItem.  # noqa: E501

        Lunch  # noqa: E501

        :return: The lunch of this MealPlanDetailItem.  # noqa: E501
        :rtype: str
        """
        return self._lunch

    @lunch.setter
    def lunch(self, lunch):
        """Sets the lunch of this MealPlanDetailItem.

        Lunch  # noqa: E501

        :param lunch: The lunch of this MealPlanDetailItem.  # noqa: E501
        :type: str
        """

        self._lunch = lunch

    @property
    def dinner(self):
        """Gets the dinner of this MealPlanDetailItem.  # noqa: E501

        Dinner  # noqa: E501

        :return: The dinner of this MealPlanDetailItem.  # noqa: E501
        :rtype: str
        """
        return self._dinner

    @dinner.setter
    def dinner(self, dinner):
        """Sets the dinner of this MealPlanDetailItem.

        Dinner  # noqa: E501

        :param dinner: The dinner of this MealPlanDetailItem.  # noqa: E501
        :type: str
        """

        self._dinner = dinner

    @property
    def other(self):
        """Gets the other of this MealPlanDetailItem.  # noqa: E501

        Other  # noqa: E501

        :return: The other of this MealPlanDetailItem.  # noqa: E501
        :rtype: str
        """
        return self._other

    @other.setter
    def other(self, other):
        """Sets the other of this MealPlanDetailItem.

        Other  # noqa: E501

        :param other: The other of this MealPlanDetailItem.  # noqa: E501
        :type: str
        """

        self._other = other

    @property
    def breakfast_meal_plan_dining_hall_id(self):
        """Gets the breakfast_meal_plan_dining_hall_id of this MealPlanDetailItem.  # noqa: E501

        Breakfast Meal Plan Dining Hall  # noqa: E501

        :return: The breakfast_meal_plan_dining_hall_id of this MealPlanDetailItem.  # noqa: E501
        :rtype: int
        """
        return self._breakfast_meal_plan_dining_hall_id

    @breakfast_meal_plan_dining_hall_id.setter
    def breakfast_meal_plan_dining_hall_id(self, breakfast_meal_plan_dining_hall_id):
        """Sets the breakfast_meal_plan_dining_hall_id of this MealPlanDetailItem.

        Breakfast Meal Plan Dining Hall  # noqa: E501

        :param breakfast_meal_plan_dining_hall_id: The breakfast_meal_plan_dining_hall_id of this MealPlanDetailItem.  # noqa: E501
        :type: int
        """

        self._breakfast_meal_plan_dining_hall_id = breakfast_meal_plan_dining_hall_id

    @property
    def lunch_meal_plan_dining_hall_id(self):
        """Gets the lunch_meal_plan_dining_hall_id of this MealPlanDetailItem.  # noqa: E501

        Lunch Meal Plan Dining Hall  # noqa: E501

        :return: The lunch_meal_plan_dining_hall_id of this MealPlanDetailItem.  # noqa: E501
        :rtype: int
        """
        return self._lunch_meal_plan_dining_hall_id

    @lunch_meal_plan_dining_hall_id.setter
    def lunch_meal_plan_dining_hall_id(self, lunch_meal_plan_dining_hall_id):
        """Sets the lunch_meal_plan_dining_hall_id of this MealPlanDetailItem.

        Lunch Meal Plan Dining Hall  # noqa: E501

        :param lunch_meal_plan_dining_hall_id: The lunch_meal_plan_dining_hall_id of this MealPlanDetailItem.  # noqa: E501
        :type: int
        """

        self._lunch_meal_plan_dining_hall_id = lunch_meal_plan_dining_hall_id

    @property
    def dinner_meal_plan_dining_hall_id(self):
        """Gets the dinner_meal_plan_dining_hall_id of this MealPlanDetailItem.  # noqa: E501

        Dinner Meal Plan Dining Hall  # noqa: E501

        :return: The dinner_meal_plan_dining_hall_id of this MealPlanDetailItem.  # noqa: E501
        :rtype: int
        """
        return self._dinner_meal_plan_dining_hall_id

    @dinner_meal_plan_dining_hall_id.setter
    def dinner_meal_plan_dining_hall_id(self, dinner_meal_plan_dining_hall_id):
        """Sets the dinner_meal_plan_dining_hall_id of this MealPlanDetailItem.

        Dinner Meal Plan Dining Hall  # noqa: E501

        :param dinner_meal_plan_dining_hall_id: The dinner_meal_plan_dining_hall_id of this MealPlanDetailItem.  # noqa: E501
        :type: int
        """

        self._dinner_meal_plan_dining_hall_id = dinner_meal_plan_dining_hall_id

    @property
    def date_modified(self):
        """Gets the date_modified of this MealPlanDetailItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this MealPlanDetailItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this MealPlanDetailItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this MealPlanDetailItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MealPlanDetailItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
