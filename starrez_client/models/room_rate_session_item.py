# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class RoomRateSessionItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'room_rate_session_id': 'int',
        'room_rate_id': 'int',
        'description': 'str',
        'term_session_id': 'int',
        'session_order': 'int',
        'date_start': 'str',
        'room_rate_duration_enum': 'str',
        'room_rate_duration_number': 'str',
        'room_rate_duration_nights': 'str',
        'minimum_nights': 'str',
        'maximum_nights': 'str',
        'rollover_duration_enum': 'str',
        'rollover_duration_number': 'str',
        'percentage_charges': 'bool',
        'transaction_date_due': 'str',
        'comments': 'str',
        'day_in_week_enum': 'str',
        'date_modified': 'str'
    }

    attribute_map = {
        'room_rate_session_id': 'RoomRateSessionID',
        'room_rate_id': 'RoomRateID',
        'description': 'Description',
        'term_session_id': 'TermSessionID',
        'session_order': 'SessionOrder',
        'date_start': 'DateStart',
        'room_rate_duration_enum': 'RoomRateDurationEnum',
        'room_rate_duration_number': 'RoomRateDurationNumber',
        'room_rate_duration_nights': 'RoomRateDurationNights',
        'minimum_nights': 'MinimumNights',
        'maximum_nights': 'MaximumNights',
        'rollover_duration_enum': 'RolloverDurationEnum',
        'rollover_duration_number': 'RolloverDurationNumber',
        'percentage_charges': 'PercentageCharges',
        'transaction_date_due': 'TransactionDateDue',
        'comments': 'Comments',
        'day_in_week_enum': 'DayInWeekEnum',
        'date_modified': 'DateModified'
    }

    def __init__(self, room_rate_session_id=None, room_rate_id=None, description=None, term_session_id=None, session_order=None, date_start=None, room_rate_duration_enum=None, room_rate_duration_number=None, room_rate_duration_nights=None, minimum_nights=None, maximum_nights=None, rollover_duration_enum=None, rollover_duration_number=None, percentage_charges=None, transaction_date_due=None, comments=None, day_in_week_enum=None, date_modified=None):  # noqa: E501
        """RoomRateSessionItem - a model defined in Swagger"""  # noqa: E501

        self._room_rate_session_id = None
        self._room_rate_id = None
        self._description = None
        self._term_session_id = None
        self._session_order = None
        self._date_start = None
        self._room_rate_duration_enum = None
        self._room_rate_duration_number = None
        self._room_rate_duration_nights = None
        self._minimum_nights = None
        self._maximum_nights = None
        self._rollover_duration_enum = None
        self._rollover_duration_number = None
        self._percentage_charges = None
        self._transaction_date_due = None
        self._comments = None
        self._day_in_week_enum = None
        self._date_modified = None
        self.discriminator = None

        if room_rate_session_id is not None:
            self.room_rate_session_id = room_rate_session_id
        if room_rate_id is not None:
            self.room_rate_id = room_rate_id
        if description is not None:
            self.description = description
        if term_session_id is not None:
            self.term_session_id = term_session_id
        if session_order is not None:
            self.session_order = session_order
        if date_start is not None:
            self.date_start = date_start
        if room_rate_duration_enum is not None:
            self.room_rate_duration_enum = room_rate_duration_enum
        if room_rate_duration_number is not None:
            self.room_rate_duration_number = room_rate_duration_number
        if room_rate_duration_nights is not None:
            self.room_rate_duration_nights = room_rate_duration_nights
        if minimum_nights is not None:
            self.minimum_nights = minimum_nights
        if maximum_nights is not None:
            self.maximum_nights = maximum_nights
        if rollover_duration_enum is not None:
            self.rollover_duration_enum = rollover_duration_enum
        if rollover_duration_number is not None:
            self.rollover_duration_number = rollover_duration_number
        if percentage_charges is not None:
            self.percentage_charges = percentage_charges
        if transaction_date_due is not None:
            self.transaction_date_due = transaction_date_due
        if comments is not None:
            self.comments = comments
        if day_in_week_enum is not None:
            self.day_in_week_enum = day_in_week_enum
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def room_rate_session_id(self):
        """Gets the room_rate_session_id of this RoomRateSessionItem.  # noqa: E501

        Room Rate Session  # noqa: E501

        :return: The room_rate_session_id of this RoomRateSessionItem.  # noqa: E501
        :rtype: int
        """
        return self._room_rate_session_id

    @room_rate_session_id.setter
    def room_rate_session_id(self, room_rate_session_id):
        """Sets the room_rate_session_id of this RoomRateSessionItem.

        Room Rate Session  # noqa: E501

        :param room_rate_session_id: The room_rate_session_id of this RoomRateSessionItem.  # noqa: E501
        :type: int
        """

        self._room_rate_session_id = room_rate_session_id

    @property
    def room_rate_id(self):
        """Gets the room_rate_id of this RoomRateSessionItem.  # noqa: E501

        Room Rate  # noqa: E501

        :return: The room_rate_id of this RoomRateSessionItem.  # noqa: E501
        :rtype: int
        """
        return self._room_rate_id

    @room_rate_id.setter
    def room_rate_id(self, room_rate_id):
        """Sets the room_rate_id of this RoomRateSessionItem.

        Room Rate  # noqa: E501

        :param room_rate_id: The room_rate_id of this RoomRateSessionItem.  # noqa: E501
        :type: int
        """

        self._room_rate_id = room_rate_id

    @property
    def description(self):
        """Gets the description of this RoomRateSessionItem.  # noqa: E501

        Description  # noqa: E501

        :return: The description of this RoomRateSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RoomRateSessionItem.

        Description  # noqa: E501

        :param description: The description of this RoomRateSessionItem.  # noqa: E501
        :type: str
        """
        if description is not None and len(description) > 30:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `30`")  # noqa: E501

        self._description = description

    @property
    def term_session_id(self):
        """Gets the term_session_id of this RoomRateSessionItem.  # noqa: E501

        Term Session  # noqa: E501

        :return: The term_session_id of this RoomRateSessionItem.  # noqa: E501
        :rtype: int
        """
        return self._term_session_id

    @term_session_id.setter
    def term_session_id(self, term_session_id):
        """Sets the term_session_id of this RoomRateSessionItem.

        Term Session  # noqa: E501

        :param term_session_id: The term_session_id of this RoomRateSessionItem.  # noqa: E501
        :type: int
        """

        self._term_session_id = term_session_id

    @property
    def session_order(self):
        """Gets the session_order of this RoomRateSessionItem.  # noqa: E501

        Session Order  # noqa: E501

        :return: The session_order of this RoomRateSessionItem.  # noqa: E501
        :rtype: int
        """
        return self._session_order

    @session_order.setter
    def session_order(self, session_order):
        """Sets the session_order of this RoomRateSessionItem.

        Session Order  # noqa: E501

        :param session_order: The session_order of this RoomRateSessionItem.  # noqa: E501
        :type: int
        """

        self._session_order = session_order

    @property
    def date_start(self):
        """Gets the date_start of this RoomRateSessionItem.  # noqa: E501

        Date Start  # noqa: E501

        :return: The date_start of this RoomRateSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._date_start

    @date_start.setter
    def date_start(self, date_start):
        """Sets the date_start of this RoomRateSessionItem.

        Date Start  # noqa: E501

        :param date_start: The date_start of this RoomRateSessionItem.  # noqa: E501
        :type: str
        """

        self._date_start = date_start

    @property
    def room_rate_duration_enum(self):
        """Gets the room_rate_duration_enum of this RoomRateSessionItem.  # noqa: E501

        Room Rate Duration  # noqa: E501

        :return: The room_rate_duration_enum of this RoomRateSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._room_rate_duration_enum

    @room_rate_duration_enum.setter
    def room_rate_duration_enum(self, room_rate_duration_enum):
        """Sets the room_rate_duration_enum of this RoomRateSessionItem.

        Room Rate Duration  # noqa: E501

        :param room_rate_duration_enum: The room_rate_duration_enum of this RoomRateSessionItem.  # noqa: E501
        :type: str
        """

        self._room_rate_duration_enum = room_rate_duration_enum

    @property
    def room_rate_duration_number(self):
        """Gets the room_rate_duration_number of this RoomRateSessionItem.  # noqa: E501

        Room Rate Duration Number  # noqa: E501

        :return: The room_rate_duration_number of this RoomRateSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._room_rate_duration_number

    @room_rate_duration_number.setter
    def room_rate_duration_number(self, room_rate_duration_number):
        """Sets the room_rate_duration_number of this RoomRateSessionItem.

        Room Rate Duration Number  # noqa: E501

        :param room_rate_duration_number: The room_rate_duration_number of this RoomRateSessionItem.  # noqa: E501
        :type: str
        """

        self._room_rate_duration_number = room_rate_duration_number

    @property
    def room_rate_duration_nights(self):
        """Gets the room_rate_duration_nights of this RoomRateSessionItem.  # noqa: E501

        Room Rate Duration Nights  # noqa: E501

        :return: The room_rate_duration_nights of this RoomRateSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._room_rate_duration_nights

    @room_rate_duration_nights.setter
    def room_rate_duration_nights(self, room_rate_duration_nights):
        """Sets the room_rate_duration_nights of this RoomRateSessionItem.

        Room Rate Duration Nights  # noqa: E501

        :param room_rate_duration_nights: The room_rate_duration_nights of this RoomRateSessionItem.  # noqa: E501
        :type: str
        """

        self._room_rate_duration_nights = room_rate_duration_nights

    @property
    def minimum_nights(self):
        """Gets the minimum_nights of this RoomRateSessionItem.  # noqa: E501

        Minimum Nights  # noqa: E501

        :return: The minimum_nights of this RoomRateSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._minimum_nights

    @minimum_nights.setter
    def minimum_nights(self, minimum_nights):
        """Sets the minimum_nights of this RoomRateSessionItem.

        Minimum Nights  # noqa: E501

        :param minimum_nights: The minimum_nights of this RoomRateSessionItem.  # noqa: E501
        :type: str
        """

        self._minimum_nights = minimum_nights

    @property
    def maximum_nights(self):
        """Gets the maximum_nights of this RoomRateSessionItem.  # noqa: E501

        Maximum Nights  # noqa: E501

        :return: The maximum_nights of this RoomRateSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._maximum_nights

    @maximum_nights.setter
    def maximum_nights(self, maximum_nights):
        """Sets the maximum_nights of this RoomRateSessionItem.

        Maximum Nights  # noqa: E501

        :param maximum_nights: The maximum_nights of this RoomRateSessionItem.  # noqa: E501
        :type: str
        """

        self._maximum_nights = maximum_nights

    @property
    def rollover_duration_enum(self):
        """Gets the rollover_duration_enum of this RoomRateSessionItem.  # noqa: E501

        Rollover Duration  # noqa: E501

        :return: The rollover_duration_enum of this RoomRateSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._rollover_duration_enum

    @rollover_duration_enum.setter
    def rollover_duration_enum(self, rollover_duration_enum):
        """Sets the rollover_duration_enum of this RoomRateSessionItem.

        Rollover Duration  # noqa: E501

        :param rollover_duration_enum: The rollover_duration_enum of this RoomRateSessionItem.  # noqa: E501
        :type: str
        """

        self._rollover_duration_enum = rollover_duration_enum

    @property
    def rollover_duration_number(self):
        """Gets the rollover_duration_number of this RoomRateSessionItem.  # noqa: E501

        Rollover Duration Number  # noqa: E501

        :return: The rollover_duration_number of this RoomRateSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._rollover_duration_number

    @rollover_duration_number.setter
    def rollover_duration_number(self, rollover_duration_number):
        """Sets the rollover_duration_number of this RoomRateSessionItem.

        Rollover Duration Number  # noqa: E501

        :param rollover_duration_number: The rollover_duration_number of this RoomRateSessionItem.  # noqa: E501
        :type: str
        """

        self._rollover_duration_number = rollover_duration_number

    @property
    def percentage_charges(self):
        """Gets the percentage_charges of this RoomRateSessionItem.  # noqa: E501

        Percentage Charges  # noqa: E501

        :return: The percentage_charges of this RoomRateSessionItem.  # noqa: E501
        :rtype: bool
        """
        return self._percentage_charges

    @percentage_charges.setter
    def percentage_charges(self, percentage_charges):
        """Sets the percentage_charges of this RoomRateSessionItem.

        Percentage Charges  # noqa: E501

        :param percentage_charges: The percentage_charges of this RoomRateSessionItem.  # noqa: E501
        :type: bool
        """

        self._percentage_charges = percentage_charges

    @property
    def transaction_date_due(self):
        """Gets the transaction_date_due of this RoomRateSessionItem.  # noqa: E501

        Transaction Date Due  # noqa: E501

        :return: The transaction_date_due of this RoomRateSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._transaction_date_due

    @transaction_date_due.setter
    def transaction_date_due(self, transaction_date_due):
        """Sets the transaction_date_due of this RoomRateSessionItem.

        Transaction Date Due  # noqa: E501

        :param transaction_date_due: The transaction_date_due of this RoomRateSessionItem.  # noqa: E501
        :type: str
        """

        self._transaction_date_due = transaction_date_due

    @property
    def comments(self):
        """Gets the comments of this RoomRateSessionItem.  # noqa: E501

        Comments  # noqa: E501

        :return: The comments of this RoomRateSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this RoomRateSessionItem.

        Comments  # noqa: E501

        :param comments: The comments of this RoomRateSessionItem.  # noqa: E501
        :type: str
        """
        if comments is not None and len(comments) > 100:
            raise ValueError("Invalid value for `comments`, length must be less than or equal to `100`")  # noqa: E501

        self._comments = comments

    @property
    def day_in_week_enum(self):
        """Gets the day_in_week_enum of this RoomRateSessionItem.  # noqa: E501

        Day In Week  # noqa: E501

        :return: The day_in_week_enum of this RoomRateSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._day_in_week_enum

    @day_in_week_enum.setter
    def day_in_week_enum(self, day_in_week_enum):
        """Sets the day_in_week_enum of this RoomRateSessionItem.

        Day In Week  # noqa: E501

        :param day_in_week_enum: The day_in_week_enum of this RoomRateSessionItem.  # noqa: E501
        :type: str
        """

        self._day_in_week_enum = day_in_week_enum

    @property
    def date_modified(self):
        """Gets the date_modified of this RoomRateSessionItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this RoomRateSessionItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this RoomRateSessionItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this RoomRateSessionItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RoomRateSessionItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
