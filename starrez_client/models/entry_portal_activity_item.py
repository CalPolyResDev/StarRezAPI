# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class EntryPortalActivityItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'entry_portal_activity_id': 'int',
        'entry_id': 'int',
        'security_user_id': 'int',
        'portal_page_id': 'int',
        'first_visit_date': 'datetime',
        'last_visit_date': 'datetime',
        'complete_date': 'str',
        'table_name': 'str',
        'table_id': 'int',
        'date_modified': 'str'
    }

    attribute_map = {
        'entry_portal_activity_id': 'EntryPortalActivityID',
        'entry_id': 'EntryID',
        'security_user_id': 'SecurityUserID',
        'portal_page_id': 'PortalPageID',
        'first_visit_date': 'FirstVisitDate',
        'last_visit_date': 'LastVisitDate',
        'complete_date': 'CompleteDate',
        'table_name': 'TableName',
        'table_id': 'TableID',
        'date_modified': 'DateModified'
    }

    def __init__(self, entry_portal_activity_id=None, entry_id=None, security_user_id=None, portal_page_id=None, first_visit_date=None, last_visit_date=None, complete_date=None, table_name=None, table_id=None, date_modified=None):  # noqa: E501
        """EntryPortalActivityItem - a model defined in Swagger"""  # noqa: E501

        self._entry_portal_activity_id = None
        self._entry_id = None
        self._security_user_id = None
        self._portal_page_id = None
        self._first_visit_date = None
        self._last_visit_date = None
        self._complete_date = None
        self._table_name = None
        self._table_id = None
        self._date_modified = None
        self.discriminator = None

        if entry_portal_activity_id is not None:
            self.entry_portal_activity_id = entry_portal_activity_id
        if entry_id is not None:
            self.entry_id = entry_id
        if security_user_id is not None:
            self.security_user_id = security_user_id
        if portal_page_id is not None:
            self.portal_page_id = portal_page_id
        if first_visit_date is not None:
            self.first_visit_date = first_visit_date
        if last_visit_date is not None:
            self.last_visit_date = last_visit_date
        if complete_date is not None:
            self.complete_date = complete_date
        if table_name is not None:
            self.table_name = table_name
        if table_id is not None:
            self.table_id = table_id
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def entry_portal_activity_id(self):
        """Gets the entry_portal_activity_id of this EntryPortalActivityItem.  # noqa: E501

        Entry Portal Activity  # noqa: E501

        :return: The entry_portal_activity_id of this EntryPortalActivityItem.  # noqa: E501
        :rtype: int
        """
        return self._entry_portal_activity_id

    @entry_portal_activity_id.setter
    def entry_portal_activity_id(self, entry_portal_activity_id):
        """Sets the entry_portal_activity_id of this EntryPortalActivityItem.

        Entry Portal Activity  # noqa: E501

        :param entry_portal_activity_id: The entry_portal_activity_id of this EntryPortalActivityItem.  # noqa: E501
        :type: int
        """

        self._entry_portal_activity_id = entry_portal_activity_id

    @property
    def entry_id(self):
        """Gets the entry_id of this EntryPortalActivityItem.  # noqa: E501

        Entry  # noqa: E501

        :return: The entry_id of this EntryPortalActivityItem.  # noqa: E501
        :rtype: int
        """
        return self._entry_id

    @entry_id.setter
    def entry_id(self, entry_id):
        """Sets the entry_id of this EntryPortalActivityItem.

        Entry  # noqa: E501

        :param entry_id: The entry_id of this EntryPortalActivityItem.  # noqa: E501
        :type: int
        """

        self._entry_id = entry_id

    @property
    def security_user_id(self):
        """Gets the security_user_id of this EntryPortalActivityItem.  # noqa: E501

        Security User  # noqa: E501

        :return: The security_user_id of this EntryPortalActivityItem.  # noqa: E501
        :rtype: int
        """
        return self._security_user_id

    @security_user_id.setter
    def security_user_id(self, security_user_id):
        """Sets the security_user_id of this EntryPortalActivityItem.

        Security User  # noqa: E501

        :param security_user_id: The security_user_id of this EntryPortalActivityItem.  # noqa: E501
        :type: int
        """

        self._security_user_id = security_user_id

    @property
    def portal_page_id(self):
        """Gets the portal_page_id of this EntryPortalActivityItem.  # noqa: E501

        Portal Page  # noqa: E501

        :return: The portal_page_id of this EntryPortalActivityItem.  # noqa: E501
        :rtype: int
        """
        return self._portal_page_id

    @portal_page_id.setter
    def portal_page_id(self, portal_page_id):
        """Sets the portal_page_id of this EntryPortalActivityItem.

        Portal Page  # noqa: E501

        :param portal_page_id: The portal_page_id of this EntryPortalActivityItem.  # noqa: E501
        :type: int
        """

        self._portal_page_id = portal_page_id

    @property
    def first_visit_date(self):
        """Gets the first_visit_date of this EntryPortalActivityItem.  # noqa: E501

        First Visit Date  # noqa: E501

        :return: The first_visit_date of this EntryPortalActivityItem.  # noqa: E501
        :rtype: datetime
        """
        return self._first_visit_date

    @first_visit_date.setter
    def first_visit_date(self, first_visit_date):
        """Sets the first_visit_date of this EntryPortalActivityItem.

        First Visit Date  # noqa: E501

        :param first_visit_date: The first_visit_date of this EntryPortalActivityItem.  # noqa: E501
        :type: datetime
        """

        self._first_visit_date = first_visit_date

    @property
    def last_visit_date(self):
        """Gets the last_visit_date of this EntryPortalActivityItem.  # noqa: E501

        Last Visit Date  # noqa: E501

        :return: The last_visit_date of this EntryPortalActivityItem.  # noqa: E501
        :rtype: datetime
        """
        return self._last_visit_date

    @last_visit_date.setter
    def last_visit_date(self, last_visit_date):
        """Sets the last_visit_date of this EntryPortalActivityItem.

        Last Visit Date  # noqa: E501

        :param last_visit_date: The last_visit_date of this EntryPortalActivityItem.  # noqa: E501
        :type: datetime
        """

        self._last_visit_date = last_visit_date

    @property
    def complete_date(self):
        """Gets the complete_date of this EntryPortalActivityItem.  # noqa: E501

        Complete Date  # noqa: E501

        :return: The complete_date of this EntryPortalActivityItem.  # noqa: E501
        :rtype: str
        """
        return self._complete_date

    @complete_date.setter
    def complete_date(self, complete_date):
        """Sets the complete_date of this EntryPortalActivityItem.

        Complete Date  # noqa: E501

        :param complete_date: The complete_date of this EntryPortalActivityItem.  # noqa: E501
        :type: str
        """

        self._complete_date = complete_date

    @property
    def table_name(self):
        """Gets the table_name of this EntryPortalActivityItem.  # noqa: E501

        Table Name  # noqa: E501

        :return: The table_name of this EntryPortalActivityItem.  # noqa: E501
        :rtype: str
        """
        return self._table_name

    @table_name.setter
    def table_name(self, table_name):
        """Sets the table_name of this EntryPortalActivityItem.

        Table Name  # noqa: E501

        :param table_name: The table_name of this EntryPortalActivityItem.  # noqa: E501
        :type: str
        """
        if table_name is not None and len(table_name) > 100:
            raise ValueError("Invalid value for `table_name`, length must be less than or equal to `100`")  # noqa: E501

        self._table_name = table_name

    @property
    def table_id(self):
        """Gets the table_id of this EntryPortalActivityItem.  # noqa: E501

        Table  # noqa: E501

        :return: The table_id of this EntryPortalActivityItem.  # noqa: E501
        :rtype: int
        """
        return self._table_id

    @table_id.setter
    def table_id(self, table_id):
        """Sets the table_id of this EntryPortalActivityItem.

        Table  # noqa: E501

        :param table_id: The table_id of this EntryPortalActivityItem.  # noqa: E501
        :type: int
        """

        self._table_id = table_id

    @property
    def date_modified(self):
        """Gets the date_modified of this EntryPortalActivityItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this EntryPortalActivityItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this EntryPortalActivityItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this EntryPortalActivityItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EntryPortalActivityItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
