# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class EntryMealItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'entry_meal_id': 'int',
        'entry_id': 'int',
        'meal_plan_id': 'int',
        'term_session_id': 'int',
        'meal_status_enum': 'str',
        'booking_id': 'int',
        'number_of_guests': 'str',
        'number_of_meals': 'str',
        'breakfast': 'str',
        'lunch': 'str',
        'dinner': 'str',
        'other': 'str',
        'date_start': 'date',
        'date_end': 'date',
        'contract_date_start': 'date',
        'contract_date_end': 'date',
        'allowance_a_initial': 'str',
        'allowance_a_used': 'str',
        'allowance_b_initial': 'str',
        'allowance_b_used': 'str',
        'allowance_c_initial': 'str',
        'allowance_c_used': 'str',
        'cancelled': 'bool',
        'processed_charged': 'bool',
        'processed_cancelled': 'bool',
        'comments': 'str',
        'date_charged_to': 'date',
        'custom_bit1': 'bool',
        'custom_bit2': 'bool',
        'custom_string1': 'str',
        'custom_string2': 'str',
        'custom_string3': 'str',
        'custom_string4': 'str',
        'custom_string5': 'str',
        'custom_string6': 'str',
        'custom_date1': 'str',
        'custom_date2': 'str',
        'date_created': 'datetime',
        'date_modified': 'str'
    }

    attribute_map = {
        'entry_meal_id': 'EntryMealID',
        'entry_id': 'EntryID',
        'meal_plan_id': 'MealPlanID',
        'term_session_id': 'TermSessionID',
        'meal_status_enum': 'MealStatusEnum',
        'booking_id': 'BookingID',
        'number_of_guests': 'NumberOfGuests',
        'number_of_meals': 'NumberOfMeals',
        'breakfast': 'Breakfast',
        'lunch': 'Lunch',
        'dinner': 'Dinner',
        'other': 'Other',
        'date_start': 'DateStart',
        'date_end': 'DateEnd',
        'contract_date_start': 'ContractDateStart',
        'contract_date_end': 'ContractDateEnd',
        'allowance_a_initial': 'AllowanceAInitial',
        'allowance_a_used': 'AllowanceAUsed',
        'allowance_b_initial': 'AllowanceBInitial',
        'allowance_b_used': 'AllowanceBUsed',
        'allowance_c_initial': 'AllowanceCInitial',
        'allowance_c_used': 'AllowanceCUsed',
        'cancelled': 'Cancelled',
        'processed_charged': 'ProcessedCharged',
        'processed_cancelled': 'ProcessedCancelled',
        'comments': 'Comments',
        'date_charged_to': 'DateChargedTo',
        'custom_bit1': 'CustomBit1',
        'custom_bit2': 'CustomBit2',
        'custom_string1': 'CustomString1',
        'custom_string2': 'CustomString2',
        'custom_string3': 'CustomString3',
        'custom_string4': 'CustomString4',
        'custom_string5': 'CustomString5',
        'custom_string6': 'CustomString6',
        'custom_date1': 'CustomDate1',
        'custom_date2': 'CustomDate2',
        'date_created': 'DateCreated',
        'date_modified': 'DateModified'
    }

    def __init__(self, entry_meal_id=None, entry_id=None, meal_plan_id=None, term_session_id=None, meal_status_enum=None, booking_id=None, number_of_guests=None, number_of_meals=None, breakfast=None, lunch=None, dinner=None, other=None, date_start=None, date_end=None, contract_date_start=None, contract_date_end=None, allowance_a_initial=None, allowance_a_used=None, allowance_b_initial=None, allowance_b_used=None, allowance_c_initial=None, allowance_c_used=None, cancelled=None, processed_charged=None, processed_cancelled=None, comments=None, date_charged_to=None, custom_bit1=None, custom_bit2=None, custom_string1=None, custom_string2=None, custom_string3=None, custom_string4=None, custom_string5=None, custom_string6=None, custom_date1=None, custom_date2=None, date_created=None, date_modified=None):  # noqa: E501
        """EntryMealItem - a model defined in Swagger"""  # noqa: E501

        self._entry_meal_id = None
        self._entry_id = None
        self._meal_plan_id = None
        self._term_session_id = None
        self._meal_status_enum = None
        self._booking_id = None
        self._number_of_guests = None
        self._number_of_meals = None
        self._breakfast = None
        self._lunch = None
        self._dinner = None
        self._other = None
        self._date_start = None
        self._date_end = None
        self._contract_date_start = None
        self._contract_date_end = None
        self._allowance_a_initial = None
        self._allowance_a_used = None
        self._allowance_b_initial = None
        self._allowance_b_used = None
        self._allowance_c_initial = None
        self._allowance_c_used = None
        self._cancelled = None
        self._processed_charged = None
        self._processed_cancelled = None
        self._comments = None
        self._date_charged_to = None
        self._custom_bit1 = None
        self._custom_bit2 = None
        self._custom_string1 = None
        self._custom_string2 = None
        self._custom_string3 = None
        self._custom_string4 = None
        self._custom_string5 = None
        self._custom_string6 = None
        self._custom_date1 = None
        self._custom_date2 = None
        self._date_created = None
        self._date_modified = None
        self.discriminator = None

        if entry_meal_id is not None:
            self.entry_meal_id = entry_meal_id
        if entry_id is not None:
            self.entry_id = entry_id
        if meal_plan_id is not None:
            self.meal_plan_id = meal_plan_id
        if term_session_id is not None:
            self.term_session_id = term_session_id
        if meal_status_enum is not None:
            self.meal_status_enum = meal_status_enum
        if booking_id is not None:
            self.booking_id = booking_id
        if number_of_guests is not None:
            self.number_of_guests = number_of_guests
        if number_of_meals is not None:
            self.number_of_meals = number_of_meals
        if breakfast is not None:
            self.breakfast = breakfast
        if lunch is not None:
            self.lunch = lunch
        if dinner is not None:
            self.dinner = dinner
        if other is not None:
            self.other = other
        if date_start is not None:
            self.date_start = date_start
        if date_end is not None:
            self.date_end = date_end
        if contract_date_start is not None:
            self.contract_date_start = contract_date_start
        if contract_date_end is not None:
            self.contract_date_end = contract_date_end
        if allowance_a_initial is not None:
            self.allowance_a_initial = allowance_a_initial
        if allowance_a_used is not None:
            self.allowance_a_used = allowance_a_used
        if allowance_b_initial is not None:
            self.allowance_b_initial = allowance_b_initial
        if allowance_b_used is not None:
            self.allowance_b_used = allowance_b_used
        if allowance_c_initial is not None:
            self.allowance_c_initial = allowance_c_initial
        if allowance_c_used is not None:
            self.allowance_c_used = allowance_c_used
        if cancelled is not None:
            self.cancelled = cancelled
        if processed_charged is not None:
            self.processed_charged = processed_charged
        if processed_cancelled is not None:
            self.processed_cancelled = processed_cancelled
        if comments is not None:
            self.comments = comments
        if date_charged_to is not None:
            self.date_charged_to = date_charged_to
        if custom_bit1 is not None:
            self.custom_bit1 = custom_bit1
        if custom_bit2 is not None:
            self.custom_bit2 = custom_bit2
        if custom_string1 is not None:
            self.custom_string1 = custom_string1
        if custom_string2 is not None:
            self.custom_string2 = custom_string2
        if custom_string3 is not None:
            self.custom_string3 = custom_string3
        if custom_string4 is not None:
            self.custom_string4 = custom_string4
        if custom_string5 is not None:
            self.custom_string5 = custom_string5
        if custom_string6 is not None:
            self.custom_string6 = custom_string6
        if custom_date1 is not None:
            self.custom_date1 = custom_date1
        if custom_date2 is not None:
            self.custom_date2 = custom_date2
        if date_created is not None:
            self.date_created = date_created
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def entry_meal_id(self):
        """Gets the entry_meal_id of this EntryMealItem.  # noqa: E501

        Entry Meal  # noqa: E501

        :return: The entry_meal_id of this EntryMealItem.  # noqa: E501
        :rtype: int
        """
        return self._entry_meal_id

    @entry_meal_id.setter
    def entry_meal_id(self, entry_meal_id):
        """Sets the entry_meal_id of this EntryMealItem.

        Entry Meal  # noqa: E501

        :param entry_meal_id: The entry_meal_id of this EntryMealItem.  # noqa: E501
        :type: int
        """

        self._entry_meal_id = entry_meal_id

    @property
    def entry_id(self):
        """Gets the entry_id of this EntryMealItem.  # noqa: E501

        Entry  # noqa: E501

        :return: The entry_id of this EntryMealItem.  # noqa: E501
        :rtype: int
        """
        return self._entry_id

    @entry_id.setter
    def entry_id(self, entry_id):
        """Sets the entry_id of this EntryMealItem.

        Entry  # noqa: E501

        :param entry_id: The entry_id of this EntryMealItem.  # noqa: E501
        :type: int
        """

        self._entry_id = entry_id

    @property
    def meal_plan_id(self):
        """Gets the meal_plan_id of this EntryMealItem.  # noqa: E501

        Meal Plan  # noqa: E501

        :return: The meal_plan_id of this EntryMealItem.  # noqa: E501
        :rtype: int
        """
        return self._meal_plan_id

    @meal_plan_id.setter
    def meal_plan_id(self, meal_plan_id):
        """Sets the meal_plan_id of this EntryMealItem.

        Meal Plan  # noqa: E501

        :param meal_plan_id: The meal_plan_id of this EntryMealItem.  # noqa: E501
        :type: int
        """

        self._meal_plan_id = meal_plan_id

    @property
    def term_session_id(self):
        """Gets the term_session_id of this EntryMealItem.  # noqa: E501

        Term Session  # noqa: E501

        :return: The term_session_id of this EntryMealItem.  # noqa: E501
        :rtype: int
        """
        return self._term_session_id

    @term_session_id.setter
    def term_session_id(self, term_session_id):
        """Sets the term_session_id of this EntryMealItem.

        Term Session  # noqa: E501

        :param term_session_id: The term_session_id of this EntryMealItem.  # noqa: E501
        :type: int
        """

        self._term_session_id = term_session_id

    @property
    def meal_status_enum(self):
        """Gets the meal_status_enum of this EntryMealItem.  # noqa: E501

        Meal Status  # noqa: E501

        :return: The meal_status_enum of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._meal_status_enum

    @meal_status_enum.setter
    def meal_status_enum(self, meal_status_enum):
        """Sets the meal_status_enum of this EntryMealItem.

        Meal Status  # noqa: E501

        :param meal_status_enum: The meal_status_enum of this EntryMealItem.  # noqa: E501
        :type: str
        """

        self._meal_status_enum = meal_status_enum

    @property
    def booking_id(self):
        """Gets the booking_id of this EntryMealItem.  # noqa: E501

        Booking  # noqa: E501

        :return: The booking_id of this EntryMealItem.  # noqa: E501
        :rtype: int
        """
        return self._booking_id

    @booking_id.setter
    def booking_id(self, booking_id):
        """Sets the booking_id of this EntryMealItem.

        Booking  # noqa: E501

        :param booking_id: The booking_id of this EntryMealItem.  # noqa: E501
        :type: int
        """

        self._booking_id = booking_id

    @property
    def number_of_guests(self):
        """Gets the number_of_guests of this EntryMealItem.  # noqa: E501

        Number Of Guests  # noqa: E501

        :return: The number_of_guests of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._number_of_guests

    @number_of_guests.setter
    def number_of_guests(self, number_of_guests):
        """Sets the number_of_guests of this EntryMealItem.

        Number Of Guests  # noqa: E501

        :param number_of_guests: The number_of_guests of this EntryMealItem.  # noqa: E501
        :type: str
        """

        self._number_of_guests = number_of_guests

    @property
    def number_of_meals(self):
        """Gets the number_of_meals of this EntryMealItem.  # noqa: E501

        Number Of Meals  # noqa: E501

        :return: The number_of_meals of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._number_of_meals

    @number_of_meals.setter
    def number_of_meals(self, number_of_meals):
        """Sets the number_of_meals of this EntryMealItem.

        Number Of Meals  # noqa: E501

        :param number_of_meals: The number_of_meals of this EntryMealItem.  # noqa: E501
        :type: str
        """

        self._number_of_meals = number_of_meals

    @property
    def breakfast(self):
        """Gets the breakfast of this EntryMealItem.  # noqa: E501

        Breakfast  # noqa: E501

        :return: The breakfast of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._breakfast

    @breakfast.setter
    def breakfast(self, breakfast):
        """Sets the breakfast of this EntryMealItem.

        Breakfast  # noqa: E501

        :param breakfast: The breakfast of this EntryMealItem.  # noqa: E501
        :type: str
        """

        self._breakfast = breakfast

    @property
    def lunch(self):
        """Gets the lunch of this EntryMealItem.  # noqa: E501

        Lunch  # noqa: E501

        :return: The lunch of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._lunch

    @lunch.setter
    def lunch(self, lunch):
        """Sets the lunch of this EntryMealItem.

        Lunch  # noqa: E501

        :param lunch: The lunch of this EntryMealItem.  # noqa: E501
        :type: str
        """

        self._lunch = lunch

    @property
    def dinner(self):
        """Gets the dinner of this EntryMealItem.  # noqa: E501

        Dinner  # noqa: E501

        :return: The dinner of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._dinner

    @dinner.setter
    def dinner(self, dinner):
        """Sets the dinner of this EntryMealItem.

        Dinner  # noqa: E501

        :param dinner: The dinner of this EntryMealItem.  # noqa: E501
        :type: str
        """

        self._dinner = dinner

    @property
    def other(self):
        """Gets the other of this EntryMealItem.  # noqa: E501

        Other  # noqa: E501

        :return: The other of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._other

    @other.setter
    def other(self, other):
        """Sets the other of this EntryMealItem.

        Other  # noqa: E501

        :param other: The other of this EntryMealItem.  # noqa: E501
        :type: str
        """

        self._other = other

    @property
    def date_start(self):
        """Gets the date_start of this EntryMealItem.  # noqa: E501

        Date Start  # noqa: E501

        :return: The date_start of this EntryMealItem.  # noqa: E501
        :rtype: date
        """
        return self._date_start

    @date_start.setter
    def date_start(self, date_start):
        """Sets the date_start of this EntryMealItem.

        Date Start  # noqa: E501

        :param date_start: The date_start of this EntryMealItem.  # noqa: E501
        :type: date
        """

        self._date_start = date_start

    @property
    def date_end(self):
        """Gets the date_end of this EntryMealItem.  # noqa: E501

        Date End  # noqa: E501

        :return: The date_end of this EntryMealItem.  # noqa: E501
        :rtype: date
        """
        return self._date_end

    @date_end.setter
    def date_end(self, date_end):
        """Sets the date_end of this EntryMealItem.

        Date End  # noqa: E501

        :param date_end: The date_end of this EntryMealItem.  # noqa: E501
        :type: date
        """

        self._date_end = date_end

    @property
    def contract_date_start(self):
        """Gets the contract_date_start of this EntryMealItem.  # noqa: E501

        Contract Date Start  # noqa: E501

        :return: The contract_date_start of this EntryMealItem.  # noqa: E501
        :rtype: date
        """
        return self._contract_date_start

    @contract_date_start.setter
    def contract_date_start(self, contract_date_start):
        """Sets the contract_date_start of this EntryMealItem.

        Contract Date Start  # noqa: E501

        :param contract_date_start: The contract_date_start of this EntryMealItem.  # noqa: E501
        :type: date
        """

        self._contract_date_start = contract_date_start

    @property
    def contract_date_end(self):
        """Gets the contract_date_end of this EntryMealItem.  # noqa: E501

        Contract Date End  # noqa: E501

        :return: The contract_date_end of this EntryMealItem.  # noqa: E501
        :rtype: date
        """
        return self._contract_date_end

    @contract_date_end.setter
    def contract_date_end(self, contract_date_end):
        """Sets the contract_date_end of this EntryMealItem.

        Contract Date End  # noqa: E501

        :param contract_date_end: The contract_date_end of this EntryMealItem.  # noqa: E501
        :type: date
        """

        self._contract_date_end = contract_date_end

    @property
    def allowance_a_initial(self):
        """Gets the allowance_a_initial of this EntryMealItem.  # noqa: E501

        Allowance A Initial  # noqa: E501

        :return: The allowance_a_initial of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._allowance_a_initial

    @allowance_a_initial.setter
    def allowance_a_initial(self, allowance_a_initial):
        """Sets the allowance_a_initial of this EntryMealItem.

        Allowance A Initial  # noqa: E501

        :param allowance_a_initial: The allowance_a_initial of this EntryMealItem.  # noqa: E501
        :type: str
        """

        self._allowance_a_initial = allowance_a_initial

    @property
    def allowance_a_used(self):
        """Gets the allowance_a_used of this EntryMealItem.  # noqa: E501

        Allowance A Used  # noqa: E501

        :return: The allowance_a_used of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._allowance_a_used

    @allowance_a_used.setter
    def allowance_a_used(self, allowance_a_used):
        """Sets the allowance_a_used of this EntryMealItem.

        Allowance A Used  # noqa: E501

        :param allowance_a_used: The allowance_a_used of this EntryMealItem.  # noqa: E501
        :type: str
        """

        self._allowance_a_used = allowance_a_used

    @property
    def allowance_b_initial(self):
        """Gets the allowance_b_initial of this EntryMealItem.  # noqa: E501

        Allowance B Initial  # noqa: E501

        :return: The allowance_b_initial of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._allowance_b_initial

    @allowance_b_initial.setter
    def allowance_b_initial(self, allowance_b_initial):
        """Sets the allowance_b_initial of this EntryMealItem.

        Allowance B Initial  # noqa: E501

        :param allowance_b_initial: The allowance_b_initial of this EntryMealItem.  # noqa: E501
        :type: str
        """

        self._allowance_b_initial = allowance_b_initial

    @property
    def allowance_b_used(self):
        """Gets the allowance_b_used of this EntryMealItem.  # noqa: E501

        Allowance B Used  # noqa: E501

        :return: The allowance_b_used of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._allowance_b_used

    @allowance_b_used.setter
    def allowance_b_used(self, allowance_b_used):
        """Sets the allowance_b_used of this EntryMealItem.

        Allowance B Used  # noqa: E501

        :param allowance_b_used: The allowance_b_used of this EntryMealItem.  # noqa: E501
        :type: str
        """

        self._allowance_b_used = allowance_b_used

    @property
    def allowance_c_initial(self):
        """Gets the allowance_c_initial of this EntryMealItem.  # noqa: E501

        Allowance C Initial  # noqa: E501

        :return: The allowance_c_initial of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._allowance_c_initial

    @allowance_c_initial.setter
    def allowance_c_initial(self, allowance_c_initial):
        """Sets the allowance_c_initial of this EntryMealItem.

        Allowance C Initial  # noqa: E501

        :param allowance_c_initial: The allowance_c_initial of this EntryMealItem.  # noqa: E501
        :type: str
        """

        self._allowance_c_initial = allowance_c_initial

    @property
    def allowance_c_used(self):
        """Gets the allowance_c_used of this EntryMealItem.  # noqa: E501

        Allowance C Used  # noqa: E501

        :return: The allowance_c_used of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._allowance_c_used

    @allowance_c_used.setter
    def allowance_c_used(self, allowance_c_used):
        """Sets the allowance_c_used of this EntryMealItem.

        Allowance C Used  # noqa: E501

        :param allowance_c_used: The allowance_c_used of this EntryMealItem.  # noqa: E501
        :type: str
        """

        self._allowance_c_used = allowance_c_used

    @property
    def cancelled(self):
        """Gets the cancelled of this EntryMealItem.  # noqa: E501

        Cancelled  # noqa: E501

        :return: The cancelled of this EntryMealItem.  # noqa: E501
        :rtype: bool
        """
        return self._cancelled

    @cancelled.setter
    def cancelled(self, cancelled):
        """Sets the cancelled of this EntryMealItem.

        Cancelled  # noqa: E501

        :param cancelled: The cancelled of this EntryMealItem.  # noqa: E501
        :type: bool
        """

        self._cancelled = cancelled

    @property
    def processed_charged(self):
        """Gets the processed_charged of this EntryMealItem.  # noqa: E501

        Processed Charged  # noqa: E501

        :return: The processed_charged of this EntryMealItem.  # noqa: E501
        :rtype: bool
        """
        return self._processed_charged

    @processed_charged.setter
    def processed_charged(self, processed_charged):
        """Sets the processed_charged of this EntryMealItem.

        Processed Charged  # noqa: E501

        :param processed_charged: The processed_charged of this EntryMealItem.  # noqa: E501
        :type: bool
        """

        self._processed_charged = processed_charged

    @property
    def processed_cancelled(self):
        """Gets the processed_cancelled of this EntryMealItem.  # noqa: E501

        Processed Cancelled  # noqa: E501

        :return: The processed_cancelled of this EntryMealItem.  # noqa: E501
        :rtype: bool
        """
        return self._processed_cancelled

    @processed_cancelled.setter
    def processed_cancelled(self, processed_cancelled):
        """Sets the processed_cancelled of this EntryMealItem.

        Processed Cancelled  # noqa: E501

        :param processed_cancelled: The processed_cancelled of this EntryMealItem.  # noqa: E501
        :type: bool
        """

        self._processed_cancelled = processed_cancelled

    @property
    def comments(self):
        """Gets the comments of this EntryMealItem.  # noqa: E501

        Comments  # noqa: E501

        :return: The comments of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this EntryMealItem.

        Comments  # noqa: E501

        :param comments: The comments of this EntryMealItem.  # noqa: E501
        :type: str
        """
        if comments is not None and len(comments) > 200:
            raise ValueError("Invalid value for `comments`, length must be less than or equal to `200`")  # noqa: E501

        self._comments = comments

    @property
    def date_charged_to(self):
        """Gets the date_charged_to of this EntryMealItem.  # noqa: E501

        Date Charged To  # noqa: E501

        :return: The date_charged_to of this EntryMealItem.  # noqa: E501
        :rtype: date
        """
        return self._date_charged_to

    @date_charged_to.setter
    def date_charged_to(self, date_charged_to):
        """Sets the date_charged_to of this EntryMealItem.

        Date Charged To  # noqa: E501

        :param date_charged_to: The date_charged_to of this EntryMealItem.  # noqa: E501
        :type: date
        """

        self._date_charged_to = date_charged_to

    @property
    def custom_bit1(self):
        """Gets the custom_bit1 of this EntryMealItem.  # noqa: E501

        Custom Flag 1  # noqa: E501

        :return: The custom_bit1 of this EntryMealItem.  # noqa: E501
        :rtype: bool
        """
        return self._custom_bit1

    @custom_bit1.setter
    def custom_bit1(self, custom_bit1):
        """Sets the custom_bit1 of this EntryMealItem.

        Custom Flag 1  # noqa: E501

        :param custom_bit1: The custom_bit1 of this EntryMealItem.  # noqa: E501
        :type: bool
        """

        self._custom_bit1 = custom_bit1

    @property
    def custom_bit2(self):
        """Gets the custom_bit2 of this EntryMealItem.  # noqa: E501

        Custom Flag 2  # noqa: E501

        :return: The custom_bit2 of this EntryMealItem.  # noqa: E501
        :rtype: bool
        """
        return self._custom_bit2

    @custom_bit2.setter
    def custom_bit2(self, custom_bit2):
        """Sets the custom_bit2 of this EntryMealItem.

        Custom Flag 2  # noqa: E501

        :param custom_bit2: The custom_bit2 of this EntryMealItem.  # noqa: E501
        :type: bool
        """

        self._custom_bit2 = custom_bit2

    @property
    def custom_string1(self):
        """Gets the custom_string1 of this EntryMealItem.  # noqa: E501

        Custom String 1  # noqa: E501

        :return: The custom_string1 of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string1

    @custom_string1.setter
    def custom_string1(self, custom_string1):
        """Sets the custom_string1 of this EntryMealItem.

        Custom String 1  # noqa: E501

        :param custom_string1: The custom_string1 of this EntryMealItem.  # noqa: E501
        :type: str
        """
        if custom_string1 is not None and len(custom_string1) > 50:
            raise ValueError("Invalid value for `custom_string1`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string1 = custom_string1

    @property
    def custom_string2(self):
        """Gets the custom_string2 of this EntryMealItem.  # noqa: E501

        Custom String 2  # noqa: E501

        :return: The custom_string2 of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string2

    @custom_string2.setter
    def custom_string2(self, custom_string2):
        """Sets the custom_string2 of this EntryMealItem.

        Custom String 2  # noqa: E501

        :param custom_string2: The custom_string2 of this EntryMealItem.  # noqa: E501
        :type: str
        """
        if custom_string2 is not None and len(custom_string2) > 50:
            raise ValueError("Invalid value for `custom_string2`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string2 = custom_string2

    @property
    def custom_string3(self):
        """Gets the custom_string3 of this EntryMealItem.  # noqa: E501

        Custom String 3  # noqa: E501

        :return: The custom_string3 of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string3

    @custom_string3.setter
    def custom_string3(self, custom_string3):
        """Sets the custom_string3 of this EntryMealItem.

        Custom String 3  # noqa: E501

        :param custom_string3: The custom_string3 of this EntryMealItem.  # noqa: E501
        :type: str
        """
        if custom_string3 is not None and len(custom_string3) > 50:
            raise ValueError("Invalid value for `custom_string3`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string3 = custom_string3

    @property
    def custom_string4(self):
        """Gets the custom_string4 of this EntryMealItem.  # noqa: E501

        Custom String 4  # noqa: E501

        :return: The custom_string4 of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string4

    @custom_string4.setter
    def custom_string4(self, custom_string4):
        """Sets the custom_string4 of this EntryMealItem.

        Custom String 4  # noqa: E501

        :param custom_string4: The custom_string4 of this EntryMealItem.  # noqa: E501
        :type: str
        """
        if custom_string4 is not None and len(custom_string4) > 50:
            raise ValueError("Invalid value for `custom_string4`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string4 = custom_string4

    @property
    def custom_string5(self):
        """Gets the custom_string5 of this EntryMealItem.  # noqa: E501

        Custom String 5  # noqa: E501

        :return: The custom_string5 of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string5

    @custom_string5.setter
    def custom_string5(self, custom_string5):
        """Sets the custom_string5 of this EntryMealItem.

        Custom String 5  # noqa: E501

        :param custom_string5: The custom_string5 of this EntryMealItem.  # noqa: E501
        :type: str
        """
        if custom_string5 is not None and len(custom_string5) > 50:
            raise ValueError("Invalid value for `custom_string5`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string5 = custom_string5

    @property
    def custom_string6(self):
        """Gets the custom_string6 of this EntryMealItem.  # noqa: E501

        Custom String 6  # noqa: E501

        :return: The custom_string6 of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string6

    @custom_string6.setter
    def custom_string6(self, custom_string6):
        """Sets the custom_string6 of this EntryMealItem.

        Custom String 6  # noqa: E501

        :param custom_string6: The custom_string6 of this EntryMealItem.  # noqa: E501
        :type: str
        """
        if custom_string6 is not None and len(custom_string6) > 50:
            raise ValueError("Invalid value for `custom_string6`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string6 = custom_string6

    @property
    def custom_date1(self):
        """Gets the custom_date1 of this EntryMealItem.  # noqa: E501

        Custom Date 1  # noqa: E501

        :return: The custom_date1 of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_date1

    @custom_date1.setter
    def custom_date1(self, custom_date1):
        """Sets the custom_date1 of this EntryMealItem.

        Custom Date 1  # noqa: E501

        :param custom_date1: The custom_date1 of this EntryMealItem.  # noqa: E501
        :type: str
        """

        self._custom_date1 = custom_date1

    @property
    def custom_date2(self):
        """Gets the custom_date2 of this EntryMealItem.  # noqa: E501

        Custom Date 2  # noqa: E501

        :return: The custom_date2 of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_date2

    @custom_date2.setter
    def custom_date2(self, custom_date2):
        """Sets the custom_date2 of this EntryMealItem.

        Custom Date 2  # noqa: E501

        :param custom_date2: The custom_date2 of this EntryMealItem.  # noqa: E501
        :type: str
        """

        self._custom_date2 = custom_date2

    @property
    def date_created(self):
        """Gets the date_created of this EntryMealItem.  # noqa: E501

        Date Created  # noqa: E501

        :return: The date_created of this EntryMealItem.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this EntryMealItem.

        Date Created  # noqa: E501

        :param date_created: The date_created of this EntryMealItem.  # noqa: E501
        :type: datetime
        """

        self._date_created = date_created

    @property
    def date_modified(self):
        """Gets the date_modified of this EntryMealItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this EntryMealItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this EntryMealItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this EntryMealItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EntryMealItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
