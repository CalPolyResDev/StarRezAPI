# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class ChargeItemItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'charge_item_id': 'int',
        'charge_group_id': 'int',
        'record_type_enum': 'str',
        'abbreviation': 'str',
        'description': 'str',
        'gl_number': 'str',
        'tax_gl_posting_id': 'int',
        'account_receivable_gl_posting_id': 'int',
        'default_amount': 'str',
        'tax_rate': 'str',
        'tax_rate2': 'str',
        'tax_rate3': 'str',
        'amount_input_as_ex_tax': 'bool',
        'tax_order_enum': 'str',
        'tax_category_enum': 'str',
        'unearned_income_charge_item_id': 'int',
        'disputable': 'bool',
        'custom_bit1': 'bool',
        'custom_bit2': 'bool',
        'custom_string1': 'str',
        'custom_string2': 'str',
        'custom_string3': 'str',
        'custom_string4': 'str',
        'custom_string5': 'str',
        'custom_string6': 'str',
        'custom_date1': 'str',
        'custom_date2': 'str',
        'date_modified': 'str'
    }

    attribute_map = {
        'charge_item_id': 'ChargeItemID',
        'charge_group_id': 'ChargeGroupID',
        'record_type_enum': 'RecordTypeEnum',
        'abbreviation': 'Abbreviation',
        'description': 'Description',
        'gl_number': 'GLNumber',
        'tax_gl_posting_id': 'Tax_GLPostingID',
        'account_receivable_gl_posting_id': 'AccountReceivable_GLPostingID',
        'default_amount': 'DefaultAmount',
        'tax_rate': 'TaxRate',
        'tax_rate2': 'TaxRate2',
        'tax_rate3': 'TaxRate3',
        'amount_input_as_ex_tax': 'AmountInputAsExTax',
        'tax_order_enum': 'TaxOrderEnum',
        'tax_category_enum': 'TaxCategoryEnum',
        'unearned_income_charge_item_id': 'UnearnedIncome_ChargeItemID',
        'disputable': 'Disputable',
        'custom_bit1': 'CustomBit1',
        'custom_bit2': 'CustomBit2',
        'custom_string1': 'CustomString1',
        'custom_string2': 'CustomString2',
        'custom_string3': 'CustomString3',
        'custom_string4': 'CustomString4',
        'custom_string5': 'CustomString5',
        'custom_string6': 'CustomString6',
        'custom_date1': 'CustomDate1',
        'custom_date2': 'CustomDate2',
        'date_modified': 'DateModified'
    }

    def __init__(self, charge_item_id=None, charge_group_id=None, record_type_enum=None, abbreviation=None, description=None, gl_number=None, tax_gl_posting_id=None, account_receivable_gl_posting_id=None, default_amount=None, tax_rate=None, tax_rate2=None, tax_rate3=None, amount_input_as_ex_tax=None, tax_order_enum=None, tax_category_enum=None, unearned_income_charge_item_id=None, disputable=None, custom_bit1=None, custom_bit2=None, custom_string1=None, custom_string2=None, custom_string3=None, custom_string4=None, custom_string5=None, custom_string6=None, custom_date1=None, custom_date2=None, date_modified=None):  # noqa: E501
        """ChargeItemItem - a model defined in Swagger"""  # noqa: E501

        self._charge_item_id = None
        self._charge_group_id = None
        self._record_type_enum = None
        self._abbreviation = None
        self._description = None
        self._gl_number = None
        self._tax_gl_posting_id = None
        self._account_receivable_gl_posting_id = None
        self._default_amount = None
        self._tax_rate = None
        self._tax_rate2 = None
        self._tax_rate3 = None
        self._amount_input_as_ex_tax = None
        self._tax_order_enum = None
        self._tax_category_enum = None
        self._unearned_income_charge_item_id = None
        self._disputable = None
        self._custom_bit1 = None
        self._custom_bit2 = None
        self._custom_string1 = None
        self._custom_string2 = None
        self._custom_string3 = None
        self._custom_string4 = None
        self._custom_string5 = None
        self._custom_string6 = None
        self._custom_date1 = None
        self._custom_date2 = None
        self._date_modified = None
        self.discriminator = None

        if charge_item_id is not None:
            self.charge_item_id = charge_item_id
        if charge_group_id is not None:
            self.charge_group_id = charge_group_id
        if record_type_enum is not None:
            self.record_type_enum = record_type_enum
        if abbreviation is not None:
            self.abbreviation = abbreviation
        if description is not None:
            self.description = description
        if gl_number is not None:
            self.gl_number = gl_number
        if tax_gl_posting_id is not None:
            self.tax_gl_posting_id = tax_gl_posting_id
        if account_receivable_gl_posting_id is not None:
            self.account_receivable_gl_posting_id = account_receivable_gl_posting_id
        if default_amount is not None:
            self.default_amount = default_amount
        if tax_rate is not None:
            self.tax_rate = tax_rate
        if tax_rate2 is not None:
            self.tax_rate2 = tax_rate2
        if tax_rate3 is not None:
            self.tax_rate3 = tax_rate3
        if amount_input_as_ex_tax is not None:
            self.amount_input_as_ex_tax = amount_input_as_ex_tax
        if tax_order_enum is not None:
            self.tax_order_enum = tax_order_enum
        if tax_category_enum is not None:
            self.tax_category_enum = tax_category_enum
        if unearned_income_charge_item_id is not None:
            self.unearned_income_charge_item_id = unearned_income_charge_item_id
        if disputable is not None:
            self.disputable = disputable
        if custom_bit1 is not None:
            self.custom_bit1 = custom_bit1
        if custom_bit2 is not None:
            self.custom_bit2 = custom_bit2
        if custom_string1 is not None:
            self.custom_string1 = custom_string1
        if custom_string2 is not None:
            self.custom_string2 = custom_string2
        if custom_string3 is not None:
            self.custom_string3 = custom_string3
        if custom_string4 is not None:
            self.custom_string4 = custom_string4
        if custom_string5 is not None:
            self.custom_string5 = custom_string5
        if custom_string6 is not None:
            self.custom_string6 = custom_string6
        if custom_date1 is not None:
            self.custom_date1 = custom_date1
        if custom_date2 is not None:
            self.custom_date2 = custom_date2
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def charge_item_id(self):
        """Gets the charge_item_id of this ChargeItemItem.  # noqa: E501

        Charge Item  # noqa: E501

        :return: The charge_item_id of this ChargeItemItem.  # noqa: E501
        :rtype: int
        """
        return self._charge_item_id

    @charge_item_id.setter
    def charge_item_id(self, charge_item_id):
        """Sets the charge_item_id of this ChargeItemItem.

        Charge Item  # noqa: E501

        :param charge_item_id: The charge_item_id of this ChargeItemItem.  # noqa: E501
        :type: int
        """

        self._charge_item_id = charge_item_id

    @property
    def charge_group_id(self):
        """Gets the charge_group_id of this ChargeItemItem.  # noqa: E501

        Charge Group  # noqa: E501

        :return: The charge_group_id of this ChargeItemItem.  # noqa: E501
        :rtype: int
        """
        return self._charge_group_id

    @charge_group_id.setter
    def charge_group_id(self, charge_group_id):
        """Sets the charge_group_id of this ChargeItemItem.

        Charge Group  # noqa: E501

        :param charge_group_id: The charge_group_id of this ChargeItemItem.  # noqa: E501
        :type: int
        """

        self._charge_group_id = charge_group_id

    @property
    def record_type_enum(self):
        """Gets the record_type_enum of this ChargeItemItem.  # noqa: E501

        Record Type  # noqa: E501

        :return: The record_type_enum of this ChargeItemItem.  # noqa: E501
        :rtype: str
        """
        return self._record_type_enum

    @record_type_enum.setter
    def record_type_enum(self, record_type_enum):
        """Sets the record_type_enum of this ChargeItemItem.

        Record Type  # noqa: E501

        :param record_type_enum: The record_type_enum of this ChargeItemItem.  # noqa: E501
        :type: str
        """

        self._record_type_enum = record_type_enum

    @property
    def abbreviation(self):
        """Gets the abbreviation of this ChargeItemItem.  # noqa: E501

        Abbreviation  # noqa: E501

        :return: The abbreviation of this ChargeItemItem.  # noqa: E501
        :rtype: str
        """
        return self._abbreviation

    @abbreviation.setter
    def abbreviation(self, abbreviation):
        """Sets the abbreviation of this ChargeItemItem.

        Abbreviation  # noqa: E501

        :param abbreviation: The abbreviation of this ChargeItemItem.  # noqa: E501
        :type: str
        """
        if abbreviation is not None and len(abbreviation) > 6:
            raise ValueError("Invalid value for `abbreviation`, length must be less than or equal to `6`")  # noqa: E501

        self._abbreviation = abbreviation

    @property
    def description(self):
        """Gets the description of this ChargeItemItem.  # noqa: E501

        Description  # noqa: E501

        :return: The description of this ChargeItemItem.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ChargeItemItem.

        Description  # noqa: E501

        :param description: The description of this ChargeItemItem.  # noqa: E501
        :type: str
        """
        if description is not None and len(description) > 35:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `35`")  # noqa: E501

        self._description = description

    @property
    def gl_number(self):
        """Gets the gl_number of this ChargeItemItem.  # noqa: E501

        GL Number  # noqa: E501

        :return: The gl_number of this ChargeItemItem.  # noqa: E501
        :rtype: str
        """
        return self._gl_number

    @gl_number.setter
    def gl_number(self, gl_number):
        """Sets the gl_number of this ChargeItemItem.

        GL Number  # noqa: E501

        :param gl_number: The gl_number of this ChargeItemItem.  # noqa: E501
        :type: str
        """
        if gl_number is not None and len(gl_number) > 40:
            raise ValueError("Invalid value for `gl_number`, length must be less than or equal to `40`")  # noqa: E501

        self._gl_number = gl_number

    @property
    def tax_gl_posting_id(self):
        """Gets the tax_gl_posting_id of this ChargeItemItem.  # noqa: E501

        Tax GL Posting  # noqa: E501

        :return: The tax_gl_posting_id of this ChargeItemItem.  # noqa: E501
        :rtype: int
        """
        return self._tax_gl_posting_id

    @tax_gl_posting_id.setter
    def tax_gl_posting_id(self, tax_gl_posting_id):
        """Sets the tax_gl_posting_id of this ChargeItemItem.

        Tax GL Posting  # noqa: E501

        :param tax_gl_posting_id: The tax_gl_posting_id of this ChargeItemItem.  # noqa: E501
        :type: int
        """

        self._tax_gl_posting_id = tax_gl_posting_id

    @property
    def account_receivable_gl_posting_id(self):
        """Gets the account_receivable_gl_posting_id of this ChargeItemItem.  # noqa: E501

        Account Receivable GL Posting  # noqa: E501

        :return: The account_receivable_gl_posting_id of this ChargeItemItem.  # noqa: E501
        :rtype: int
        """
        return self._account_receivable_gl_posting_id

    @account_receivable_gl_posting_id.setter
    def account_receivable_gl_posting_id(self, account_receivable_gl_posting_id):
        """Sets the account_receivable_gl_posting_id of this ChargeItemItem.

        Account Receivable GL Posting  # noqa: E501

        :param account_receivable_gl_posting_id: The account_receivable_gl_posting_id of this ChargeItemItem.  # noqa: E501
        :type: int
        """

        self._account_receivable_gl_posting_id = account_receivable_gl_posting_id

    @property
    def default_amount(self):
        """Gets the default_amount of this ChargeItemItem.  # noqa: E501

        Default Amount  # noqa: E501

        :return: The default_amount of this ChargeItemItem.  # noqa: E501
        :rtype: str
        """
        return self._default_amount

    @default_amount.setter
    def default_amount(self, default_amount):
        """Sets the default_amount of this ChargeItemItem.

        Default Amount  # noqa: E501

        :param default_amount: The default_amount of this ChargeItemItem.  # noqa: E501
        :type: str
        """

        self._default_amount = default_amount

    @property
    def tax_rate(self):
        """Gets the tax_rate of this ChargeItemItem.  # noqa: E501

        Tax Rate  # noqa: E501

        :return: The tax_rate of this ChargeItemItem.  # noqa: E501
        :rtype: str
        """
        return self._tax_rate

    @tax_rate.setter
    def tax_rate(self, tax_rate):
        """Sets the tax_rate of this ChargeItemItem.

        Tax Rate  # noqa: E501

        :param tax_rate: The tax_rate of this ChargeItemItem.  # noqa: E501
        :type: str
        """

        self._tax_rate = tax_rate

    @property
    def tax_rate2(self):
        """Gets the tax_rate2 of this ChargeItemItem.  # noqa: E501

        Tax Rate 2  # noqa: E501

        :return: The tax_rate2 of this ChargeItemItem.  # noqa: E501
        :rtype: str
        """
        return self._tax_rate2

    @tax_rate2.setter
    def tax_rate2(self, tax_rate2):
        """Sets the tax_rate2 of this ChargeItemItem.

        Tax Rate 2  # noqa: E501

        :param tax_rate2: The tax_rate2 of this ChargeItemItem.  # noqa: E501
        :type: str
        """

        self._tax_rate2 = tax_rate2

    @property
    def tax_rate3(self):
        """Gets the tax_rate3 of this ChargeItemItem.  # noqa: E501

        Tax Rate 3  # noqa: E501

        :return: The tax_rate3 of this ChargeItemItem.  # noqa: E501
        :rtype: str
        """
        return self._tax_rate3

    @tax_rate3.setter
    def tax_rate3(self, tax_rate3):
        """Sets the tax_rate3 of this ChargeItemItem.

        Tax Rate 3  # noqa: E501

        :param tax_rate3: The tax_rate3 of this ChargeItemItem.  # noqa: E501
        :type: str
        """

        self._tax_rate3 = tax_rate3

    @property
    def amount_input_as_ex_tax(self):
        """Gets the amount_input_as_ex_tax of this ChargeItemItem.  # noqa: E501

        Amount Input As Ex Tax  # noqa: E501

        :return: The amount_input_as_ex_tax of this ChargeItemItem.  # noqa: E501
        :rtype: bool
        """
        return self._amount_input_as_ex_tax

    @amount_input_as_ex_tax.setter
    def amount_input_as_ex_tax(self, amount_input_as_ex_tax):
        """Sets the amount_input_as_ex_tax of this ChargeItemItem.

        Amount Input As Ex Tax  # noqa: E501

        :param amount_input_as_ex_tax: The amount_input_as_ex_tax of this ChargeItemItem.  # noqa: E501
        :type: bool
        """

        self._amount_input_as_ex_tax = amount_input_as_ex_tax

    @property
    def tax_order_enum(self):
        """Gets the tax_order_enum of this ChargeItemItem.  # noqa: E501

        Tax Order  # noqa: E501

        :return: The tax_order_enum of this ChargeItemItem.  # noqa: E501
        :rtype: str
        """
        return self._tax_order_enum

    @tax_order_enum.setter
    def tax_order_enum(self, tax_order_enum):
        """Sets the tax_order_enum of this ChargeItemItem.

        Tax Order  # noqa: E501

        :param tax_order_enum: The tax_order_enum of this ChargeItemItem.  # noqa: E501
        :type: str
        """

        self._tax_order_enum = tax_order_enum

    @property
    def tax_category_enum(self):
        """Gets the tax_category_enum of this ChargeItemItem.  # noqa: E501

        Tax Category  # noqa: E501

        :return: The tax_category_enum of this ChargeItemItem.  # noqa: E501
        :rtype: str
        """
        return self._tax_category_enum

    @tax_category_enum.setter
    def tax_category_enum(self, tax_category_enum):
        """Sets the tax_category_enum of this ChargeItemItem.

        Tax Category  # noqa: E501

        :param tax_category_enum: The tax_category_enum of this ChargeItemItem.  # noqa: E501
        :type: str
        """

        self._tax_category_enum = tax_category_enum

    @property
    def unearned_income_charge_item_id(self):
        """Gets the unearned_income_charge_item_id of this ChargeItemItem.  # noqa: E501

        Unearned Income Charge Item  # noqa: E501

        :return: The unearned_income_charge_item_id of this ChargeItemItem.  # noqa: E501
        :rtype: int
        """
        return self._unearned_income_charge_item_id

    @unearned_income_charge_item_id.setter
    def unearned_income_charge_item_id(self, unearned_income_charge_item_id):
        """Sets the unearned_income_charge_item_id of this ChargeItemItem.

        Unearned Income Charge Item  # noqa: E501

        :param unearned_income_charge_item_id: The unearned_income_charge_item_id of this ChargeItemItem.  # noqa: E501
        :type: int
        """

        self._unearned_income_charge_item_id = unearned_income_charge_item_id

    @property
    def disputable(self):
        """Gets the disputable of this ChargeItemItem.  # noqa: E501

        Disputable  # noqa: E501

        :return: The disputable of this ChargeItemItem.  # noqa: E501
        :rtype: bool
        """
        return self._disputable

    @disputable.setter
    def disputable(self, disputable):
        """Sets the disputable of this ChargeItemItem.

        Disputable  # noqa: E501

        :param disputable: The disputable of this ChargeItemItem.  # noqa: E501
        :type: bool
        """

        self._disputable = disputable

    @property
    def custom_bit1(self):
        """Gets the custom_bit1 of this ChargeItemItem.  # noqa: E501

        Custom Flag 1  # noqa: E501

        :return: The custom_bit1 of this ChargeItemItem.  # noqa: E501
        :rtype: bool
        """
        return self._custom_bit1

    @custom_bit1.setter
    def custom_bit1(self, custom_bit1):
        """Sets the custom_bit1 of this ChargeItemItem.

        Custom Flag 1  # noqa: E501

        :param custom_bit1: The custom_bit1 of this ChargeItemItem.  # noqa: E501
        :type: bool
        """

        self._custom_bit1 = custom_bit1

    @property
    def custom_bit2(self):
        """Gets the custom_bit2 of this ChargeItemItem.  # noqa: E501

        Custom Flag 2  # noqa: E501

        :return: The custom_bit2 of this ChargeItemItem.  # noqa: E501
        :rtype: bool
        """
        return self._custom_bit2

    @custom_bit2.setter
    def custom_bit2(self, custom_bit2):
        """Sets the custom_bit2 of this ChargeItemItem.

        Custom Flag 2  # noqa: E501

        :param custom_bit2: The custom_bit2 of this ChargeItemItem.  # noqa: E501
        :type: bool
        """

        self._custom_bit2 = custom_bit2

    @property
    def custom_string1(self):
        """Gets the custom_string1 of this ChargeItemItem.  # noqa: E501

        Custom String 1  # noqa: E501

        :return: The custom_string1 of this ChargeItemItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string1

    @custom_string1.setter
    def custom_string1(self, custom_string1):
        """Sets the custom_string1 of this ChargeItemItem.

        Custom String 1  # noqa: E501

        :param custom_string1: The custom_string1 of this ChargeItemItem.  # noqa: E501
        :type: str
        """
        if custom_string1 is not None and len(custom_string1) > 50:
            raise ValueError("Invalid value for `custom_string1`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string1 = custom_string1

    @property
    def custom_string2(self):
        """Gets the custom_string2 of this ChargeItemItem.  # noqa: E501

        Custom String 2  # noqa: E501

        :return: The custom_string2 of this ChargeItemItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string2

    @custom_string2.setter
    def custom_string2(self, custom_string2):
        """Sets the custom_string2 of this ChargeItemItem.

        Custom String 2  # noqa: E501

        :param custom_string2: The custom_string2 of this ChargeItemItem.  # noqa: E501
        :type: str
        """
        if custom_string2 is not None and len(custom_string2) > 50:
            raise ValueError("Invalid value for `custom_string2`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string2 = custom_string2

    @property
    def custom_string3(self):
        """Gets the custom_string3 of this ChargeItemItem.  # noqa: E501

        Custom String 3  # noqa: E501

        :return: The custom_string3 of this ChargeItemItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string3

    @custom_string3.setter
    def custom_string3(self, custom_string3):
        """Sets the custom_string3 of this ChargeItemItem.

        Custom String 3  # noqa: E501

        :param custom_string3: The custom_string3 of this ChargeItemItem.  # noqa: E501
        :type: str
        """
        if custom_string3 is not None and len(custom_string3) > 50:
            raise ValueError("Invalid value for `custom_string3`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string3 = custom_string3

    @property
    def custom_string4(self):
        """Gets the custom_string4 of this ChargeItemItem.  # noqa: E501

        Custom String 4  # noqa: E501

        :return: The custom_string4 of this ChargeItemItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string4

    @custom_string4.setter
    def custom_string4(self, custom_string4):
        """Sets the custom_string4 of this ChargeItemItem.

        Custom String 4  # noqa: E501

        :param custom_string4: The custom_string4 of this ChargeItemItem.  # noqa: E501
        :type: str
        """
        if custom_string4 is not None and len(custom_string4) > 50:
            raise ValueError("Invalid value for `custom_string4`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string4 = custom_string4

    @property
    def custom_string5(self):
        """Gets the custom_string5 of this ChargeItemItem.  # noqa: E501

        Custom String 5  # noqa: E501

        :return: The custom_string5 of this ChargeItemItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string5

    @custom_string5.setter
    def custom_string5(self, custom_string5):
        """Sets the custom_string5 of this ChargeItemItem.

        Custom String 5  # noqa: E501

        :param custom_string5: The custom_string5 of this ChargeItemItem.  # noqa: E501
        :type: str
        """
        if custom_string5 is not None and len(custom_string5) > 50:
            raise ValueError("Invalid value for `custom_string5`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string5 = custom_string5

    @property
    def custom_string6(self):
        """Gets the custom_string6 of this ChargeItemItem.  # noqa: E501

        Custom String 6  # noqa: E501

        :return: The custom_string6 of this ChargeItemItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string6

    @custom_string6.setter
    def custom_string6(self, custom_string6):
        """Sets the custom_string6 of this ChargeItemItem.

        Custom String 6  # noqa: E501

        :param custom_string6: The custom_string6 of this ChargeItemItem.  # noqa: E501
        :type: str
        """
        if custom_string6 is not None and len(custom_string6) > 50:
            raise ValueError("Invalid value for `custom_string6`, length must be less than or equal to `50`")  # noqa: E501

        self._custom_string6 = custom_string6

    @property
    def custom_date1(self):
        """Gets the custom_date1 of this ChargeItemItem.  # noqa: E501

        Custom Date 1  # noqa: E501

        :return: The custom_date1 of this ChargeItemItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_date1

    @custom_date1.setter
    def custom_date1(self, custom_date1):
        """Sets the custom_date1 of this ChargeItemItem.

        Custom Date 1  # noqa: E501

        :param custom_date1: The custom_date1 of this ChargeItemItem.  # noqa: E501
        :type: str
        """

        self._custom_date1 = custom_date1

    @property
    def custom_date2(self):
        """Gets the custom_date2 of this ChargeItemItem.  # noqa: E501

        Custom Date 2  # noqa: E501

        :return: The custom_date2 of this ChargeItemItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_date2

    @custom_date2.setter
    def custom_date2(self, custom_date2):
        """Sets the custom_date2 of this ChargeItemItem.

        Custom Date 2  # noqa: E501

        :param custom_date2: The custom_date2 of this ChargeItemItem.  # noqa: E501
        :type: str
        """

        self._custom_date2 = custom_date2

    @property
    def date_modified(self):
        """Gets the date_modified of this ChargeItemItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this ChargeItemItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this ChargeItemItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this ChargeItemItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ChargeItemItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
