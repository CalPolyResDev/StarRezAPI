# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class WaitListEntryApplicationItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'wait_list_entry_application_id': 'int',
        'wait_list_id': 'int',
        'entry_application_id': 'int',
        'wait_list_order': 'str',
        'number_of_bedrooms': 'str',
        'number_of_bathrooms': 'str',
        'rent_amount': 'str',
        'active': 'bool',
        'comments': 'str',
        'date_modified': 'str'
    }

    attribute_map = {
        'wait_list_entry_application_id': 'WaitListEntryApplicationID',
        'wait_list_id': 'WaitListID',
        'entry_application_id': 'EntryApplicationID',
        'wait_list_order': 'WaitListOrder',
        'number_of_bedrooms': 'NumberOfBedrooms',
        'number_of_bathrooms': 'NumberOfBathrooms',
        'rent_amount': 'RentAmount',
        'active': 'Active',
        'comments': 'Comments',
        'date_modified': 'DateModified'
    }

    def __init__(self, wait_list_entry_application_id=None, wait_list_id=None, entry_application_id=None, wait_list_order=None, number_of_bedrooms=None, number_of_bathrooms=None, rent_amount=None, active=None, comments=None, date_modified=None):  # noqa: E501
        """WaitListEntryApplicationItem - a model defined in Swagger"""  # noqa: E501

        self._wait_list_entry_application_id = None
        self._wait_list_id = None
        self._entry_application_id = None
        self._wait_list_order = None
        self._number_of_bedrooms = None
        self._number_of_bathrooms = None
        self._rent_amount = None
        self._active = None
        self._comments = None
        self._date_modified = None
        self.discriminator = None

        if wait_list_entry_application_id is not None:
            self.wait_list_entry_application_id = wait_list_entry_application_id
        if wait_list_id is not None:
            self.wait_list_id = wait_list_id
        if entry_application_id is not None:
            self.entry_application_id = entry_application_id
        if wait_list_order is not None:
            self.wait_list_order = wait_list_order
        if number_of_bedrooms is not None:
            self.number_of_bedrooms = number_of_bedrooms
        if number_of_bathrooms is not None:
            self.number_of_bathrooms = number_of_bathrooms
        if rent_amount is not None:
            self.rent_amount = rent_amount
        if active is not None:
            self.active = active
        if comments is not None:
            self.comments = comments
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def wait_list_entry_application_id(self):
        """Gets the wait_list_entry_application_id of this WaitListEntryApplicationItem.  # noqa: E501

        Wait List Entry Application  # noqa: E501

        :return: The wait_list_entry_application_id of this WaitListEntryApplicationItem.  # noqa: E501
        :rtype: int
        """
        return self._wait_list_entry_application_id

    @wait_list_entry_application_id.setter
    def wait_list_entry_application_id(self, wait_list_entry_application_id):
        """Sets the wait_list_entry_application_id of this WaitListEntryApplicationItem.

        Wait List Entry Application  # noqa: E501

        :param wait_list_entry_application_id: The wait_list_entry_application_id of this WaitListEntryApplicationItem.  # noqa: E501
        :type: int
        """

        self._wait_list_entry_application_id = wait_list_entry_application_id

    @property
    def wait_list_id(self):
        """Gets the wait_list_id of this WaitListEntryApplicationItem.  # noqa: E501

        Wait List  # noqa: E501

        :return: The wait_list_id of this WaitListEntryApplicationItem.  # noqa: E501
        :rtype: int
        """
        return self._wait_list_id

    @wait_list_id.setter
    def wait_list_id(self, wait_list_id):
        """Sets the wait_list_id of this WaitListEntryApplicationItem.

        Wait List  # noqa: E501

        :param wait_list_id: The wait_list_id of this WaitListEntryApplicationItem.  # noqa: E501
        :type: int
        """

        self._wait_list_id = wait_list_id

    @property
    def entry_application_id(self):
        """Gets the entry_application_id of this WaitListEntryApplicationItem.  # noqa: E501

        Entry Application  # noqa: E501

        :return: The entry_application_id of this WaitListEntryApplicationItem.  # noqa: E501
        :rtype: int
        """
        return self._entry_application_id

    @entry_application_id.setter
    def entry_application_id(self, entry_application_id):
        """Sets the entry_application_id of this WaitListEntryApplicationItem.

        Entry Application  # noqa: E501

        :param entry_application_id: The entry_application_id of this WaitListEntryApplicationItem.  # noqa: E501
        :type: int
        """

        self._entry_application_id = entry_application_id

    @property
    def wait_list_order(self):
        """Gets the wait_list_order of this WaitListEntryApplicationItem.  # noqa: E501

        Wait List Order  # noqa: E501

        :return: The wait_list_order of this WaitListEntryApplicationItem.  # noqa: E501
        :rtype: str
        """
        return self._wait_list_order

    @wait_list_order.setter
    def wait_list_order(self, wait_list_order):
        """Sets the wait_list_order of this WaitListEntryApplicationItem.

        Wait List Order  # noqa: E501

        :param wait_list_order: The wait_list_order of this WaitListEntryApplicationItem.  # noqa: E501
        :type: str
        """

        self._wait_list_order = wait_list_order

    @property
    def number_of_bedrooms(self):
        """Gets the number_of_bedrooms of this WaitListEntryApplicationItem.  # noqa: E501

        Number Of Bedrooms  # noqa: E501

        :return: The number_of_bedrooms of this WaitListEntryApplicationItem.  # noqa: E501
        :rtype: str
        """
        return self._number_of_bedrooms

    @number_of_bedrooms.setter
    def number_of_bedrooms(self, number_of_bedrooms):
        """Sets the number_of_bedrooms of this WaitListEntryApplicationItem.

        Number Of Bedrooms  # noqa: E501

        :param number_of_bedrooms: The number_of_bedrooms of this WaitListEntryApplicationItem.  # noqa: E501
        :type: str
        """

        self._number_of_bedrooms = number_of_bedrooms

    @property
    def number_of_bathrooms(self):
        """Gets the number_of_bathrooms of this WaitListEntryApplicationItem.  # noqa: E501

        Number Of Bathrooms  # noqa: E501

        :return: The number_of_bathrooms of this WaitListEntryApplicationItem.  # noqa: E501
        :rtype: str
        """
        return self._number_of_bathrooms

    @number_of_bathrooms.setter
    def number_of_bathrooms(self, number_of_bathrooms):
        """Sets the number_of_bathrooms of this WaitListEntryApplicationItem.

        Number Of Bathrooms  # noqa: E501

        :param number_of_bathrooms: The number_of_bathrooms of this WaitListEntryApplicationItem.  # noqa: E501
        :type: str
        """

        self._number_of_bathrooms = number_of_bathrooms

    @property
    def rent_amount(self):
        """Gets the rent_amount of this WaitListEntryApplicationItem.  # noqa: E501

        Rent Amount  # noqa: E501

        :return: The rent_amount of this WaitListEntryApplicationItem.  # noqa: E501
        :rtype: str
        """
        return self._rent_amount

    @rent_amount.setter
    def rent_amount(self, rent_amount):
        """Sets the rent_amount of this WaitListEntryApplicationItem.

        Rent Amount  # noqa: E501

        :param rent_amount: The rent_amount of this WaitListEntryApplicationItem.  # noqa: E501
        :type: str
        """

        self._rent_amount = rent_amount

    @property
    def active(self):
        """Gets the active of this WaitListEntryApplicationItem.  # noqa: E501

        Active  # noqa: E501

        :return: The active of this WaitListEntryApplicationItem.  # noqa: E501
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this WaitListEntryApplicationItem.

        Active  # noqa: E501

        :param active: The active of this WaitListEntryApplicationItem.  # noqa: E501
        :type: bool
        """

        self._active = active

    @property
    def comments(self):
        """Gets the comments of this WaitListEntryApplicationItem.  # noqa: E501

        Comments  # noqa: E501

        :return: The comments of this WaitListEntryApplicationItem.  # noqa: E501
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this WaitListEntryApplicationItem.

        Comments  # noqa: E501

        :param comments: The comments of this WaitListEntryApplicationItem.  # noqa: E501
        :type: str
        """
        if comments is not None and len(comments) > 1000:
            raise ValueError("Invalid value for `comments`, length must be less than or equal to `1000`")  # noqa: E501

        self._comments = comments

    @property
    def date_modified(self):
        """Gets the date_modified of this WaitListEntryApplicationItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this WaitListEntryApplicationItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this WaitListEntryApplicationItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this WaitListEntryApplicationItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, WaitListEntryApplicationItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
