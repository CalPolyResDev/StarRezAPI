# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class AutoAllocateRunItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'auto_allocate_run_id': 'int',
        'description': 'str',
        'auto_allocate_object': 'str',
        'auto_allocate_results': 'str',
        'last_ran_security_user_id': 'int',
        'last_ran_date': 'str',
        'security_user_id': 'int',
        'created_by_security_user_id': 'int',
        'enabled': 'bool',
        'override_entry_i_ds': 'str',
        'is_committed': 'bool',
        'date_created': 'datetime',
        'date_modified': 'str'
    }

    attribute_map = {
        'auto_allocate_run_id': 'AutoAllocateRunID',
        'description': 'Description',
        'auto_allocate_object': 'AutoAllocateObject',
        'auto_allocate_results': 'AutoAllocateResults',
        'last_ran_security_user_id': 'LastRan_SecurityUserID',
        'last_ran_date': 'LastRanDate',
        'security_user_id': 'SecurityUserID',
        'created_by_security_user_id': 'CreatedBy_SecurityUserID',
        'enabled': 'Enabled',
        'override_entry_i_ds': 'OverrideEntryIDs',
        'is_committed': 'IsCommitted',
        'date_created': 'DateCreated',
        'date_modified': 'DateModified'
    }

    def __init__(self, auto_allocate_run_id=None, description=None, auto_allocate_object=None, auto_allocate_results=None, last_ran_security_user_id=None, last_ran_date=None, security_user_id=None, created_by_security_user_id=None, enabled=None, override_entry_i_ds=None, is_committed=None, date_created=None, date_modified=None):  # noqa: E501
        """AutoAllocateRunItem - a model defined in Swagger"""  # noqa: E501

        self._auto_allocate_run_id = None
        self._description = None
        self._auto_allocate_object = None
        self._auto_allocate_results = None
        self._last_ran_security_user_id = None
        self._last_ran_date = None
        self._security_user_id = None
        self._created_by_security_user_id = None
        self._enabled = None
        self._override_entry_i_ds = None
        self._is_committed = None
        self._date_created = None
        self._date_modified = None
        self.discriminator = None

        if auto_allocate_run_id is not None:
            self.auto_allocate_run_id = auto_allocate_run_id
        if description is not None:
            self.description = description
        if auto_allocate_object is not None:
            self.auto_allocate_object = auto_allocate_object
        if auto_allocate_results is not None:
            self.auto_allocate_results = auto_allocate_results
        if last_ran_security_user_id is not None:
            self.last_ran_security_user_id = last_ran_security_user_id
        if last_ran_date is not None:
            self.last_ran_date = last_ran_date
        if security_user_id is not None:
            self.security_user_id = security_user_id
        if created_by_security_user_id is not None:
            self.created_by_security_user_id = created_by_security_user_id
        if enabled is not None:
            self.enabled = enabled
        if override_entry_i_ds is not None:
            self.override_entry_i_ds = override_entry_i_ds
        if is_committed is not None:
            self.is_committed = is_committed
        if date_created is not None:
            self.date_created = date_created
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def auto_allocate_run_id(self):
        """Gets the auto_allocate_run_id of this AutoAllocateRunItem.  # noqa: E501

        Auto Allocate Run  # noqa: E501

        :return: The auto_allocate_run_id of this AutoAllocateRunItem.  # noqa: E501
        :rtype: int
        """
        return self._auto_allocate_run_id

    @auto_allocate_run_id.setter
    def auto_allocate_run_id(self, auto_allocate_run_id):
        """Sets the auto_allocate_run_id of this AutoAllocateRunItem.

        Auto Allocate Run  # noqa: E501

        :param auto_allocate_run_id: The auto_allocate_run_id of this AutoAllocateRunItem.  # noqa: E501
        :type: int
        """

        self._auto_allocate_run_id = auto_allocate_run_id

    @property
    def description(self):
        """Gets the description of this AutoAllocateRunItem.  # noqa: E501

        Description  # noqa: E501

        :return: The description of this AutoAllocateRunItem.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AutoAllocateRunItem.

        Description  # noqa: E501

        :param description: The description of this AutoAllocateRunItem.  # noqa: E501
        :type: str
        """
        if description is not None and len(description) > 50:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `50`")  # noqa: E501

        self._description = description

    @property
    def auto_allocate_object(self):
        """Gets the auto_allocate_object of this AutoAllocateRunItem.  # noqa: E501

        Auto Allocate Object  # noqa: E501

        :return: The auto_allocate_object of this AutoAllocateRunItem.  # noqa: E501
        :rtype: str
        """
        return self._auto_allocate_object

    @auto_allocate_object.setter
    def auto_allocate_object(self, auto_allocate_object):
        """Sets the auto_allocate_object of this AutoAllocateRunItem.

        Auto Allocate Object  # noqa: E501

        :param auto_allocate_object: The auto_allocate_object of this AutoAllocateRunItem.  # noqa: E501
        :type: str
        """

        self._auto_allocate_object = auto_allocate_object

    @property
    def auto_allocate_results(self):
        """Gets the auto_allocate_results of this AutoAllocateRunItem.  # noqa: E501

        Auto Allocate Results  # noqa: E501

        :return: The auto_allocate_results of this AutoAllocateRunItem.  # noqa: E501
        :rtype: str
        """
        return self._auto_allocate_results

    @auto_allocate_results.setter
    def auto_allocate_results(self, auto_allocate_results):
        """Sets the auto_allocate_results of this AutoAllocateRunItem.

        Auto Allocate Results  # noqa: E501

        :param auto_allocate_results: The auto_allocate_results of this AutoAllocateRunItem.  # noqa: E501
        :type: str
        """

        self._auto_allocate_results = auto_allocate_results

    @property
    def last_ran_security_user_id(self):
        """Gets the last_ran_security_user_id of this AutoAllocateRunItem.  # noqa: E501

        Last Ran Security User  # noqa: E501

        :return: The last_ran_security_user_id of this AutoAllocateRunItem.  # noqa: E501
        :rtype: int
        """
        return self._last_ran_security_user_id

    @last_ran_security_user_id.setter
    def last_ran_security_user_id(self, last_ran_security_user_id):
        """Sets the last_ran_security_user_id of this AutoAllocateRunItem.

        Last Ran Security User  # noqa: E501

        :param last_ran_security_user_id: The last_ran_security_user_id of this AutoAllocateRunItem.  # noqa: E501
        :type: int
        """

        self._last_ran_security_user_id = last_ran_security_user_id

    @property
    def last_ran_date(self):
        """Gets the last_ran_date of this AutoAllocateRunItem.  # noqa: E501

        Last Ran Date  # noqa: E501

        :return: The last_ran_date of this AutoAllocateRunItem.  # noqa: E501
        :rtype: str
        """
        return self._last_ran_date

    @last_ran_date.setter
    def last_ran_date(self, last_ran_date):
        """Sets the last_ran_date of this AutoAllocateRunItem.

        Last Ran Date  # noqa: E501

        :param last_ran_date: The last_ran_date of this AutoAllocateRunItem.  # noqa: E501
        :type: str
        """

        self._last_ran_date = last_ran_date

    @property
    def security_user_id(self):
        """Gets the security_user_id of this AutoAllocateRunItem.  # noqa: E501

        Security User  # noqa: E501

        :return: The security_user_id of this AutoAllocateRunItem.  # noqa: E501
        :rtype: int
        """
        return self._security_user_id

    @security_user_id.setter
    def security_user_id(self, security_user_id):
        """Sets the security_user_id of this AutoAllocateRunItem.

        Security User  # noqa: E501

        :param security_user_id: The security_user_id of this AutoAllocateRunItem.  # noqa: E501
        :type: int
        """

        self._security_user_id = security_user_id

    @property
    def created_by_security_user_id(self):
        """Gets the created_by_security_user_id of this AutoAllocateRunItem.  # noqa: E501

        Created By Security User  # noqa: E501

        :return: The created_by_security_user_id of this AutoAllocateRunItem.  # noqa: E501
        :rtype: int
        """
        return self._created_by_security_user_id

    @created_by_security_user_id.setter
    def created_by_security_user_id(self, created_by_security_user_id):
        """Sets the created_by_security_user_id of this AutoAllocateRunItem.

        Created By Security User  # noqa: E501

        :param created_by_security_user_id: The created_by_security_user_id of this AutoAllocateRunItem.  # noqa: E501
        :type: int
        """

        self._created_by_security_user_id = created_by_security_user_id

    @property
    def enabled(self):
        """Gets the enabled of this AutoAllocateRunItem.  # noqa: E501

        Enabled  # noqa: E501

        :return: The enabled of this AutoAllocateRunItem.  # noqa: E501
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this AutoAllocateRunItem.

        Enabled  # noqa: E501

        :param enabled: The enabled of this AutoAllocateRunItem.  # noqa: E501
        :type: bool
        """

        self._enabled = enabled

    @property
    def override_entry_i_ds(self):
        """Gets the override_entry_i_ds of this AutoAllocateRunItem.  # noqa: E501

        Override Entry IDs  # noqa: E501

        :return: The override_entry_i_ds of this AutoAllocateRunItem.  # noqa: E501
        :rtype: str
        """
        return self._override_entry_i_ds

    @override_entry_i_ds.setter
    def override_entry_i_ds(self, override_entry_i_ds):
        """Sets the override_entry_i_ds of this AutoAllocateRunItem.

        Override Entry IDs  # noqa: E501

        :param override_entry_i_ds: The override_entry_i_ds of this AutoAllocateRunItem.  # noqa: E501
        :type: str
        """

        self._override_entry_i_ds = override_entry_i_ds

    @property
    def is_committed(self):
        """Gets the is_committed of this AutoAllocateRunItem.  # noqa: E501

        Is Committed  # noqa: E501

        :return: The is_committed of this AutoAllocateRunItem.  # noqa: E501
        :rtype: bool
        """
        return self._is_committed

    @is_committed.setter
    def is_committed(self, is_committed):
        """Sets the is_committed of this AutoAllocateRunItem.

        Is Committed  # noqa: E501

        :param is_committed: The is_committed of this AutoAllocateRunItem.  # noqa: E501
        :type: bool
        """

        self._is_committed = is_committed

    @property
    def date_created(self):
        """Gets the date_created of this AutoAllocateRunItem.  # noqa: E501

        Date Created  # noqa: E501

        :return: The date_created of this AutoAllocateRunItem.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this AutoAllocateRunItem.

        Date Created  # noqa: E501

        :param date_created: The date_created of this AutoAllocateRunItem.  # noqa: E501
        :type: datetime
        """

        self._date_created = date_created

    @property
    def date_modified(self):
        """Gets the date_modified of this AutoAllocateRunItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this AutoAllocateRunItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this AutoAllocateRunItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this AutoAllocateRunItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AutoAllocateRunItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
