# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class PhoneChargeTypeCallTypeItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'phone_charge_type_call_type_id': 'int',
        'phone_charge_type_id': 'int',
        'call_type_enum': 'str',
        'record_type_enum': 'str',
        'charge_item_id': 'int',
        'cost1': 'str',
        'markup1': 'int',
        'cost2': 'str',
        'markup2': 'int',
        'cost3': 'str',
        'markup3': 'int',
        'cost4': 'str',
        'markup4': 'int',
        'cost5': 'str',
        'markup5': 'int',
        'round': 'bool',
        'round_to': 'str',
        'fixed_charge': 'str',
        'max_charge': 'str',
        'date_modified': 'str'
    }

    attribute_map = {
        'phone_charge_type_call_type_id': 'PhoneChargeTypeCallTypeID',
        'phone_charge_type_id': 'PhoneChargeTypeID',
        'call_type_enum': 'CallTypeEnum',
        'record_type_enum': 'RecordTypeEnum',
        'charge_item_id': 'ChargeItemID',
        'cost1': 'Cost1',
        'markup1': 'Markup1',
        'cost2': 'Cost2',
        'markup2': 'Markup2',
        'cost3': 'Cost3',
        'markup3': 'Markup3',
        'cost4': 'Cost4',
        'markup4': 'Markup4',
        'cost5': 'Cost5',
        'markup5': 'Markup5',
        'round': 'Round',
        'round_to': 'RoundTo',
        'fixed_charge': 'FixedCharge',
        'max_charge': 'MaxCharge',
        'date_modified': 'DateModified'
    }

    def __init__(self, phone_charge_type_call_type_id=None, phone_charge_type_id=None, call_type_enum=None, record_type_enum=None, charge_item_id=None, cost1=None, markup1=None, cost2=None, markup2=None, cost3=None, markup3=None, cost4=None, markup4=None, cost5=None, markup5=None, round=None, round_to=None, fixed_charge=None, max_charge=None, date_modified=None):  # noqa: E501
        """PhoneChargeTypeCallTypeItem - a model defined in Swagger"""  # noqa: E501

        self._phone_charge_type_call_type_id = None
        self._phone_charge_type_id = None
        self._call_type_enum = None
        self._record_type_enum = None
        self._charge_item_id = None
        self._cost1 = None
        self._markup1 = None
        self._cost2 = None
        self._markup2 = None
        self._cost3 = None
        self._markup3 = None
        self._cost4 = None
        self._markup4 = None
        self._cost5 = None
        self._markup5 = None
        self._round = None
        self._round_to = None
        self._fixed_charge = None
        self._max_charge = None
        self._date_modified = None
        self.discriminator = None

        if phone_charge_type_call_type_id is not None:
            self.phone_charge_type_call_type_id = phone_charge_type_call_type_id
        if phone_charge_type_id is not None:
            self.phone_charge_type_id = phone_charge_type_id
        if call_type_enum is not None:
            self.call_type_enum = call_type_enum
        if record_type_enum is not None:
            self.record_type_enum = record_type_enum
        if charge_item_id is not None:
            self.charge_item_id = charge_item_id
        if cost1 is not None:
            self.cost1 = cost1
        if markup1 is not None:
            self.markup1 = markup1
        if cost2 is not None:
            self.cost2 = cost2
        if markup2 is not None:
            self.markup2 = markup2
        if cost3 is not None:
            self.cost3 = cost3
        if markup3 is not None:
            self.markup3 = markup3
        if cost4 is not None:
            self.cost4 = cost4
        if markup4 is not None:
            self.markup4 = markup4
        if cost5 is not None:
            self.cost5 = cost5
        if markup5 is not None:
            self.markup5 = markup5
        if round is not None:
            self.round = round
        if round_to is not None:
            self.round_to = round_to
        if fixed_charge is not None:
            self.fixed_charge = fixed_charge
        if max_charge is not None:
            self.max_charge = max_charge
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def phone_charge_type_call_type_id(self):
        """Gets the phone_charge_type_call_type_id of this PhoneChargeTypeCallTypeItem.  # noqa: E501

        Phone Charge Type Call Type  # noqa: E501

        :return: The phone_charge_type_call_type_id of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :rtype: int
        """
        return self._phone_charge_type_call_type_id

    @phone_charge_type_call_type_id.setter
    def phone_charge_type_call_type_id(self, phone_charge_type_call_type_id):
        """Sets the phone_charge_type_call_type_id of this PhoneChargeTypeCallTypeItem.

        Phone Charge Type Call Type  # noqa: E501

        :param phone_charge_type_call_type_id: The phone_charge_type_call_type_id of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :type: int
        """

        self._phone_charge_type_call_type_id = phone_charge_type_call_type_id

    @property
    def phone_charge_type_id(self):
        """Gets the phone_charge_type_id of this PhoneChargeTypeCallTypeItem.  # noqa: E501

        Phone Charge Type  # noqa: E501

        :return: The phone_charge_type_id of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :rtype: int
        """
        return self._phone_charge_type_id

    @phone_charge_type_id.setter
    def phone_charge_type_id(self, phone_charge_type_id):
        """Sets the phone_charge_type_id of this PhoneChargeTypeCallTypeItem.

        Phone Charge Type  # noqa: E501

        :param phone_charge_type_id: The phone_charge_type_id of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :type: int
        """

        self._phone_charge_type_id = phone_charge_type_id

    @property
    def call_type_enum(self):
        """Gets the call_type_enum of this PhoneChargeTypeCallTypeItem.  # noqa: E501

        Call Type  # noqa: E501

        :return: The call_type_enum of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :rtype: str
        """
        return self._call_type_enum

    @call_type_enum.setter
    def call_type_enum(self, call_type_enum):
        """Sets the call_type_enum of this PhoneChargeTypeCallTypeItem.

        Call Type  # noqa: E501

        :param call_type_enum: The call_type_enum of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :type: str
        """

        self._call_type_enum = call_type_enum

    @property
    def record_type_enum(self):
        """Gets the record_type_enum of this PhoneChargeTypeCallTypeItem.  # noqa: E501

        Record Type  # noqa: E501

        :return: The record_type_enum of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :rtype: str
        """
        return self._record_type_enum

    @record_type_enum.setter
    def record_type_enum(self, record_type_enum):
        """Sets the record_type_enum of this PhoneChargeTypeCallTypeItem.

        Record Type  # noqa: E501

        :param record_type_enum: The record_type_enum of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :type: str
        """

        self._record_type_enum = record_type_enum

    @property
    def charge_item_id(self):
        """Gets the charge_item_id of this PhoneChargeTypeCallTypeItem.  # noqa: E501

        Charge Item  # noqa: E501

        :return: The charge_item_id of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :rtype: int
        """
        return self._charge_item_id

    @charge_item_id.setter
    def charge_item_id(self, charge_item_id):
        """Sets the charge_item_id of this PhoneChargeTypeCallTypeItem.

        Charge Item  # noqa: E501

        :param charge_item_id: The charge_item_id of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :type: int
        """

        self._charge_item_id = charge_item_id

    @property
    def cost1(self):
        """Gets the cost1 of this PhoneChargeTypeCallTypeItem.  # noqa: E501

        Cost 1  # noqa: E501

        :return: The cost1 of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :rtype: str
        """
        return self._cost1

    @cost1.setter
    def cost1(self, cost1):
        """Sets the cost1 of this PhoneChargeTypeCallTypeItem.

        Cost 1  # noqa: E501

        :param cost1: The cost1 of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :type: str
        """

        self._cost1 = cost1

    @property
    def markup1(self):
        """Gets the markup1 of this PhoneChargeTypeCallTypeItem.  # noqa: E501

        Markup 1  # noqa: E501

        :return: The markup1 of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :rtype: int
        """
        return self._markup1

    @markup1.setter
    def markup1(self, markup1):
        """Sets the markup1 of this PhoneChargeTypeCallTypeItem.

        Markup 1  # noqa: E501

        :param markup1: The markup1 of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :type: int
        """

        self._markup1 = markup1

    @property
    def cost2(self):
        """Gets the cost2 of this PhoneChargeTypeCallTypeItem.  # noqa: E501

        Cost 2  # noqa: E501

        :return: The cost2 of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :rtype: str
        """
        return self._cost2

    @cost2.setter
    def cost2(self, cost2):
        """Sets the cost2 of this PhoneChargeTypeCallTypeItem.

        Cost 2  # noqa: E501

        :param cost2: The cost2 of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :type: str
        """

        self._cost2 = cost2

    @property
    def markup2(self):
        """Gets the markup2 of this PhoneChargeTypeCallTypeItem.  # noqa: E501

        Markup 2  # noqa: E501

        :return: The markup2 of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :rtype: int
        """
        return self._markup2

    @markup2.setter
    def markup2(self, markup2):
        """Sets the markup2 of this PhoneChargeTypeCallTypeItem.

        Markup 2  # noqa: E501

        :param markup2: The markup2 of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :type: int
        """

        self._markup2 = markup2

    @property
    def cost3(self):
        """Gets the cost3 of this PhoneChargeTypeCallTypeItem.  # noqa: E501

        Cost 3  # noqa: E501

        :return: The cost3 of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :rtype: str
        """
        return self._cost3

    @cost3.setter
    def cost3(self, cost3):
        """Sets the cost3 of this PhoneChargeTypeCallTypeItem.

        Cost 3  # noqa: E501

        :param cost3: The cost3 of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :type: str
        """

        self._cost3 = cost3

    @property
    def markup3(self):
        """Gets the markup3 of this PhoneChargeTypeCallTypeItem.  # noqa: E501

        Markup 3  # noqa: E501

        :return: The markup3 of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :rtype: int
        """
        return self._markup3

    @markup3.setter
    def markup3(self, markup3):
        """Sets the markup3 of this PhoneChargeTypeCallTypeItem.

        Markup 3  # noqa: E501

        :param markup3: The markup3 of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :type: int
        """

        self._markup3 = markup3

    @property
    def cost4(self):
        """Gets the cost4 of this PhoneChargeTypeCallTypeItem.  # noqa: E501

        Cost 4  # noqa: E501

        :return: The cost4 of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :rtype: str
        """
        return self._cost4

    @cost4.setter
    def cost4(self, cost4):
        """Sets the cost4 of this PhoneChargeTypeCallTypeItem.

        Cost 4  # noqa: E501

        :param cost4: The cost4 of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :type: str
        """

        self._cost4 = cost4

    @property
    def markup4(self):
        """Gets the markup4 of this PhoneChargeTypeCallTypeItem.  # noqa: E501

        Markup 4  # noqa: E501

        :return: The markup4 of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :rtype: int
        """
        return self._markup4

    @markup4.setter
    def markup4(self, markup4):
        """Sets the markup4 of this PhoneChargeTypeCallTypeItem.

        Markup 4  # noqa: E501

        :param markup4: The markup4 of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :type: int
        """

        self._markup4 = markup4

    @property
    def cost5(self):
        """Gets the cost5 of this PhoneChargeTypeCallTypeItem.  # noqa: E501

        Cost 5  # noqa: E501

        :return: The cost5 of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :rtype: str
        """
        return self._cost5

    @cost5.setter
    def cost5(self, cost5):
        """Sets the cost5 of this PhoneChargeTypeCallTypeItem.

        Cost 5  # noqa: E501

        :param cost5: The cost5 of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :type: str
        """

        self._cost5 = cost5

    @property
    def markup5(self):
        """Gets the markup5 of this PhoneChargeTypeCallTypeItem.  # noqa: E501

        Markup 5  # noqa: E501

        :return: The markup5 of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :rtype: int
        """
        return self._markup5

    @markup5.setter
    def markup5(self, markup5):
        """Sets the markup5 of this PhoneChargeTypeCallTypeItem.

        Markup 5  # noqa: E501

        :param markup5: The markup5 of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :type: int
        """

        self._markup5 = markup5

    @property
    def round(self):
        """Gets the round of this PhoneChargeTypeCallTypeItem.  # noqa: E501

        Round  # noqa: E501

        :return: The round of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :rtype: bool
        """
        return self._round

    @round.setter
    def round(self, round):
        """Sets the round of this PhoneChargeTypeCallTypeItem.

        Round  # noqa: E501

        :param round: The round of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :type: bool
        """

        self._round = round

    @property
    def round_to(self):
        """Gets the round_to of this PhoneChargeTypeCallTypeItem.  # noqa: E501

        Round To  # noqa: E501

        :return: The round_to of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :rtype: str
        """
        return self._round_to

    @round_to.setter
    def round_to(self, round_to):
        """Sets the round_to of this PhoneChargeTypeCallTypeItem.

        Round To  # noqa: E501

        :param round_to: The round_to of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :type: str
        """

        self._round_to = round_to

    @property
    def fixed_charge(self):
        """Gets the fixed_charge of this PhoneChargeTypeCallTypeItem.  # noqa: E501

        Fixed Charge  # noqa: E501

        :return: The fixed_charge of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :rtype: str
        """
        return self._fixed_charge

    @fixed_charge.setter
    def fixed_charge(self, fixed_charge):
        """Sets the fixed_charge of this PhoneChargeTypeCallTypeItem.

        Fixed Charge  # noqa: E501

        :param fixed_charge: The fixed_charge of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :type: str
        """

        self._fixed_charge = fixed_charge

    @property
    def max_charge(self):
        """Gets the max_charge of this PhoneChargeTypeCallTypeItem.  # noqa: E501

        Max Charge  # noqa: E501

        :return: The max_charge of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :rtype: str
        """
        return self._max_charge

    @max_charge.setter
    def max_charge(self, max_charge):
        """Sets the max_charge of this PhoneChargeTypeCallTypeItem.

        Max Charge  # noqa: E501

        :param max_charge: The max_charge of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :type: str
        """

        self._max_charge = max_charge

    @property
    def date_modified(self):
        """Gets the date_modified of this PhoneChargeTypeCallTypeItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this PhoneChargeTypeCallTypeItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this PhoneChargeTypeCallTypeItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PhoneChargeTypeCallTypeItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
