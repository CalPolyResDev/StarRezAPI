# coding: utf-8

"""
    StarRez API

    This is a way to connect with the StarRez API. We are not the developers of the StarRez API, we are just an organization that uses it and wanted a better way to connect to it.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: resdev@calpoly.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class BookingItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'booking_id': 'int',
        'room_space_id': 'int',
        'entry_id': 'int',
        'entry_status_enum': 'str',
        'room_type_id': 'int',
        'group_id': 'int',
        'room_location_id': 'int',
        'start_booking_reason_id': 'int',
        'end_booking_reason_id': 'int',
        'booking_type_id': 'int',
        'room_rate_id': 'int',
        'booking_link_type_enum': 'str',
        'term_session_id': 'int',
        'housekeeping_id': 'int',
        'entry_invitation_id': 'int',
        'room_location_fixed': 'bool',
        'room_rate_amount': 'str',
        'check_in_date': 'date',
        'check_out_date': 'date',
        'eta': 'str',
        'etd': 'str',
        'check_in_date_actual': 'str',
        'check_out_date_actual': 'str',
        'date_charged_to': 'date',
        'contract_date_start': 'date',
        'contract_date_end': 'date',
        'resv_charge_to_entry': 'bool',
        'number_of_guests': 'str',
        'number_of_guests_free': 'str',
        'number_of_children': 'str',
        'number_of_children_free': 'str',
        'special_requirement': 'str',
        'comments': 'str',
        'date_billed': 'str',
        'custom_bit1': 'bool',
        'custom_bit2': 'bool',
        'custom_bit3': 'bool',
        'custom_bit4': 'bool',
        'custom_string1': 'str',
        'custom_string2': 'str',
        'custom_string3': 'str',
        'custom_string4': 'str',
        'custom_string5': 'str',
        'custom_string6': 'str',
        'custom_string7': 'str',
        'custom_string8': 'str',
        'custom_string9': 'str',
        'custom_string10': 'str',
        'custom_date1': 'str',
        'custom_date2': 'str',
        'custom_date3': 'str',
        'custom_date4': 'str',
        'security_user_id': 'int',
        'date_modified_billing': 'str',
        'date_created': 'datetime',
        'timestamp': 'str',
        'date_modified': 'str'
    }

    attribute_map = {
        'booking_id': 'BookingID',
        'room_space_id': 'RoomSpaceID',
        'entry_id': 'EntryID',
        'entry_status_enum': 'EntryStatusEnum',
        'room_type_id': 'RoomTypeID',
        'group_id': 'GroupID',
        'room_location_id': 'RoomLocationID',
        'start_booking_reason_id': 'Start_BookingReasonID',
        'end_booking_reason_id': 'End_BookingReasonID',
        'booking_type_id': 'BookingTypeID',
        'room_rate_id': 'RoomRateID',
        'booking_link_type_enum': 'BookingLinkTypeEnum',
        'term_session_id': 'TermSessionID',
        'housekeeping_id': 'HousekeepingID',
        'entry_invitation_id': 'EntryInvitationID',
        'room_location_fixed': 'RoomLocationFixed',
        'room_rate_amount': 'RoomRateAmount',
        'check_in_date': 'CheckInDate',
        'check_out_date': 'CheckOutDate',
        'eta': 'ETA',
        'etd': 'ETD',
        'check_in_date_actual': 'CheckInDateActual',
        'check_out_date_actual': 'CheckOutDateActual',
        'date_charged_to': 'DateChargedTo',
        'contract_date_start': 'ContractDateStart',
        'contract_date_end': 'ContractDateEnd',
        'resv_charge_to_entry': 'ResvChargeToEntry',
        'number_of_guests': 'NumberOfGuests',
        'number_of_guests_free': 'NumberOfGuestsFree',
        'number_of_children': 'NumberOfChildren',
        'number_of_children_free': 'NumberOfChildrenFree',
        'special_requirement': 'SpecialRequirement',
        'comments': 'Comments',
        'date_billed': 'DateBilled',
        'custom_bit1': 'CustomBit1',
        'custom_bit2': 'CustomBit2',
        'custom_bit3': 'CustomBit3',
        'custom_bit4': 'CustomBit4',
        'custom_string1': 'CustomString1',
        'custom_string2': 'CustomString2',
        'custom_string3': 'CustomString3',
        'custom_string4': 'CustomString4',
        'custom_string5': 'CustomString5',
        'custom_string6': 'CustomString6',
        'custom_string7': 'CustomString7',
        'custom_string8': 'CustomString8',
        'custom_string9': 'CustomString9',
        'custom_string10': 'CustomString10',
        'custom_date1': 'CustomDate1',
        'custom_date2': 'CustomDate2',
        'custom_date3': 'CustomDate3',
        'custom_date4': 'CustomDate4',
        'security_user_id': 'SecurityUserID',
        'date_modified_billing': 'DateModifiedBilling',
        'date_created': 'DateCreated',
        'timestamp': 'timestamp',
        'date_modified': 'DateModified'
    }

    def __init__(self, booking_id=None, room_space_id=None, entry_id=None, entry_status_enum=None, room_type_id=None, group_id=None, room_location_id=None, start_booking_reason_id=None, end_booking_reason_id=None, booking_type_id=None, room_rate_id=None, booking_link_type_enum=None, term_session_id=None, housekeeping_id=None, entry_invitation_id=None, room_location_fixed=None, room_rate_amount=None, check_in_date=None, check_out_date=None, eta=None, etd=None, check_in_date_actual=None, check_out_date_actual=None, date_charged_to=None, contract_date_start=None, contract_date_end=None, resv_charge_to_entry=None, number_of_guests=None, number_of_guests_free=None, number_of_children=None, number_of_children_free=None, special_requirement=None, comments=None, date_billed=None, custom_bit1=None, custom_bit2=None, custom_bit3=None, custom_bit4=None, custom_string1=None, custom_string2=None, custom_string3=None, custom_string4=None, custom_string5=None, custom_string6=None, custom_string7=None, custom_string8=None, custom_string9=None, custom_string10=None, custom_date1=None, custom_date2=None, custom_date3=None, custom_date4=None, security_user_id=None, date_modified_billing=None, date_created=None, timestamp=None, date_modified=None):  # noqa: E501
        """BookingItem - a model defined in Swagger"""  # noqa: E501

        self._booking_id = None
        self._room_space_id = None
        self._entry_id = None
        self._entry_status_enum = None
        self._room_type_id = None
        self._group_id = None
        self._room_location_id = None
        self._start_booking_reason_id = None
        self._end_booking_reason_id = None
        self._booking_type_id = None
        self._room_rate_id = None
        self._booking_link_type_enum = None
        self._term_session_id = None
        self._housekeeping_id = None
        self._entry_invitation_id = None
        self._room_location_fixed = None
        self._room_rate_amount = None
        self._check_in_date = None
        self._check_out_date = None
        self._eta = None
        self._etd = None
        self._check_in_date_actual = None
        self._check_out_date_actual = None
        self._date_charged_to = None
        self._contract_date_start = None
        self._contract_date_end = None
        self._resv_charge_to_entry = None
        self._number_of_guests = None
        self._number_of_guests_free = None
        self._number_of_children = None
        self._number_of_children_free = None
        self._special_requirement = None
        self._comments = None
        self._date_billed = None
        self._custom_bit1 = None
        self._custom_bit2 = None
        self._custom_bit3 = None
        self._custom_bit4 = None
        self._custom_string1 = None
        self._custom_string2 = None
        self._custom_string3 = None
        self._custom_string4 = None
        self._custom_string5 = None
        self._custom_string6 = None
        self._custom_string7 = None
        self._custom_string8 = None
        self._custom_string9 = None
        self._custom_string10 = None
        self._custom_date1 = None
        self._custom_date2 = None
        self._custom_date3 = None
        self._custom_date4 = None
        self._security_user_id = None
        self._date_modified_billing = None
        self._date_created = None
        self._timestamp = None
        self._date_modified = None
        self.discriminator = None

        if booking_id is not None:
            self.booking_id = booking_id
        if room_space_id is not None:
            self.room_space_id = room_space_id
        if entry_id is not None:
            self.entry_id = entry_id
        if entry_status_enum is not None:
            self.entry_status_enum = entry_status_enum
        if room_type_id is not None:
            self.room_type_id = room_type_id
        if group_id is not None:
            self.group_id = group_id
        if room_location_id is not None:
            self.room_location_id = room_location_id
        if start_booking_reason_id is not None:
            self.start_booking_reason_id = start_booking_reason_id
        if end_booking_reason_id is not None:
            self.end_booking_reason_id = end_booking_reason_id
        if booking_type_id is not None:
            self.booking_type_id = booking_type_id
        if room_rate_id is not None:
            self.room_rate_id = room_rate_id
        if booking_link_type_enum is not None:
            self.booking_link_type_enum = booking_link_type_enum
        if term_session_id is not None:
            self.term_session_id = term_session_id
        if housekeeping_id is not None:
            self.housekeeping_id = housekeeping_id
        if entry_invitation_id is not None:
            self.entry_invitation_id = entry_invitation_id
        if room_location_fixed is not None:
            self.room_location_fixed = room_location_fixed
        if room_rate_amount is not None:
            self.room_rate_amount = room_rate_amount
        if check_in_date is not None:
            self.check_in_date = check_in_date
        if check_out_date is not None:
            self.check_out_date = check_out_date
        if eta is not None:
            self.eta = eta
        if etd is not None:
            self.etd = etd
        if check_in_date_actual is not None:
            self.check_in_date_actual = check_in_date_actual
        if check_out_date_actual is not None:
            self.check_out_date_actual = check_out_date_actual
        if date_charged_to is not None:
            self.date_charged_to = date_charged_to
        if contract_date_start is not None:
            self.contract_date_start = contract_date_start
        if contract_date_end is not None:
            self.contract_date_end = contract_date_end
        if resv_charge_to_entry is not None:
            self.resv_charge_to_entry = resv_charge_to_entry
        if number_of_guests is not None:
            self.number_of_guests = number_of_guests
        if number_of_guests_free is not None:
            self.number_of_guests_free = number_of_guests_free
        if number_of_children is not None:
            self.number_of_children = number_of_children
        if number_of_children_free is not None:
            self.number_of_children_free = number_of_children_free
        if special_requirement is not None:
            self.special_requirement = special_requirement
        if comments is not None:
            self.comments = comments
        if date_billed is not None:
            self.date_billed = date_billed
        if custom_bit1 is not None:
            self.custom_bit1 = custom_bit1
        if custom_bit2 is not None:
            self.custom_bit2 = custom_bit2
        if custom_bit3 is not None:
            self.custom_bit3 = custom_bit3
        if custom_bit4 is not None:
            self.custom_bit4 = custom_bit4
        if custom_string1 is not None:
            self.custom_string1 = custom_string1
        if custom_string2 is not None:
            self.custom_string2 = custom_string2
        if custom_string3 is not None:
            self.custom_string3 = custom_string3
        if custom_string4 is not None:
            self.custom_string4 = custom_string4
        if custom_string5 is not None:
            self.custom_string5 = custom_string5
        if custom_string6 is not None:
            self.custom_string6 = custom_string6
        if custom_string7 is not None:
            self.custom_string7 = custom_string7
        if custom_string8 is not None:
            self.custom_string8 = custom_string8
        if custom_string9 is not None:
            self.custom_string9 = custom_string9
        if custom_string10 is not None:
            self.custom_string10 = custom_string10
        if custom_date1 is not None:
            self.custom_date1 = custom_date1
        if custom_date2 is not None:
            self.custom_date2 = custom_date2
        if custom_date3 is not None:
            self.custom_date3 = custom_date3
        if custom_date4 is not None:
            self.custom_date4 = custom_date4
        if security_user_id is not None:
            self.security_user_id = security_user_id
        if date_modified_billing is not None:
            self.date_modified_billing = date_modified_billing
        if date_created is not None:
            self.date_created = date_created
        if timestamp is not None:
            self.timestamp = timestamp
        if date_modified is not None:
            self.date_modified = date_modified

    @property
    def booking_id(self):
        """Gets the booking_id of this BookingItem.  # noqa: E501

        Booking  # noqa: E501

        :return: The booking_id of this BookingItem.  # noqa: E501
        :rtype: int
        """
        return self._booking_id

    @booking_id.setter
    def booking_id(self, booking_id):
        """Sets the booking_id of this BookingItem.

        Booking  # noqa: E501

        :param booking_id: The booking_id of this BookingItem.  # noqa: E501
        :type: int
        """

        self._booking_id = booking_id

    @property
    def room_space_id(self):
        """Gets the room_space_id of this BookingItem.  # noqa: E501

        Room Space  # noqa: E501

        :return: The room_space_id of this BookingItem.  # noqa: E501
        :rtype: int
        """
        return self._room_space_id

    @room_space_id.setter
    def room_space_id(self, room_space_id):
        """Sets the room_space_id of this BookingItem.

        Room Space  # noqa: E501

        :param room_space_id: The room_space_id of this BookingItem.  # noqa: E501
        :type: int
        """

        self._room_space_id = room_space_id

    @property
    def entry_id(self):
        """Gets the entry_id of this BookingItem.  # noqa: E501

        Entry  # noqa: E501

        :return: The entry_id of this BookingItem.  # noqa: E501
        :rtype: int
        """
        return self._entry_id

    @entry_id.setter
    def entry_id(self, entry_id):
        """Sets the entry_id of this BookingItem.

        Entry  # noqa: E501

        :param entry_id: The entry_id of this BookingItem.  # noqa: E501
        :type: int
        """

        self._entry_id = entry_id

    @property
    def entry_status_enum(self):
        """Gets the entry_status_enum of this BookingItem.  # noqa: E501

        Entry Status  # noqa: E501

        :return: The entry_status_enum of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._entry_status_enum

    @entry_status_enum.setter
    def entry_status_enum(self, entry_status_enum):
        """Sets the entry_status_enum of this BookingItem.

        Entry Status  # noqa: E501

        :param entry_status_enum: The entry_status_enum of this BookingItem.  # noqa: E501
        :type: str
        """

        self._entry_status_enum = entry_status_enum

    @property
    def room_type_id(self):
        """Gets the room_type_id of this BookingItem.  # noqa: E501

        Room Type  # noqa: E501

        :return: The room_type_id of this BookingItem.  # noqa: E501
        :rtype: int
        """
        return self._room_type_id

    @room_type_id.setter
    def room_type_id(self, room_type_id):
        """Sets the room_type_id of this BookingItem.

        Room Type  # noqa: E501

        :param room_type_id: The room_type_id of this BookingItem.  # noqa: E501
        :type: int
        """

        self._room_type_id = room_type_id

    @property
    def group_id(self):
        """Gets the group_id of this BookingItem.  # noqa: E501

        Group  # noqa: E501

        :return: The group_id of this BookingItem.  # noqa: E501
        :rtype: int
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id):
        """Sets the group_id of this BookingItem.

        Group  # noqa: E501

        :param group_id: The group_id of this BookingItem.  # noqa: E501
        :type: int
        """

        self._group_id = group_id

    @property
    def room_location_id(self):
        """Gets the room_location_id of this BookingItem.  # noqa: E501

        Room Location  # noqa: E501

        :return: The room_location_id of this BookingItem.  # noqa: E501
        :rtype: int
        """
        return self._room_location_id

    @room_location_id.setter
    def room_location_id(self, room_location_id):
        """Sets the room_location_id of this BookingItem.

        Room Location  # noqa: E501

        :param room_location_id: The room_location_id of this BookingItem.  # noqa: E501
        :type: int
        """

        self._room_location_id = room_location_id

    @property
    def start_booking_reason_id(self):
        """Gets the start_booking_reason_id of this BookingItem.  # noqa: E501

        Start Booking Reason  # noqa: E501

        :return: The start_booking_reason_id of this BookingItem.  # noqa: E501
        :rtype: int
        """
        return self._start_booking_reason_id

    @start_booking_reason_id.setter
    def start_booking_reason_id(self, start_booking_reason_id):
        """Sets the start_booking_reason_id of this BookingItem.

        Start Booking Reason  # noqa: E501

        :param start_booking_reason_id: The start_booking_reason_id of this BookingItem.  # noqa: E501
        :type: int
        """

        self._start_booking_reason_id = start_booking_reason_id

    @property
    def end_booking_reason_id(self):
        """Gets the end_booking_reason_id of this BookingItem.  # noqa: E501

        End Booking Reason  # noqa: E501

        :return: The end_booking_reason_id of this BookingItem.  # noqa: E501
        :rtype: int
        """
        return self._end_booking_reason_id

    @end_booking_reason_id.setter
    def end_booking_reason_id(self, end_booking_reason_id):
        """Sets the end_booking_reason_id of this BookingItem.

        End Booking Reason  # noqa: E501

        :param end_booking_reason_id: The end_booking_reason_id of this BookingItem.  # noqa: E501
        :type: int
        """

        self._end_booking_reason_id = end_booking_reason_id

    @property
    def booking_type_id(self):
        """Gets the booking_type_id of this BookingItem.  # noqa: E501

        Booking Type  # noqa: E501

        :return: The booking_type_id of this BookingItem.  # noqa: E501
        :rtype: int
        """
        return self._booking_type_id

    @booking_type_id.setter
    def booking_type_id(self, booking_type_id):
        """Sets the booking_type_id of this BookingItem.

        Booking Type  # noqa: E501

        :param booking_type_id: The booking_type_id of this BookingItem.  # noqa: E501
        :type: int
        """

        self._booking_type_id = booking_type_id

    @property
    def room_rate_id(self):
        """Gets the room_rate_id of this BookingItem.  # noqa: E501

        Room Rate  # noqa: E501

        :return: The room_rate_id of this BookingItem.  # noqa: E501
        :rtype: int
        """
        return self._room_rate_id

    @room_rate_id.setter
    def room_rate_id(self, room_rate_id):
        """Sets the room_rate_id of this BookingItem.

        Room Rate  # noqa: E501

        :param room_rate_id: The room_rate_id of this BookingItem.  # noqa: E501
        :type: int
        """

        self._room_rate_id = room_rate_id

    @property
    def booking_link_type_enum(self):
        """Gets the booking_link_type_enum of this BookingItem.  # noqa: E501

        Booking Link Type  # noqa: E501

        :return: The booking_link_type_enum of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._booking_link_type_enum

    @booking_link_type_enum.setter
    def booking_link_type_enum(self, booking_link_type_enum):
        """Sets the booking_link_type_enum of this BookingItem.

        Booking Link Type  # noqa: E501

        :param booking_link_type_enum: The booking_link_type_enum of this BookingItem.  # noqa: E501
        :type: str
        """

        self._booking_link_type_enum = booking_link_type_enum

    @property
    def term_session_id(self):
        """Gets the term_session_id of this BookingItem.  # noqa: E501

        Term Session  # noqa: E501

        :return: The term_session_id of this BookingItem.  # noqa: E501
        :rtype: int
        """
        return self._term_session_id

    @term_session_id.setter
    def term_session_id(self, term_session_id):
        """Sets the term_session_id of this BookingItem.

        Term Session  # noqa: E501

        :param term_session_id: The term_session_id of this BookingItem.  # noqa: E501
        :type: int
        """

        self._term_session_id = term_session_id

    @property
    def housekeeping_id(self):
        """Gets the housekeeping_id of this BookingItem.  # noqa: E501

        Housekeeping  # noqa: E501

        :return: The housekeeping_id of this BookingItem.  # noqa: E501
        :rtype: int
        """
        return self._housekeeping_id

    @housekeeping_id.setter
    def housekeeping_id(self, housekeeping_id):
        """Sets the housekeeping_id of this BookingItem.

        Housekeeping  # noqa: E501

        :param housekeeping_id: The housekeeping_id of this BookingItem.  # noqa: E501
        :type: int
        """

        self._housekeeping_id = housekeeping_id

    @property
    def entry_invitation_id(self):
        """Gets the entry_invitation_id of this BookingItem.  # noqa: E501

        Entry Invitation  # noqa: E501

        :return: The entry_invitation_id of this BookingItem.  # noqa: E501
        :rtype: int
        """
        return self._entry_invitation_id

    @entry_invitation_id.setter
    def entry_invitation_id(self, entry_invitation_id):
        """Sets the entry_invitation_id of this BookingItem.

        Entry Invitation  # noqa: E501

        :param entry_invitation_id: The entry_invitation_id of this BookingItem.  # noqa: E501
        :type: int
        """

        self._entry_invitation_id = entry_invitation_id

    @property
    def room_location_fixed(self):
        """Gets the room_location_fixed of this BookingItem.  # noqa: E501

        Room Location Fixed  # noqa: E501

        :return: The room_location_fixed of this BookingItem.  # noqa: E501
        :rtype: bool
        """
        return self._room_location_fixed

    @room_location_fixed.setter
    def room_location_fixed(self, room_location_fixed):
        """Sets the room_location_fixed of this BookingItem.

        Room Location Fixed  # noqa: E501

        :param room_location_fixed: The room_location_fixed of this BookingItem.  # noqa: E501
        :type: bool
        """

        self._room_location_fixed = room_location_fixed

    @property
    def room_rate_amount(self):
        """Gets the room_rate_amount of this BookingItem.  # noqa: E501

        Room Rate Amount  # noqa: E501

        :return: The room_rate_amount of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._room_rate_amount

    @room_rate_amount.setter
    def room_rate_amount(self, room_rate_amount):
        """Sets the room_rate_amount of this BookingItem.

        Room Rate Amount  # noqa: E501

        :param room_rate_amount: The room_rate_amount of this BookingItem.  # noqa: E501
        :type: str
        """

        self._room_rate_amount = room_rate_amount

    @property
    def check_in_date(self):
        """Gets the check_in_date of this BookingItem.  # noqa: E501

        Check In Date  # noqa: E501

        :return: The check_in_date of this BookingItem.  # noqa: E501
        :rtype: date
        """
        return self._check_in_date

    @check_in_date.setter
    def check_in_date(self, check_in_date):
        """Sets the check_in_date of this BookingItem.

        Check In Date  # noqa: E501

        :param check_in_date: The check_in_date of this BookingItem.  # noqa: E501
        :type: date
        """

        self._check_in_date = check_in_date

    @property
    def check_out_date(self):
        """Gets the check_out_date of this BookingItem.  # noqa: E501

        Check Out Date  # noqa: E501

        :return: The check_out_date of this BookingItem.  # noqa: E501
        :rtype: date
        """
        return self._check_out_date

    @check_out_date.setter
    def check_out_date(self, check_out_date):
        """Sets the check_out_date of this BookingItem.

        Check Out Date  # noqa: E501

        :param check_out_date: The check_out_date of this BookingItem.  # noqa: E501
        :type: date
        """

        self._check_out_date = check_out_date

    @property
    def eta(self):
        """Gets the eta of this BookingItem.  # noqa: E501

        ETA  # noqa: E501

        :return: The eta of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._eta

    @eta.setter
    def eta(self, eta):
        """Sets the eta of this BookingItem.

        ETA  # noqa: E501

        :param eta: The eta of this BookingItem.  # noqa: E501
        :type: str
        """

        self._eta = eta

    @property
    def etd(self):
        """Gets the etd of this BookingItem.  # noqa: E501

        ETD  # noqa: E501

        :return: The etd of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._etd

    @etd.setter
    def etd(self, etd):
        """Sets the etd of this BookingItem.

        ETD  # noqa: E501

        :param etd: The etd of this BookingItem.  # noqa: E501
        :type: str
        """

        self._etd = etd

    @property
    def check_in_date_actual(self):
        """Gets the check_in_date_actual of this BookingItem.  # noqa: E501

        Check In Date Actual  # noqa: E501

        :return: The check_in_date_actual of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._check_in_date_actual

    @check_in_date_actual.setter
    def check_in_date_actual(self, check_in_date_actual):
        """Sets the check_in_date_actual of this BookingItem.

        Check In Date Actual  # noqa: E501

        :param check_in_date_actual: The check_in_date_actual of this BookingItem.  # noqa: E501
        :type: str
        """

        self._check_in_date_actual = check_in_date_actual

    @property
    def check_out_date_actual(self):
        """Gets the check_out_date_actual of this BookingItem.  # noqa: E501

        Check Out Date Actual  # noqa: E501

        :return: The check_out_date_actual of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._check_out_date_actual

    @check_out_date_actual.setter
    def check_out_date_actual(self, check_out_date_actual):
        """Sets the check_out_date_actual of this BookingItem.

        Check Out Date Actual  # noqa: E501

        :param check_out_date_actual: The check_out_date_actual of this BookingItem.  # noqa: E501
        :type: str
        """

        self._check_out_date_actual = check_out_date_actual

    @property
    def date_charged_to(self):
        """Gets the date_charged_to of this BookingItem.  # noqa: E501

        Date Charged To  # noqa: E501

        :return: The date_charged_to of this BookingItem.  # noqa: E501
        :rtype: date
        """
        return self._date_charged_to

    @date_charged_to.setter
    def date_charged_to(self, date_charged_to):
        """Sets the date_charged_to of this BookingItem.

        Date Charged To  # noqa: E501

        :param date_charged_to: The date_charged_to of this BookingItem.  # noqa: E501
        :type: date
        """

        self._date_charged_to = date_charged_to

    @property
    def contract_date_start(self):
        """Gets the contract_date_start of this BookingItem.  # noqa: E501

        Contract Date Start  # noqa: E501

        :return: The contract_date_start of this BookingItem.  # noqa: E501
        :rtype: date
        """
        return self._contract_date_start

    @contract_date_start.setter
    def contract_date_start(self, contract_date_start):
        """Sets the contract_date_start of this BookingItem.

        Contract Date Start  # noqa: E501

        :param contract_date_start: The contract_date_start of this BookingItem.  # noqa: E501
        :type: date
        """

        self._contract_date_start = contract_date_start

    @property
    def contract_date_end(self):
        """Gets the contract_date_end of this BookingItem.  # noqa: E501

        Contract Date End  # noqa: E501

        :return: The contract_date_end of this BookingItem.  # noqa: E501
        :rtype: date
        """
        return self._contract_date_end

    @contract_date_end.setter
    def contract_date_end(self, contract_date_end):
        """Sets the contract_date_end of this BookingItem.

        Contract Date End  # noqa: E501

        :param contract_date_end: The contract_date_end of this BookingItem.  # noqa: E501
        :type: date
        """

        self._contract_date_end = contract_date_end

    @property
    def resv_charge_to_entry(self):
        """Gets the resv_charge_to_entry of this BookingItem.  # noqa: E501

        Resv Charge To Entry  # noqa: E501

        :return: The resv_charge_to_entry of this BookingItem.  # noqa: E501
        :rtype: bool
        """
        return self._resv_charge_to_entry

    @resv_charge_to_entry.setter
    def resv_charge_to_entry(self, resv_charge_to_entry):
        """Sets the resv_charge_to_entry of this BookingItem.

        Resv Charge To Entry  # noqa: E501

        :param resv_charge_to_entry: The resv_charge_to_entry of this BookingItem.  # noqa: E501
        :type: bool
        """

        self._resv_charge_to_entry = resv_charge_to_entry

    @property
    def number_of_guests(self):
        """Gets the number_of_guests of this BookingItem.  # noqa: E501

        Number Of Guests  # noqa: E501

        :return: The number_of_guests of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._number_of_guests

    @number_of_guests.setter
    def number_of_guests(self, number_of_guests):
        """Sets the number_of_guests of this BookingItem.

        Number Of Guests  # noqa: E501

        :param number_of_guests: The number_of_guests of this BookingItem.  # noqa: E501
        :type: str
        """

        self._number_of_guests = number_of_guests

    @property
    def number_of_guests_free(self):
        """Gets the number_of_guests_free of this BookingItem.  # noqa: E501

        Number Of Guests Free  # noqa: E501

        :return: The number_of_guests_free of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._number_of_guests_free

    @number_of_guests_free.setter
    def number_of_guests_free(self, number_of_guests_free):
        """Sets the number_of_guests_free of this BookingItem.

        Number Of Guests Free  # noqa: E501

        :param number_of_guests_free: The number_of_guests_free of this BookingItem.  # noqa: E501
        :type: str
        """

        self._number_of_guests_free = number_of_guests_free

    @property
    def number_of_children(self):
        """Gets the number_of_children of this BookingItem.  # noqa: E501

        Number Of Children  # noqa: E501

        :return: The number_of_children of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._number_of_children

    @number_of_children.setter
    def number_of_children(self, number_of_children):
        """Sets the number_of_children of this BookingItem.

        Number Of Children  # noqa: E501

        :param number_of_children: The number_of_children of this BookingItem.  # noqa: E501
        :type: str
        """

        self._number_of_children = number_of_children

    @property
    def number_of_children_free(self):
        """Gets the number_of_children_free of this BookingItem.  # noqa: E501

        Number Of Children Free  # noqa: E501

        :return: The number_of_children_free of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._number_of_children_free

    @number_of_children_free.setter
    def number_of_children_free(self, number_of_children_free):
        """Sets the number_of_children_free of this BookingItem.

        Number Of Children Free  # noqa: E501

        :param number_of_children_free: The number_of_children_free of this BookingItem.  # noqa: E501
        :type: str
        """

        self._number_of_children_free = number_of_children_free

    @property
    def special_requirement(self):
        """Gets the special_requirement of this BookingItem.  # noqa: E501

        Special Requirement  # noqa: E501

        :return: The special_requirement of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._special_requirement

    @special_requirement.setter
    def special_requirement(self, special_requirement):
        """Sets the special_requirement of this BookingItem.

        Special Requirement  # noqa: E501

        :param special_requirement: The special_requirement of this BookingItem.  # noqa: E501
        :type: str
        """
        if special_requirement is not None and len(special_requirement) > 100:
            raise ValueError("Invalid value for `special_requirement`, length must be less than or equal to `100`")  # noqa: E501

        self._special_requirement = special_requirement

    @property
    def comments(self):
        """Gets the comments of this BookingItem.  # noqa: E501

        Comments  # noqa: E501

        :return: The comments of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this BookingItem.

        Comments  # noqa: E501

        :param comments: The comments of this BookingItem.  # noqa: E501
        :type: str
        """
        if comments is not None and len(comments) > 1000:
            raise ValueError("Invalid value for `comments`, length must be less than or equal to `1000`")  # noqa: E501

        self._comments = comments

    @property
    def date_billed(self):
        """Gets the date_billed of this BookingItem.  # noqa: E501

        Date Billed  # noqa: E501

        :return: The date_billed of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._date_billed

    @date_billed.setter
    def date_billed(self, date_billed):
        """Sets the date_billed of this BookingItem.

        Date Billed  # noqa: E501

        :param date_billed: The date_billed of this BookingItem.  # noqa: E501
        :type: str
        """

        self._date_billed = date_billed

    @property
    def custom_bit1(self):
        """Gets the custom_bit1 of this BookingItem.  # noqa: E501

        Custom Flag 1  # noqa: E501

        :return: The custom_bit1 of this BookingItem.  # noqa: E501
        :rtype: bool
        """
        return self._custom_bit1

    @custom_bit1.setter
    def custom_bit1(self, custom_bit1):
        """Sets the custom_bit1 of this BookingItem.

        Custom Flag 1  # noqa: E501

        :param custom_bit1: The custom_bit1 of this BookingItem.  # noqa: E501
        :type: bool
        """

        self._custom_bit1 = custom_bit1

    @property
    def custom_bit2(self):
        """Gets the custom_bit2 of this BookingItem.  # noqa: E501

        Custom Flag 2  # noqa: E501

        :return: The custom_bit2 of this BookingItem.  # noqa: E501
        :rtype: bool
        """
        return self._custom_bit2

    @custom_bit2.setter
    def custom_bit2(self, custom_bit2):
        """Sets the custom_bit2 of this BookingItem.

        Custom Flag 2  # noqa: E501

        :param custom_bit2: The custom_bit2 of this BookingItem.  # noqa: E501
        :type: bool
        """

        self._custom_bit2 = custom_bit2

    @property
    def custom_bit3(self):
        """Gets the custom_bit3 of this BookingItem.  # noqa: E501

        Custom Flag 3  # noqa: E501

        :return: The custom_bit3 of this BookingItem.  # noqa: E501
        :rtype: bool
        """
        return self._custom_bit3

    @custom_bit3.setter
    def custom_bit3(self, custom_bit3):
        """Sets the custom_bit3 of this BookingItem.

        Custom Flag 3  # noqa: E501

        :param custom_bit3: The custom_bit3 of this BookingItem.  # noqa: E501
        :type: bool
        """

        self._custom_bit3 = custom_bit3

    @property
    def custom_bit4(self):
        """Gets the custom_bit4 of this BookingItem.  # noqa: E501

        Custom Flag 4  # noqa: E501

        :return: The custom_bit4 of this BookingItem.  # noqa: E501
        :rtype: bool
        """
        return self._custom_bit4

    @custom_bit4.setter
    def custom_bit4(self, custom_bit4):
        """Sets the custom_bit4 of this BookingItem.

        Custom Flag 4  # noqa: E501

        :param custom_bit4: The custom_bit4 of this BookingItem.  # noqa: E501
        :type: bool
        """

        self._custom_bit4 = custom_bit4

    @property
    def custom_string1(self):
        """Gets the custom_string1 of this BookingItem.  # noqa: E501

        Custom String 1  # noqa: E501

        :return: The custom_string1 of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string1

    @custom_string1.setter
    def custom_string1(self, custom_string1):
        """Sets the custom_string1 of this BookingItem.

        Custom String 1  # noqa: E501

        :param custom_string1: The custom_string1 of this BookingItem.  # noqa: E501
        :type: str
        """
        if custom_string1 is not None and len(custom_string1) > 200:
            raise ValueError("Invalid value for `custom_string1`, length must be less than or equal to `200`")  # noqa: E501

        self._custom_string1 = custom_string1

    @property
    def custom_string2(self):
        """Gets the custom_string2 of this BookingItem.  # noqa: E501

        Custom String 2  # noqa: E501

        :return: The custom_string2 of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string2

    @custom_string2.setter
    def custom_string2(self, custom_string2):
        """Sets the custom_string2 of this BookingItem.

        Custom String 2  # noqa: E501

        :param custom_string2: The custom_string2 of this BookingItem.  # noqa: E501
        :type: str
        """
        if custom_string2 is not None and len(custom_string2) > 200:
            raise ValueError("Invalid value for `custom_string2`, length must be less than or equal to `200`")  # noqa: E501

        self._custom_string2 = custom_string2

    @property
    def custom_string3(self):
        """Gets the custom_string3 of this BookingItem.  # noqa: E501

        Custom String 3  # noqa: E501

        :return: The custom_string3 of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string3

    @custom_string3.setter
    def custom_string3(self, custom_string3):
        """Sets the custom_string3 of this BookingItem.

        Custom String 3  # noqa: E501

        :param custom_string3: The custom_string3 of this BookingItem.  # noqa: E501
        :type: str
        """
        if custom_string3 is not None and len(custom_string3) > 200:
            raise ValueError("Invalid value for `custom_string3`, length must be less than or equal to `200`")  # noqa: E501

        self._custom_string3 = custom_string3

    @property
    def custom_string4(self):
        """Gets the custom_string4 of this BookingItem.  # noqa: E501

        Custom String 4  # noqa: E501

        :return: The custom_string4 of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string4

    @custom_string4.setter
    def custom_string4(self, custom_string4):
        """Sets the custom_string4 of this BookingItem.

        Custom String 4  # noqa: E501

        :param custom_string4: The custom_string4 of this BookingItem.  # noqa: E501
        :type: str
        """
        if custom_string4 is not None and len(custom_string4) > 200:
            raise ValueError("Invalid value for `custom_string4`, length must be less than or equal to `200`")  # noqa: E501

        self._custom_string4 = custom_string4

    @property
    def custom_string5(self):
        """Gets the custom_string5 of this BookingItem.  # noqa: E501

        Custom String 5  # noqa: E501

        :return: The custom_string5 of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string5

    @custom_string5.setter
    def custom_string5(self, custom_string5):
        """Sets the custom_string5 of this BookingItem.

        Custom String 5  # noqa: E501

        :param custom_string5: The custom_string5 of this BookingItem.  # noqa: E501
        :type: str
        """
        if custom_string5 is not None and len(custom_string5) > 200:
            raise ValueError("Invalid value for `custom_string5`, length must be less than or equal to `200`")  # noqa: E501

        self._custom_string5 = custom_string5

    @property
    def custom_string6(self):
        """Gets the custom_string6 of this BookingItem.  # noqa: E501

        Custom String 6  # noqa: E501

        :return: The custom_string6 of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string6

    @custom_string6.setter
    def custom_string6(self, custom_string6):
        """Sets the custom_string6 of this BookingItem.

        Custom String 6  # noqa: E501

        :param custom_string6: The custom_string6 of this BookingItem.  # noqa: E501
        :type: str
        """
        if custom_string6 is not None and len(custom_string6) > 200:
            raise ValueError("Invalid value for `custom_string6`, length must be less than or equal to `200`")  # noqa: E501

        self._custom_string6 = custom_string6

    @property
    def custom_string7(self):
        """Gets the custom_string7 of this BookingItem.  # noqa: E501

        Custom String 7  # noqa: E501

        :return: The custom_string7 of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string7

    @custom_string7.setter
    def custom_string7(self, custom_string7):
        """Sets the custom_string7 of this BookingItem.

        Custom String 7  # noqa: E501

        :param custom_string7: The custom_string7 of this BookingItem.  # noqa: E501
        :type: str
        """
        if custom_string7 is not None and len(custom_string7) > 200:
            raise ValueError("Invalid value for `custom_string7`, length must be less than or equal to `200`")  # noqa: E501

        self._custom_string7 = custom_string7

    @property
    def custom_string8(self):
        """Gets the custom_string8 of this BookingItem.  # noqa: E501

        Custom String 8  # noqa: E501

        :return: The custom_string8 of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string8

    @custom_string8.setter
    def custom_string8(self, custom_string8):
        """Sets the custom_string8 of this BookingItem.

        Custom String 8  # noqa: E501

        :param custom_string8: The custom_string8 of this BookingItem.  # noqa: E501
        :type: str
        """
        if custom_string8 is not None and len(custom_string8) > 200:
            raise ValueError("Invalid value for `custom_string8`, length must be less than or equal to `200`")  # noqa: E501

        self._custom_string8 = custom_string8

    @property
    def custom_string9(self):
        """Gets the custom_string9 of this BookingItem.  # noqa: E501

        Custom String 9  # noqa: E501

        :return: The custom_string9 of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string9

    @custom_string9.setter
    def custom_string9(self, custom_string9):
        """Sets the custom_string9 of this BookingItem.

        Custom String 9  # noqa: E501

        :param custom_string9: The custom_string9 of this BookingItem.  # noqa: E501
        :type: str
        """
        if custom_string9 is not None and len(custom_string9) > 200:
            raise ValueError("Invalid value for `custom_string9`, length must be less than or equal to `200`")  # noqa: E501

        self._custom_string9 = custom_string9

    @property
    def custom_string10(self):
        """Gets the custom_string10 of this BookingItem.  # noqa: E501

        Custom String 10  # noqa: E501

        :return: The custom_string10 of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_string10

    @custom_string10.setter
    def custom_string10(self, custom_string10):
        """Sets the custom_string10 of this BookingItem.

        Custom String 10  # noqa: E501

        :param custom_string10: The custom_string10 of this BookingItem.  # noqa: E501
        :type: str
        """
        if custom_string10 is not None and len(custom_string10) > 200:
            raise ValueError("Invalid value for `custom_string10`, length must be less than or equal to `200`")  # noqa: E501

        self._custom_string10 = custom_string10

    @property
    def custom_date1(self):
        """Gets the custom_date1 of this BookingItem.  # noqa: E501

        Custom Date 1  # noqa: E501

        :return: The custom_date1 of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_date1

    @custom_date1.setter
    def custom_date1(self, custom_date1):
        """Sets the custom_date1 of this BookingItem.

        Custom Date 1  # noqa: E501

        :param custom_date1: The custom_date1 of this BookingItem.  # noqa: E501
        :type: str
        """

        self._custom_date1 = custom_date1

    @property
    def custom_date2(self):
        """Gets the custom_date2 of this BookingItem.  # noqa: E501

        Custom Date 2  # noqa: E501

        :return: The custom_date2 of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_date2

    @custom_date2.setter
    def custom_date2(self, custom_date2):
        """Sets the custom_date2 of this BookingItem.

        Custom Date 2  # noqa: E501

        :param custom_date2: The custom_date2 of this BookingItem.  # noqa: E501
        :type: str
        """

        self._custom_date2 = custom_date2

    @property
    def custom_date3(self):
        """Gets the custom_date3 of this BookingItem.  # noqa: E501

        Custom Date 3  # noqa: E501

        :return: The custom_date3 of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_date3

    @custom_date3.setter
    def custom_date3(self, custom_date3):
        """Sets the custom_date3 of this BookingItem.

        Custom Date 3  # noqa: E501

        :param custom_date3: The custom_date3 of this BookingItem.  # noqa: E501
        :type: str
        """

        self._custom_date3 = custom_date3

    @property
    def custom_date4(self):
        """Gets the custom_date4 of this BookingItem.  # noqa: E501

        Custom Date 4  # noqa: E501

        :return: The custom_date4 of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._custom_date4

    @custom_date4.setter
    def custom_date4(self, custom_date4):
        """Sets the custom_date4 of this BookingItem.

        Custom Date 4  # noqa: E501

        :param custom_date4: The custom_date4 of this BookingItem.  # noqa: E501
        :type: str
        """

        self._custom_date4 = custom_date4

    @property
    def security_user_id(self):
        """Gets the security_user_id of this BookingItem.  # noqa: E501

        Security User  # noqa: E501

        :return: The security_user_id of this BookingItem.  # noqa: E501
        :rtype: int
        """
        return self._security_user_id

    @security_user_id.setter
    def security_user_id(self, security_user_id):
        """Sets the security_user_id of this BookingItem.

        Security User  # noqa: E501

        :param security_user_id: The security_user_id of this BookingItem.  # noqa: E501
        :type: int
        """

        self._security_user_id = security_user_id

    @property
    def date_modified_billing(self):
        """Gets the date_modified_billing of this BookingItem.  # noqa: E501

        Date Modified Billing  # noqa: E501

        :return: The date_modified_billing of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified_billing

    @date_modified_billing.setter
    def date_modified_billing(self, date_modified_billing):
        """Sets the date_modified_billing of this BookingItem.

        Date Modified Billing  # noqa: E501

        :param date_modified_billing: The date_modified_billing of this BookingItem.  # noqa: E501
        :type: str
        """

        self._date_modified_billing = date_modified_billing

    @property
    def date_created(self):
        """Gets the date_created of this BookingItem.  # noqa: E501

        Date Created  # noqa: E501

        :return: The date_created of this BookingItem.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this BookingItem.

        Date Created  # noqa: E501

        :param date_created: The date_created of this BookingItem.  # noqa: E501
        :type: datetime
        """

        self._date_created = date_created

    @property
    def timestamp(self):
        """Gets the timestamp of this BookingItem.  # noqa: E501

        Timestamp  # noqa: E501

        :return: The timestamp of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this BookingItem.

        Timestamp  # noqa: E501

        :param timestamp: The timestamp of this BookingItem.  # noqa: E501
        :type: str
        """
        if timestamp is not None and len(timestamp) > 8:
            raise ValueError("Invalid value for `timestamp`, length must be less than or equal to `8`")  # noqa: E501

        self._timestamp = timestamp

    @property
    def date_modified(self):
        """Gets the date_modified of this BookingItem.  # noqa: E501

        Date Modified  # noqa: E501

        :return: The date_modified of this BookingItem.  # noqa: E501
        :rtype: str
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this BookingItem.

        Date Modified  # noqa: E501

        :param date_modified: The date_modified of this BookingItem.  # noqa: E501
        :type: str
        """

        self._date_modified = date_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BookingItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
